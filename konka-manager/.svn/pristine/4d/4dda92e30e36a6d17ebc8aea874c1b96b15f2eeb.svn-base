<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SHOP_MEMBER">

	<typeAlias alias="shopMember" type="com.ebiz.mmt.domain.ShopMember" />

	

	<resultMap id="shopMemberResultForList" class="shopMember">
		<result column="MEMBER_ID" property="member_id" jdbcType="DECIMAL" />
		<result column="SHOP_ID" property="shop_id" jdbcType="DECIMAL" />
		<result column="MEMBER_TYPE" property="member_type" jdbcType="DECIMAL" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATE" />
		<result column="ADDER_ID" property="adder_id" jdbcType="DECIMAL" />
		<result column="STATE" property="state" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="shopMemberSumResult" class="shopMember">
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="user_name" jdbcType="VARCHAR" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATE" />
		<result column="STATE" property="state" jdbcType="DECIMAL" />
		<result column="SHOP_ID" property="shop_id" jdbcType="DECIMAL" />
		<result column="SHOPNUMBER" property="shopNumber" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="shopMemberResult" class="shopMember" extends="shopMemberResultForList">
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="MEMBERNAME" property="memberName" jdbcType="VARCHAR" />
		<result column="ADDNAME" property="addName" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-shopMember">
		<isNotEmpty prepend=" and " property="member_id">MEMBER_ID = #member_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_id">SHOP_ID = #shop_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="member_type">MEMBER_TYPE = #member_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">ADD_DATE = #add_date:DATE#</isNotEmpty>
		<isNotEmpty prepend=" and " property="adder_id">ADDER_ID = #adder_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="state">STATE = #state:DECIMAL#</isNotEmpty>
	</sql>

	<select id="selectShopMember" resultMap="shopMemberResultForList" parameterClass="shopMember"
		>
		select * from SHOP_MEMBER where 1 = 1
		<include refid="sf-shopMember" />
	</select>

	<select id="selectShopMemberList" resultMap="shopMemberResultForList" parameterClass="shopMember"
		>
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from SHOP_MEMBER where 1 = 1
		<include refid="sf-shopMember" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectShopMemberCount" resultClass="long" parameterClass="shopMember" >
		select count(*) from ( 
		select d.*,e.user_name as addName from( select a.*,b.shop_name,c.user_name as memberName from SHOP_MEMBER
		a,ENTP_SHOP b,USER_INFO c where a.shop_id = b.shop_id and a.member_id = c.id 
		<isNotEmpty prepend=" and " property="memberName">UPPER(c.user_name) like '%' || UPPER(#memberName:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="member_id">a.MEMBER_ID = #member_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_id">a.SHOP_ID = #shop_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="member_type">a.MEMBER_TYPE = #member_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">a.ADD_DATE = #add_date:DATE#</isNotEmpty>
		<isNotEmpty prepend=" and " property="adder_id">a.ADDER_ID = #adder_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="state">a.STATE = #state:DECIMAL#</isNotEmpty>
		) d,USER_INFO e where d.adder_id = e.id)
	</select>

	<select id="selectShopMemberPaginatedList" resultMap="shopMemberResult" parameterClass="shopMember"
		>
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select d.*,e.user_name as addName from( select a.*,b.shop_name,c.user_name as memberName from SHOP_MEMBER
		a,ENTP_SHOP b,USER_INFO c where a.shop_id = b.shop_id and a.member_id = c.id 
		<isNotEmpty prepend=" and " property="memberName">UPPER(c.user_name) like '%' || UPPER(#memberName:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="member_id">a.MEMBER_ID = #member_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_id">a.SHOP_ID = #shop_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="member_type">a.MEMBER_TYPE = #member_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">a.ADD_DATE = #add_date:DATE#</isNotEmpty>
		<isNotEmpty prepend=" and " property="adder_id">a.ADDER_ID = #adder_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="state">a.STATE = #state:DECIMAL#</isNotEmpty>
		) d,USER_INFO e where d.adder_id = e.id

		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<select id="selectShopMemberSumCount" resultClass="long" parameterClass="shopMember" >
		select count(*) from ( 
		select e.*,value(f.shopNumber,0) as shopNumber from (select b.shop_name, b.shop_id, c.user_name, b.add_date, b.state

		from ENTP_SHOP b left join USER_INFO c on b.host_id = c.id where 1 = 1 
		 <isNotEmpty prepend=" and " property="shop_name">UPPER(b.SHOP_NAME) like '%' || UPPER(#shop_name:VARCHAR#) || '%'</isNotEmpty>
		) e left join 

		(select b.shop_id, count(a.rowid) as shopNumber from SHOP_MEMBER b left join Shop_Member a on a.shop_id =
		b.shop_id and a.member_id = b.member_id and a.state = 0 group by b.shop_id) f on e.shop_id = f.shop_id
		)
	</select>

	<select id="selectShopMemberSumPaginatedList" resultMap="shopMemberSumResult" parameterClass="shopMember"
		>
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select e.*,value(f.shopNumber,0) as shopNumber from (select b.shop_name, b.shop_id, c.user_name, b.add_date, b.state

		from ENTP_SHOP b left join USER_INFO c on b.host_id = c.id where 1 = 1 
		<isNotEmpty prepend=" and " property="shop_name">UPPER(b.SHOP_NAME) like '%' || UPPER(#shop_name:VARCHAR#) || '%'</isNotEmpty>
		) e left join 

		(select b.shop_id, count(a.rowid) as shopNumber from SHOP_MEMBER b left join Shop_Member a on a.shop_id =
		b.shop_id and a.member_id = b.member_id and a.state = 0 group by b.shop_id) f on e.shop_id = f.shop_id
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertShopMember" parameterClass="shopMember">
		<![CDATA[
		insert into SHOP_MEMBER 
		(
			MEMBER_ID,
			SHOP_ID,
			MEMBER_TYPE,
			ADD_DATE,
			ADDER_ID,
			STATE
		) 
		values 
		(
			#member_id:DECIMAL#,
			#shop_id:DECIMAL#,
			#member_type:DECIMAL#,
			#add_date:DATE#,
			#adder_id:DECIMAL#,
			#state:DECIMAL#
		)
		]]>
	</insert>

	<update id="updateShopMember" parameterClass="shopMember">
		update SHOP_MEMBER
		<dynamic prepend="set">
			<isNotNull prepend="," property="member_id">MEMBER_ID = #member_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shop_id">SHOP_ID = #shop_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="member_type">MEMBER_TYPE = #member_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:DATE#</isNotNull>
			<isNotNull prepend="," property="adder_id">ADDER_ID = #adder_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="state">STATE = #state:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="member_id">
			MEMBER_ID = #member_id# and SHOP_ID = #shop_id:DECIMAL#
		</isNotEmpty>
		<isEmpty prepend=" " property="member_id">
			<isNotEmpty prepend=" " property="map.pks">
				MEMBER_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
			and SHOP_ID = #shop_id:DECIMAL#
		</isEmpty>
	</update>

	<update id="deleteShopMember" parameterClass="shopMember">
		update SHOP_MEMBER set STATE = 1 where
		<isNotEmpty prepend=" " property="member_id">
			<isNotEmpty prepend=" " property="shop_id">
				MEMBER_ID = #member_id# and SHOP_ID = #shop_id:DECIMAL#
			</isNotEmpty>
		</isNotEmpty>
		<isEmpty prepend=" " property="member_id">
			<isNotEmpty prepend=" " property="map.pks">
				MEMBER_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
			and SHOP_ID = #shop_id:DECIMAL#
		</isEmpty>
	</update>

</sqlMap>