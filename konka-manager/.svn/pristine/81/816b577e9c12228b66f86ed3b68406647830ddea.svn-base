package com.ebiz.mmt.service;

import java.util.HashMap;
import java.util.List;
import java.util.Set;

import com.ebiz.mmt.domain.EntpShop;
import com.ebiz.mmt.domain.JBasePartner;
import com.ebiz.mmt.domain.KonkaR3Shop;

/**
 * Code by AutoGenerated Builder AutoGenerated Builder Version 2.1
 * 
 * @author Hui,Gang
 * @datetime 2011-09-24 14:50:49
 */
public interface KonkaR3ShopService {

	Long createKonkaR3Shop(KonkaR3Shop t);

	int modifyKonkaR3Shop(KonkaR3Shop t);

	int removeKonkaR3Shop(KonkaR3Shop t);

	KonkaR3Shop getKonkaR3ShopForResult(KonkaR3Shop t);

	KonkaR3Shop getKonkaR3Shop(KonkaR3Shop t);

	KonkaR3Shop getKonkaR3ShopSimpleStat(KonkaR3Shop t);

	/** Li,Ka :网点端进货选择康佳品牌时，通过shop_id查询其代理商（供应商） */
	KonkaR3Shop getKonkaR3ShopByShopId(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopList(KonkaR3Shop t);

	Long getKonkaR3ShopCount(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopPaginatedList(KonkaR3Shop t);

	void create(KonkaR3Shop r3Shop, EntpShop entpShop);

	/**
	 * @author wangyang 根据业务数据上报时间取R3网点
	 */
	Long getKonkaR3ShopCountByAddDate(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopPaginatedListByAddDate(KonkaR3Shop t);

	/**
	 * @author Zhang,Xufeng 查询已分配(不一定匹配）的 R3 网点
	 */
	List<KonkaR3Shop> getKonkaR3ShopMatchAndAssignList(KonkaR3Shop t);

	/**
	 * @author Jiang,JiaYong
	 * @version 2013-08-29
	 */
	List<KonkaR3Shop> getKonkaR3ShopStockByR3CodeList(KonkaR3Shop t);

	/**
	 * @author Zhang,Xufeng 查询已分配(不一定匹配）的 R3 网点
	 */
	List<KonkaR3Shop> getKonkaR3ShopMatchAndAssignPaginatedList(KonkaR3Shop t);

	Long getKonkaR3ShopMatchAndAssignCount(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopGroupByHandleName(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopGroupByBranchAreaName(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopPaginatedListForStat(KonkaR3Shop t);

	Long getKonkaR3ShopCountForHandle(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopPaginatedListGroupByName(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopStaticsGroupByFGS(KonkaR3Shop t);

	/**
	 * @author Ren,zhong
	 * @date 2013-06-06
	 */
	Long createKonkaR3ShopWithPeProdUser(KonkaR3Shop t);

	/**
	 * @author Ren,zhong
	 * @date 2013-06-06
	 */
	int modifyKonkaR3ShopWithPeProdUser(KonkaR3Shop t);

	/**
	 * @author Ren,zhong
	 * @date 2013-06-09
	 */
	KonkaR3Shop getKonkaR3ShopWithBranchAssign(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @date 2013-06-25
	 */
	Long createKonkaR3ShopForTb();

	/**
	 * @author pan,gang
	 * @date 2013-7-5
	 */
	List<KonkaR3Shop> getKonkaR3ShopForYwyPaginatedList(KonkaR3Shop t);

	/**
	 * @author ZHOU
	 * @date 2013-7-12
	 * @param customer_code
	 * @param ids
	 */
	void modifyKonkaR3ShopBatch(String customer_code, Set<String> set);

	/**
	 * @author ZHOU
	 * @param t
	 *            分公司
	 * @return 经办信息列表
	 */
	List<KonkaR3Shop> getJBDataBydeptName(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-08-11
	 * @return 返回R3客户列表
	 */
	List<KonkaR3Shop> getKonkaR3ShopListByUserName(KonkaR3Shop t);

	/**
	 * @author Liu,ZhiXiang
	 * @version 2013-08-29
	 * @return 新增客户信息以及客户联系人信息
	 */
	Long createKonkaR3ShopAndLink(KonkaR3Shop t);

	/**
	 * @author Liu,ZhiXiang
	 * @version 2013-08-29
	 * @return 修改客户信息以及客户联系人信息
	 */
	int modifyKonkaR3ShopAndLink(KonkaR3Shop t);

	/**
	 * @author Pan,Gang
	 * @date 2013-09-06
	 */
	Long createKonkaR3ShopWithJBasePartner(JBasePartner t) throws Exception;

	int modifyKonkaR3ShopWithJBasePartner(JBasePartner t) throws Exception;

	/**
	 * 
	 * 用于手工执行客户同步的方法
	 * 
	 * @author ZHOU
	 * @param bukrs
	 * @param str_date
	 * @param kunnrs
	 *            用于过滤返回值的客户编码
	 * @return
	 */
	Long createKonkaR3ShopForTb2(String bukrs, String str_date, String[] kunnr);

	/**
	 * 根据客户编码获取该客户所属部门ID
	 * 
	 * @param r3code
	 * @return
	 */
	Long getDeptIdOfKonkaR3Code(String r3code);

	/**
	 * @author Liu,ZhiXiang
	 * @version 2013-09-23
	 * @return 根据p_index查询所能获取到的客户数量
	 */
	List<KonkaR3Shop> getKonkaR3ShopCountByPIndex(KonkaR3Shop t);

	/**
	 * @author Liu,ZhiXiang
	 * @version 2013-09-23
	 * @return 根据p_index查询所能获取到的客户销售额
	 */
	List<KonkaR3Shop> getKonkaR3ShopListByPIndex(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-09
	 * @return 根据用户ID查询客户R3_CODE
	 */
	List<KonkaR3Shop> getKonkaR3ShopForUserIdList(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-14
	 */
	Long getKonkaR3ShopForYwyCount(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-28
	 */
	Long getKonkaR3ShopForOrderCount(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-28
	 */
	List<KonkaR3Shop> getKonkaR3ShopForOrderList(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-12-04
	 */
	Long getKonkaR3ShopForStocksCount(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-12-04
	 */
	List<KonkaR3Shop> getKonkaR3ShopForStocksList(KonkaR3Shop t);

	/**
	 * 订货会 参会客户自动提出
	 * 
	 * @author Zhang,Chao
	 * @version 2014-01-25
	 */
	Long getKonkaR3ShopResultListByViewCustomerCount(KonkaR3Shop t);

	/**
	 * 订货会 参会客户自动提出
	 * 
	 * @author Zhang,Chao
	 * @version 2014-01-25
	 */
	List<KonkaR3Shop> getKonkaR3ShopResultListByViewCustomerList(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopListForYwyAndJb(KonkaR3Shop t);

	/**
	 * 合作伙伴关系R3编码
	 * 
	 * @author Xiao,GuoJian
	 * @version 2014-05-05
	 */
	Long getKonkaR3ShopForR3CodeCount(KonkaR3Shop t);

	/**
	 * 合作伙伴关系R3编码
	 * 
	 * @author Xiao,GuoJian
	 * @date 2014-05-05
	 */
	List<KonkaR3Shop> getKonkaR3ShopForR3CodePaginatedList(KonkaR3Shop t);

	List<KonkaR3Shop> getKonkaR3ShopForCustVisit(KonkaR3Shop entity);

	List<KonkaR3Shop> exportData(KonkaR3Shop t);

	// 客户 零售 结算 汇款统计count
	Long getKonkaR3ShopMoneryPaginatedListCount(KonkaR3Shop t);

	// 客户 零售 结算 汇款统计list
	List<HashMap> getKonkaR3ShopMoneryPaginatedList(KonkaR3Shop t);

	HashMap getKonkaR3ShopOrJbasePartner(KonkaR3Shop t);

	/**
	 * R3合并客户查询统计
	 * 
	 * @author Liang,HouEn 2014-9-16
	 * @param t
	 * @return
	 */
	Long getMergeR3ShopCount(KonkaR3Shop t);

	/**
	 * 统计结算客户数
	 * 
	 * @author Liang,HouEn 2014-9-17
	 * @param t
	 * @return
	 */
	Long getMergeR3ShopcustCount(KonkaR3Shop t);

	/**
	 * R3合并客户查询
	 * 
	 * @author Liang,HouEn 2014-9-16
	 * @param t
	 * @return
	 */
	List<HashMap> getMergeR3ShopList(KonkaR3Shop t);

	/**
	 * 查询客户信息包括本月是否结转以及上月是否全部盘点
	 * 
	 * @param t
	 * @return
	 */
	Long getKonkaR3ShopWithJzAndPdCount(KonkaR3Shop t);

	/**
	 * 查询客户信息包括本月是否结转以及上月是否全部盘点
	 * 
	 * @param t
	 * @return
	 */
	List<KonkaR3Shop> getKonkaR3ShopWithJzAndPdList(KonkaR3Shop t);

	/**
	 * 查询客户信息包括本月是否结转以及上月是否全部盘点
	 * 
	 * @param t
	 * @return
	 */
	List<KonkaR3Shop> getKonkaR3ShopWithJzAndPdPaginatedList(KonkaR3Shop t);
	
	/**
	 * 查询用于创建网点的客户列表
	 * @author Liang,HouEn
	 * 2014-12-17
	 * @param t
	 * @return
	 */
	List<KonkaR3Shop> getShopForAgent(KonkaR3Shop t);
	
	/**
	 * 根据ID修改客户信息
	 * @param t
	 * @return
	 */
	int modifyKonkaR3ShopByID(KonkaR3Shop t);
}