<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="J_STOCKS_STORE_SUMMARY">

	<typeAlias alias="jStocksStoreSummary" type="com.ebiz.mmt.domain.JStocksStoreSummary" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertJStocksStoreSummary" />
		<flushOnExecute statement="updateJStocksStoreSummary" />
		<flushOnExecute statement="deleteJStocksStoreSummary" />
	</cacheModel>

	<resultMap id="jStocksStoreSummaryResultForList" class="jStocksStoreSummary">
		<result column="ID" property="id" jdbcType="BIGINT" />
		<result column="C_ID" property="c_id" jdbcType="BIGINT" />
		<result column="R3_CODE" property="r3_code" jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="customer_name" jdbcType="VARCHAR" />
		<result column="STORE_ID" property="store_id" jdbcType="BIGINT" />
		<result column="GOODS_ID" property="goods_id" jdbcType="BIGINT" />
		<result column="GOODS_NAME" property="goods_name" jdbcType="VARCHAR" />
		<result column="OPR_DATE" property="opr_date" jdbcType="TIMESTAMP" />
		<result column="INIT_NUM" property="init_num" jdbcType="DECIMAL" />
		<result column="COME_NUM" property="come_num" jdbcType="DECIMAL" />
		<result column="COME_MONEY" property="come_money" jdbcType="DECIMAL" />
		<result column="OUT_NUM" property="out_num" jdbcType="DECIMAL" />
		<result column="OUT_MONEY" property="out_money" jdbcType="DECIMAL" />
		<result column="ADD_DATE" property="add_date" jdbcType="TIMESTAMP" />
		<result column="INIT_MONEY" property="init_money" jdbcType="DECIMAL" />
		<result column="SALE_COST" property="sale_cost" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="jStocksStoreSummaryResultForR3Shop" class="jStocksStoreSummary" extends="jStocksStoreSummaryResultForList">
		<result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
		<result column="PAR_CUSTOMER_TYPE_NAME" property="map.par_cust_type_name" jdbcType="VARCHAR" />
		<result column="CUSTOMER_TYPE_NAME" property="map.cust_type_name" jdbcType="VARCHAR" />
		<result column="HANDLE_NAME" property="map.handle_name" jdbcType="VARCHAR" />
		<result column="cur_num" property="map.cur_num" jdbcType="DECIMAL" />
		<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
		<result column="STORE_SN" property="map.store_sn" jdbcType="VARCHAR" />
		<result column="SALE_R3_CODE" property="map.sale_r3_code" jdbcType="VARCHAR" />
		<result column="ZZTS" property="map.zzts" jdbcType="BIGINT" />
		<!-- zzts 周转天数 --> 
	</resultMap>

	<sql id="sf-jStocksStoreSummary">
		<isNotEmpty prepend=" and " property="id">ID = #id:BIGINT#</isNotEmpty>
		<isNotEmpty prepend=" and " property="c_id">C_ID = #c_id:BIGINT#</isNotEmpty>
		<isNotEmpty prepend=" and " property="r3_code">a.R3_CODE = #r3_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_name">CUSTOMER_NAME = #customer_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="store_id">STORE_ID = #store_id:BIGINT#</isNotEmpty>
		<isNotEmpty prepend=" and " property="goods_id">GOODS_ID = #goods_id:BIGINT#</isNotEmpty>
		<isNotEmpty prepend=" and " property="goods_name">GOODS_NAME = #goods_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="opr_date">OPR_DATE = #opr_date:TIMESTAMP#</isNotEmpty>
		<isNotEmpty prepend=" and " property="init_num">INIT_NUM = #init_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="come_num">COME_NUM = #come_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="come_money">COME_MONEY = #come_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="out_num">OUT_NUM = #out_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="out_money">OUT_MONEY = #out_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">ADD_DATE = #add_date:TIMESTAMP#</isNotEmpty>
		<isNotEmpty prepend=" and " property="init_money">INIT_MONEY = #init_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="sale_cost">SALE_COST = #sale_cost:DECIMAL#</isNotEmpty>
		
		
		<isNotEmpty prepend=" and " property="map.store_name_like">e.STORE_NAME like '%'|| #map.store_name_like:VARCHAR# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_sn_like">e.STORE_SN like '%'|| #map.store_sn_like:VARCHAR# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sale_r3_code_like">f.SALE_R3_CODE like '%'|| #map.sale_r3_code_like:VARCHAR# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.add_date_s"><![CDATA[a.ADD_DATE >= to_date(#map.add_date_s#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.add_date_e"><![CDATA[a.ADD_DATE <= to_date(#map.add_date_e#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.customer_name_like">a.CUSTOMER_NAME like '%' || #map.customer_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code_like">UPPER(a.r3_code) like '%' || UPPER(#map.r3_code_like:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.goods_name_like">UPPER(a.goods_name) like '%' || UPPER(#map.goods_name_like:VARCHAR#) || '%'</isNotEmpty>
		
		<!-- 订单审批时,需要根据订单的机型查询这些机型在客户各仓库的库存情况.仅用于此 -->
		<isNotEmpty prepend=" and " property="map.goods_name_map">
			UPPER(a.goods_name) in  <iterate close=")" open="(" conjunction="," property="map.goods_name_map">#map.goods_name_map[]#</iterate>
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.dept_sn">b.BRANCH_AREA_NAME_2 = #map.dept_sn:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.handle_name_like">b.handle_name like '%' || #map.handle_name_like:VARCHAR# || '%'</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.handle_name_like_1">cust_all.L5_DEPT_NAME like '%' || #map.handle_name_like_1:VARCHAR# || '%'</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.cur_min_num"><![CDATA[ (a.INIT_NUM+a.COME_NUM-a.OUT_NUM) >= #map.cur_min_num:DECIMAL#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cur_max_num"><![CDATA[ (a.INIT_NUM+a.COME_NUM-a.OUT_NUM) <= #map.cur_max_num:DECIMAL#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cus_type1">d.PAR_CUSTOMER_TYPE = #map.cus_type1:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cus_type2">d.CUSTOMER_TYPE = #map.cus_type2:DECIMAL#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.dept_id_start">
			(c.user_id is not null and c.user_id in (
				select id from konka_pe_prod_user u
						where u.dept_id in (
							select dept_id from konka_dept start with dept_id in (
							SELECT DISTINCT (dept_id)
			  							FROM KONKA_ROLE_DATA_LEVEL
			 							WHERE role_id IN (SELECT role_id
			                     			FROM KONKA_PE_ROLE_USER
			                    			WHERE user_id = #map.session_user_id#)
							) or dept_id = #map.dept_id_start# 
							connect by prior dept_id = par_id 
						)
				)
			)
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
			c.user_id = #map.filter_by_ywy_id_eq#
		</isNotEmpty>
	</sql>

	<!-- 有bug,并且没有用到,故注释之 -->
<!-- 	<select id="selectJStocksStoreSummary" resultMap="jStocksStoreSummaryResult" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache"> -->
<!-- 		select * from J_STOCKS_STORE_SUMMARY where 1 = 1 -->
<!-- 		<include refid="sf-jStocksStoreSummary" /> -->
<!-- 	</select> -->

<!-- 	<select id="selectJStocksStoreSummaryList" resultMap="jStocksStoreSummaryResultForList" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache"> -->
<!-- 		<isNotEmpty property="row.count"> -->
<!-- 			<![CDATA[ select * from ( ]]> -->
<!-- 		</isNotEmpty> -->
<!-- 		select * from J_STOCKS_STORE_SUMMARY where 1 = 1 -->
<!-- 		<include refid="sf-jStocksStoreSummary" /> -->
<!-- 		<isNotEmpty property="row.count"> -->
<!-- 			<![CDATA[ ) where rownum <= #row.count# ]]> -->
<!-- 		</isNotEmpty> -->
<!-- 	</select> -->

<!-- 	<select id="selectJStocksStoreSummaryCount" resultClass="long" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache"> -->
<!-- 		select count(*) from J_STOCKS_STORE_SUMMARY where 1 = 1 -->
<!-- 		<include refid="sf-jStocksStoreSummary" /> -->
<!-- 	</select> -->

<!-- 	<select id="selectJStocksStoreSummaryPaginatedList" resultMap="jStocksStoreSummaryResult" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache"> -->
<!-- 		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]> -->
<!-- 		select * from J_STOCKS_STORE_SUMMARY where 1 = 1 -->
<!-- 		<include refid="sf-jStocksStoreSummary" /> -->
<!-- 		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]> -->
<!-- 	</select> -->
	
	<select id="selectJStocksStoreSummaryForR3ShopCount" resultClass="long" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache">
		select count(*) from J_STOCKS_STORE_SUMMARY a 
		 left join konka_r3_shop b on a.c_id = b.id
	     left join BRANCH_ASSIGN c on a.c_id = c.KONKA_R3_ID
	     left join J_BASE_STORE e on e.store_id = a.store_id
	     left join J_BASE_STORE_R3 f on f.store_id = a.store_id
	     left join (
	     SELECT shop.R3_CODE,
		       shop.CUSTOMER_NAME,
		       cust_type.C_COMM as PAR_CUSTOMER_TYPE_NAME,
		       cust_type.C_NAME as CUSTOMER_TYPE_NAME,
           cust_type.PAR_INDEX as PAR_CUSTOMER_TYPE,
           cust_type.C_INDEX as CUSTOMER_TYPE
		       FROM    KONKA_R3_SHOP shop
		       LEFT JOIN
		          KONKA_CATEGORY cust_type
		       ON shop.CUSTOMER_TYPE = cust_type.C_INDEX AND cust_type.C_TYPE = 10
	     ) d on a.R3_CODE=d.R3_CODE
	     left join MV_ORG_OF_CUSTOMER_ALL cust_all
          on a.R3_CODE=cust_all.R3_CODE
	     where 1 = 1
		<include refid="sf-jStocksStoreSummary" />
	</select>

	<select id="selectJStocksStoreSummaryForR3ShopPaginatedList" resultMap="jStocksStoreSummaryResultForR3Shop" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*,b.BRANCH_AREA_NAME AS DEPT_NAME,d.PAR_CUSTOMER_TYPE_NAME,d.CUSTOMER_TYPE_NAME,(a.INIT_NUM+a.COME_NUM-a.OUT_NUM) as cur_num,
		decode(a.OUT_NUM,0,0,(cast(#map.zzts_IN# as int))*(a.INIT_NUM+a.INIT_NUM+a.COME_NUM-a.OUT_NUM)/(2*a.OUT_NUM)) as ZZTS,
		cust_all.CUR_DEPT_NAME as handle_name,e.store_name,e.store_sn,f.sale_r3_code
		 from J_STOCKS_STORE_SUMMARY a  
		 left join konka_r3_shop b on a.c_id = b.id
	     left join BRANCH_ASSIGN c on a.c_id = c.KONKA_R3_ID
	     left join J_BASE_STORE e on e.store_id = a.store_id
	     left join J_BASE_STORE_R3 f on f.store_id = a.store_id
	     left join ( 
	     SELECT shop.R3_CODE,
		       shop.CUSTOMER_NAME,
		       cust_type.C_COMM as PAR_CUSTOMER_TYPE_NAME,
		       cust_type.C_NAME as CUSTOMER_TYPE_NAME,
           cust_type.PAR_INDEX as PAR_CUSTOMER_TYPE,
           cust_type.C_INDEX as CUSTOMER_TYPE
		       FROM    KONKA_R3_SHOP shop
		       LEFT JOIN
		          KONKA_CATEGORY cust_type
		       ON shop.CUSTOMER_TYPE = cust_type.C_INDEX AND cust_type.C_TYPE = 10
	     ) d on a.R3_CODE=d.R3_CODE
	      left join MV_ORG_OF_CUSTOMER_ALL cust_all
          on a.R3_CODE=cust_all.R3_CODE
	     where 1 = 1
		<include refid="sf-jStocksStoreSummary" />
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectJStocksStoreSummaryForR3ShopList" resultMap="jStocksStoreSummaryResultForR3Shop" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select a.*,b.BRANCH_AREA_NAME AS DEPT_NAME,d.PAR_CUSTOMER_TYPE_NAME,d.CUSTOMER_TYPE_NAME,(a.INIT_NUM+a.COME_NUM-a.OUT_NUM) as cur_num,
		decode(a.OUT_NUM,0,0,(cast(#map.zzts_IN# as int))*(a.INIT_NUM+a.INIT_NUM+a.COME_NUM-a.OUT_NUM)/(2*a.OUT_NUM)) as ZZTS,
		cust_all.CUR_DEPT_NAME as handle_name,e.store_name,e.store_sn,f.sale_r3_code
		 from J_STOCKS_STORE_SUMMARY a  
		 left join konka_r3_shop b on a.c_id = b.id
	     left join BRANCH_ASSIGN c on a.c_id = c.KONKA_R3_ID
	     left join J_BASE_STORE e on e.store_id = a.store_id
	     left join J_BASE_STORE_R3 f on f.store_id = a.store_id
	     left join (
	     SELECT shop.R3_CODE,
		       shop.CUSTOMER_NAME,
		       cust_type.C_COMM as PAR_CUSTOMER_TYPE_NAME,
		       cust_type.C_NAME as CUSTOMER_TYPE_NAME,
           cust_type.PAR_INDEX as PAR_CUSTOMER_TYPE,
           cust_type.C_INDEX as CUSTOMER_TYPE
		       FROM    KONKA_R3_SHOP shop
		       LEFT JOIN
		          KONKA_CATEGORY cust_type
		       ON shop.CUSTOMER_TYPE = cust_type.C_INDEX AND cust_type.C_TYPE = 10
	     ) d on a.R3_CODE=d.R3_CODE
	      left join MV_ORG_OF_CUSTOMER_ALL cust_all
          on a.R3_CODE=cust_all.R3_CODE
	     where 1 = 1
		<include refid="sf-jStocksStoreSummary" />
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!--剩余库存总数-->
    <select id="selectJStocksStoreSummaryForR3ShopSumCount" resultClass="long" parameterClass="jStocksStoreSummary" cacheModel="oneDayCache">
		select sum((a.INIT_NUM+a.COME_NUM-a.OUT_NUM)) as total_num from J_STOCKS_STORE_SUMMARY a  
		 left join konka_r3_shop b on a.c_id = b.id
	     left join BRANCH_ASSIGN c on a.c_id = c.KONKA_R3_ID
	     left join J_BASE_STORE e on e.store_id = a.store_id
	     left join J_BASE_STORE_R3 f on f.store_id = a.store_id
	     left join (
	     SELECT shop.R3_CODE,
		       shop.CUSTOMER_NAME,
		       cust_type.C_COMM as PAR_CUSTOMER_TYPE_NAME,
		       cust_type.C_NAME as CUSTOMER_TYPE_NAME,
           cust_type.PAR_INDEX as PAR_CUSTOMER_TYPE,
           cust_type.C_INDEX as CUSTOMER_TYPE
		       FROM    KONKA_R3_SHOP shop
		       LEFT JOIN
		          KONKA_CATEGORY cust_type
		       ON shop.CUSTOMER_TYPE = cust_type.C_INDEX AND cust_type.C_TYPE = 10
	     ) d on a.R3_CODE=d.R3_CODE
	      left join MV_ORG_OF_CUSTOMER_ALL cust_all
          on a.R3_CODE=cust_all.R3_CODE
	     where 1 = 1
		<include refid="sf-jStocksStoreSummary" />
	</select>

	<insert id="insertJStocksStoreSummary" parameterClass="jStocksStoreSummary">
		<selectKey resultClass="long" keyProperty="id">select SEQ_J_STOCKS_STORE_SUMMARY_ID.nextval as id from dual </selectKey>
		<![CDATA[insert into J_STOCKS_STORE_SUMMARY (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="c_id">C_ID</isNotNull>	
			<isNotNull prepend="," property="r3_code">R3_CODE</isNotNull>	
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME</isNotNull>	
			<isNotNull prepend="," property="store_id">STORE_ID</isNotNull>	
			<isNotNull prepend="," property="goods_id">GOODS_ID</isNotNull>	
			<isNotNull prepend="," property="goods_name">GOODS_NAME</isNotNull>	
			<isNotNull prepend="," property="opr_date">OPR_DATE</isNotNull>	
			<isNotNull prepend="," property="init_num">INIT_NUM</isNotNull>	
			<isNotNull prepend="," property="come_num">COME_NUM</isNotNull>	
			<isNotNull prepend="," property="come_money">COME_MONEY</isNotNull>	
			<isNotNull prepend="," property="out_num">OUT_NUM</isNotNull>	
			<isNotNull prepend="," property="out_money">OUT_MONEY</isNotNull>	
			<isNotNull prepend="," property="add_date">ADD_DATE</isNotNull>	
			<isNotNull prepend="," property="init_money">INIT_MONEY</isNotNull>	
			<isNotNull prepend="," property="sale_cost">SALE_COST</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="c_id">#c_id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="r3_code">#r3_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_name">#customer_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_id">#store_id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="goods_id">#goods_id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="goods_name">#goods_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="opr_date">#opr_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="init_num">#init_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="come_num">#come_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="come_money">#come_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="out_num">#out_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="out_money">#out_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_date">#add_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="init_money">#init_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="sale_cost">#sale_cost:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateJStocksStoreSummary" parameterClass="JStocksStoreSummary">
		update J_STOCKS_STORE_SUMMARY
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="c_id">C_ID = #c_id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="r3_code">R3_CODE = #r3_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME = #customer_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_id">STORE_ID = #store_id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="goods_id">GOODS_ID = #goods_id:BIGINT#</isNotNull>
			<isNotNull prepend="," property="goods_name">GOODS_NAME = #goods_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="opr_date">OPR_DATE = #opr_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="init_num">INIT_NUM = #init_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="come_num">COME_NUM = #come_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="come_money">COME_MONEY = #come_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="out_num">OUT_NUM = #out_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="out_money">OUT_MONEY = #out_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="init_money">INIT_MONEY = #init_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="sale_cost">SALE_COST = #sale_cost:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update> 

	<delete id="deleteJStocksStoreSummary" parameterClass="JStocksStoreSummary">
		delete from J_STOCKS_STORE_SUMMARY where 1=1 
		<isNotEmpty prepend=" and " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" and " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>