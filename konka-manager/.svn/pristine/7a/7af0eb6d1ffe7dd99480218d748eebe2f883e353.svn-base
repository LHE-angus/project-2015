package com.ebiz.mmt.web.struts.manager.admin;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.validator.GenericValidator;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ebiz.mmt.domain.BaseProvinceList;
import com.ebiz.mmt.domain.BaseProvinceListFour;
import com.ebiz.mmt.domain.KonkaDept;
import com.ebiz.mmt.domain.KonkaPeArticleInfo;
import com.ebiz.mmt.domain.KonkaPeArticleType;
import com.ebiz.mmt.domain.KonkaPeAttachments;
import com.ebiz.mmt.domain.KonkaPePublicScope;
import com.ebiz.mmt.domain.KonkaR3Shop;
import com.ebiz.mmt.domain.PeProdUser;
import com.ebiz.mmt.domain.PeShopCategory;
import com.ebiz.mmt.web.Constants;
import com.ebiz.mmt.web.struts.BaseAction;
import com.ebiz.mmt.web.struts.MmtFilePathConfig;
import com.ebiz.ssi.web.struts.bean.Pager;
import com.ebiz.ssi.web.struts.bean.UploadFile;

/**
 * Code by AutoGenerated Builder AutoGenerated Builder Version 2.1
 * 
 * @author Chen,ShunHua
 * @datetime 2011-09-29 17:05:13
 */
public class NewProductsAction extends BaseAction {
	@Override
	public ActionForward unspecified(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		return this.list(mapping, form, request, response);
	}

	public ActionForward add(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		if (null == super.checkUserModPopeDom(form, request, "1")) {
			return super.checkPopedomInvalid(request, response);
		}

		super.setNaviStringToRequestScope(form, request);

		saveToken(request);
		super.getModPopeDom(form, request);

		DynaBean dynaBean = (DynaBean) form;

		PeProdUser ui = (PeProdUser) request.getSession().getAttribute(Constants.USER_INFO);

		// PeRoleUser roleUser = new PeRoleUser();
		// roleUser.setUser_id(ui.getId());
		// roleUser = getFacade().getPeRoleUserService().getPeRoleUser(roleUser);

		// 资讯类别列表
		KonkaPeArticleType konkaPeArticleType = new KonkaPeArticleType();
		konkaPeArticleType.setIs_del(0);

		// if(roleUser.getRole_id() == 20 && roleUser.getRole_id() <= 29){//事业部或事业部领导 只能看到自己事业部添加的资讯类别
		// konkaPeArticleType.setDept_id(ui.getDept_id());
		// }
		// if(roleUser.getRole_id() >= 30&& roleUser.getRole_id() <= 39){//分公司或分公司领导 只能看到自己所在事业部添加的资讯类别
		// KonkaDept dept = new KonkaDept();
		// dept.setDept_id(ui.getDept_id());
		// dept = getFacade().getKonkaDeptService().getKonkaDept(dept);
		// konkaPeArticleType.setDept_id(dept.getPar_id());
		// }
		// 查出所有的资讯类别
		List<KonkaPeArticleType> peArticleTypeList = super.getFacade().getKonkaPeArticleTypeService()
				.getKonkaPeArticleTypeList(konkaPeArticleType);
		request.setAttribute("peArticleTypeList", peArticleTypeList);

		// 网点类别列表
		PeShopCategory peShopCategory = new PeShopCategory();
		peShopCategory.setIs_del((long) 0);
		List<PeShopCategory> peShopCategoryList = super.getFacade().getPeShopCategoryService().getPeShopCategoryList(
				peShopCategory);
		request.setAttribute("peShopCategoryList", peShopCategoryList);

		String user_type = "";

		KonkaDept konkaDept = new KonkaDept();
		konkaDept.setDept_id(ui.getDept_id());
		konkaDept = getFacade().getKonkaDeptService().getKonkaDept(konkaDept);
		if (konkaDept != null && konkaDept.getDept_type() == 3) { // 分公司
			dynaBean.set("many_p_index", konkaDept.getM_areas_ids()); // 分公司管辖范围
			user_type = "1"; // 分公司只可以选择管辖区域内的网点
		} else if (konkaDept != null && (konkaDept.getDept_type() == 5 || konkaDept.getDept_type() == 4)) { // 判断当前用户是否是经营部或办事处
			dynaBean.set("many_p_index", "");
			user_type = "2";// 经营部或办事处只可以选择分配给他的网点
		} else {
			user_type = "0";// admin 或 事业部用户
		}

		dynaBean.set("user_type", user_type);

		dynaBean.set("dept_id", konkaDept.getDept_id());
		dynaBean.set("dept_name", konkaDept.getDept_name());

		// 取得baseProvinceList省的值
		BaseProvinceList Province = new BaseProvinceList();
		Province.setDel_mark(new Short("0"));
		Province.setP_level(new Short("1"));
		List<BaseProvinceList> baseProvince1List = getFacade().getBaseProvinceListService().getBaseProvinceListList(
				Province);
		request.setAttribute("baseProvince1List", baseProvince1List);

		dynaBean.set("is_top", "0");
		dynaBean.set("is_display_index", "0");
		dynaBean.set("is_link_out", "0");
		dynaBean.set("public_place", "-1");
		dynaBean.set("states", "0");
		dynaBean.set("pub_date", new Date());
		dynaBean.set("order_value", "0");
		dynaBean.set("select_type_id", "select_type0");
		dynaBean.set("msg_info_type", "0");
		dynaBean.set("is_sent", "0");

		return mapping.findForward("input");
	}

	public ActionForward list(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		if (null == super.checkUserModPopeDom(form, request, "0")) {
			return super.checkPopedomInvalid(request, response);
		}

		super.setNaviStringToRequestScope(form, request);

		PeProdUser PeProdUser = (PeProdUser) super.getSessionAttribute(request, Constants.USER_INFO);

		DynaBean dynaBean = (DynaBean) form;
		super.encodeCharacterForGetMethod(dynaBean, request);

		Pager pager = (Pager) dynaBean.get("pager");
		String mod_code = (String) dynaBean.get("mod_id");
		String type_name = (String) dynaBean.get("type_name");
		String st_pub_date = (String) dynaBean.get("st_pub_date");
		String en_pub_date = (String) dynaBean.get("en_pub_date");
		String states = (String) dynaBean.get("states");

		KonkaPeArticleInfo entity = new KonkaPeArticleInfo();

		super.copyProperties(entity, form);

		entity.setArticle_mod_id(Long.valueOf(mod_code));
		if (null != states) {
			if ("1".equalsIgnoreCase(states)) {// have pub
				entity.getMap().put("is_pub", "0");
			} else if ("0".equalsIgnoreCase(states)) {// no pub
				entity.getMap().put("no_pub", "0");
			}
		} else {
			entity.getMap().put("is_pub", "0");
			dynaBean.set("pub_state", "1");
		}

		entity.getMap().put("st_pub_date", st_pub_date);
		entity.getMap().put("en_pub_date", en_pub_date);
		entity.getMap().put("type_name", type_name);
		entity.getMap().put("user_name", PeProdUser.getUser_name());

		Long recordCount = getFacade().getKonkaPeArticleInfoService().getKonkaPeArticleInfoCount(entity);
		pager.init(recordCount, pager.getPageSize(), pager.getRequestPage());
		entity.getRow().setFirst(pager.getFirstRow());
		entity.getRow().setCount(pager.getRowCount());

		List<KonkaPeArticleInfo> entityList = getFacade().getKonkaPeArticleInfoService()
				.getKonkaPeArticleInfoPaginatedList(entity);
		request.setAttribute("entityList", entityList);

		// 资讯类别列表
		KonkaPeArticleType konkaPeArticleType = new KonkaPeArticleType();
		List<KonkaPeArticleType> peArticleTypeList = super.getFacade().getKonkaPeArticleTypeService()
				.getKonkaPeArticleTypeList(konkaPeArticleType);
		request.setAttribute("peArticleTypeList", peArticleTypeList);

		// 网点类别列表
		PeShopCategory peShopCategory = new PeShopCategory();
		peShopCategory.setIs_del(0l);
		List<PeShopCategory> peShopCategoryList = super.getFacade().getPeShopCategoryService().getPeShopCategoryList(
				peShopCategory);
		request.setAttribute("peShopCategoryList", peShopCategoryList);

		return mapping.findForward("list");
	}

	public ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		saveToken(request);
		setNaviStringToRequestScope(form, request);

		DynaBean dynaBean = (DynaBean) form;
		String id = (String) dynaBean.get("id");

		if (!GenericValidator.isLong(id)) {
			this.saveError(request, "errors.long", new String[] { id });
			return mapping.findForward("list");
		}

		KonkaPeArticleInfo entity = new KonkaPeArticleInfo();
		entity.setId(Long.valueOf(id));
		entity = super.getFacade().getKonkaPeArticleInfoService().getKonkaPeArticleInfo(entity);
		if (null == entity) {
			saveMessage(request, "entity.missing");
			return mapping.findForward("list");
		}

		// the line below is added for pagination
		entity.setQueryString(super.serialize(request, "id", "method"));
		// end

		super.copyProperties(form, entity);

		String user_type = "";

		PeProdUser ui = (PeProdUser) request.getSession().getAttribute(Constants.USER_INFO);

		KonkaDept konkaDept = new KonkaDept();
		konkaDept.setDept_id(ui.getDept_id());
		konkaDept = getFacade().getKonkaDeptService().getKonkaDept(konkaDept);
		if (konkaDept != null && konkaDept.getDept_type() == 3) { // 分公司
			dynaBean.set("many_p_index", konkaDept.getM_areas_ids()); // 分公司管辖范围
			user_type = "1"; // 分公司只可以选择管辖区域内的网点
		} else if (konkaDept != null && (konkaDept.getDept_type() == 5 || konkaDept.getDept_type() == 4)) { // 判断当前用户是否是经营部或办事处
			dynaBean.set("many_p_index", "");
			user_type = "2";// 经营部或办事处只可以选择分配给他的网点
		} else {
			user_type = "0";// admin 或 事业部用户
		}

		dynaBean.set("user_type", user_type);

		String select_type = "select_type0";// 按具体网点发布或 按网点类别发布，默认按按具体网点发布

		KonkaPePublicScope konkaPePublicScope = new KonkaPePublicScope();
		konkaPePublicScope.setArticle_id(Long.valueOf(id));

		List<KonkaPePublicScope> konkaPePublicScopeLIst = null;

		// 网点类别
		KonkaPePublicScope kpps = new KonkaPePublicScope();
		kpps.setArticle_id(konkaPePublicScope.getArticle_id());
		kpps.setPublic_type(2l);
		konkaPePublicScopeLIst = getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(kpps);
		if (null != konkaPePublicScopeLIst && konkaPePublicScopeLIst.size() > 0) {
			StringBuffer sbCategoryIds = new StringBuffer(), sbCategoryNames = new StringBuffer();
			for (KonkaPePublicScope _kpps : konkaPePublicScopeLIst) {
				sbCategoryIds.append(_kpps.getPublic_scope()).append(",");
			}
			String _ids = StringUtils.substringBeforeLast(sbCategoryIds.toString(), ",");
			PeShopCategory psc = new PeShopCategory();
			psc.setIs_del(0l);
			psc.getMap().put("selects", _ids);
			List<PeShopCategory> peShopCategoryList = getFacade().getPeShopCategoryService().getPeShopCategoryList(psc);
			if (null != peShopCategoryList) {
				for (PeShopCategory _psc : peShopCategoryList) {
					sbCategoryNames.append(_psc.getCategory_name()).append(",");
				}
				dynaBean.set("peShopCategoryId", _ids);
				dynaBean.set("peShopCategoryName", StringUtils.substringBeforeLast(sbCategoryNames.toString(), ","));
			}

			select_type = "select_type1"; // 按网点类别发布的
		} else {
			konkaPePublicScopeLIst = null;
		}

		if ("0".equals(user_type)) {// 管理员或事业部先判断是否对全部网点进行发布
			KonkaPePublicScope _konkaPePublicScope = new KonkaPePublicScope();
			_konkaPePublicScope.setArticle_id(konkaPePublicScope.getArticle_id());
			_konkaPePublicScope.setPublic_type(0l);
			konkaPePublicScopeLIst = getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(
					_konkaPePublicScope);
			if (null != konkaPePublicScopeLIst && konkaPePublicScopeLIst.size() == 1) {
				dynaBean.set("public_type", "0");
			} else {
				konkaPePublicScopeLIst = null;
			}
		}

		if (null == konkaPePublicScopeLIst) {
			dynaBean.set("areas_ids", entity.getAreas_ids());
			dynaBean.set("areas_names", entity.getAreas_names());

			if ("select_type0".equals(select_type)) {// 相等的话说明不是按类别投放，那就是按具体网点投放
				konkaPePublicScope.setPublic_type(3l);
				konkaPePublicScopeLIst = super.getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(
						konkaPePublicScope);
				if (null != konkaPePublicScopeLIst && konkaPePublicScopeLIst.size() > 0) {
					StringBuffer sbName = new StringBuffer(), sbId = new StringBuffer();
					for (int i = 0; i < konkaPePublicScopeLIst.size(); i++) {
						KonkaPePublicScope temp = konkaPePublicScopeLIst.get(i);
						sbId.append(",").append(temp.getPublic_scope());
					}

					// MmtEntpShop konkaEntpShop = new MmtEntpShop();
					// konkaEntpShop.getMap().put("selects", StringUtils.substring(sbId.toString(), 1));
					// konkaEntpShop.getRow().setCount(5);// 显示5个以内网点名称
					// List<MmtEntpShop> konkaEntpShop_list = super.getFacade().getMmtEntpShopService()
					// .getMmtEntpShopList(konkaEntpShop);
					// if (null != konkaEntpShop_list) {
					// for (MmtEntpShop kes : konkaEntpShop_list) {
					// sbName.append(kes.getShop_name()).append(",");
					// }
					// }

					dynaBean.set("shop_name", StringUtils.substringBeforeLast(sbName.toString(), ","));
					dynaBean.set("shop_id", StringUtils.substring(sbId.toString(), 1));
				}
			}
		}

		dynaBean.set("select_type_id", select_type);

		// 取得baseProvinceList省的值
		BaseProvinceList Province = new BaseProvinceList();
		Province.setDel_mark(new Short("0"));
		Province.setP_level(new Short("1"));
		List<BaseProvinceList> baseProvince1List = getFacade().getBaseProvinceListService().getBaseProvinceListList(
				Province);
		request.setAttribute("baseProvince1List", baseProvince1List);

		// 网点类别列表
		PeShopCategory peShopCategory = new PeShopCategory();
		peShopCategory.setIs_del(0l);
		List<PeShopCategory> peShopCategoryList = super.getFacade().getPeShopCategoryService().getPeShopCategoryList(
				peShopCategory);
		request.setAttribute("peShopCategoryList", peShopCategoryList);

		// PeRoleUser roleUser = new PeRoleUser();
		// roleUser.setUser_id(ui.getId());
		// roleUser = getFacade().getPeRoleUserService().getPeRoleUser(roleUser);

		// 资讯类别列表
		KonkaPeArticleType konkaPeArticleType = new KonkaPeArticleType();

		// if(roleUser.getRole_id() == 20 && roleUser.getRole_id() <= 29){//事业部或事业部领导 只能看到自己事业部添加的资讯类别
		// konkaPeArticleType.setDept_id(ui.getDept_id());
		// }
		// if(roleUser.getRole_id() >= 30&& roleUser.getRole_id() <= 39){//分公司或分公司领导 只能看到自己所在事业部添加的资讯类别
		// KonkaDept dept = new KonkaDept();
		// dept.setDept_id(ui.getDept_id());
		// dept = getFacade().getKonkaDeptService().getKonkaDept(dept);
		// konkaPeArticleType.setDept_id(dept.getPar_id());
		// }
		// 查出所有的资讯类别
		List<KonkaPeArticleType> peArticleTypeList = super.getFacade().getKonkaPeArticleTypeService()
				.getKonkaPeArticleTypeList(konkaPeArticleType);
		request.setAttribute("peArticleTypeList", peArticleTypeList);

		// 附件列表
		KonkaPeAttachments attachment = new KonkaPeAttachments();
		attachment.setLink_id(entity.getId());
		attachment.setIs_del((long) 0);
		request.setAttribute("attachmentList", getFacade().getKonkaPeAttachmentsService().getKonkaPeAttachmentsList(
				attachment));

		return mapping.findForward("input");
	}

	public ActionForward save(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		super.setNaviStringToRequestScope(form, request);
		if (isCancelled(request)) {
			return list(mapping, form, request, response);
		}
		if (!isTokenValid(request)) {
			saveError(request, "errors.token");
			return list(mapping, form, request, response);
		}
		resetToken(request);

		DynaBean dynaBean = (DynaBean) form;
		String mod_id = (String) dynaBean.get("mod_id");
		String id_names[] = request.getParameterValues("id_name");
		String receive_user_type = (String) dynaBean.get("receive_user_type");
		String public_target = (String) dynaBean.get("public_target");
		String shop_id = (String) dynaBean.get("shop_id");
		String public_type = (String) dynaBean.get("public_type"); // 发布类型
		String peShopCategoryId = (String) dynaBean.get("peShopCategoryId");// 网点类别ID
		String user_type = (String) dynaBean.get("user_type");// 1分公司，2经营部或办事处，空则为admin或事业部
		String select_type = (String) dynaBean.get("select_type");
		String role_ids = (String) dynaBean.get("role_ids");
		String role_names = (String) dynaBean.get("role_names");
		String dept_ids = (String) dynaBean.get("dept_ids");
		String dept_names = (String) dynaBean.get("dept_names");
		String pub_date = (String) dynaBean.get("pub_date");
		
		// 区域编号，区域名处理
		int len = 0;
		if (id_names != null)
			len = id_names.length;
		String[] area_ids = new String[len];
		String[] areas_names = new String[len];
		if (len > 0) {
			for (int i = 0; i < len; i++) {
				area_ids[i] = id_names[i].split(",")[0];
				areas_names[i] = id_names[i].split(",")[1];
			}
		}

		PeProdUser peProdUser = (PeProdUser) super.getSessionAttribute(request, Constants.USER_INFO);

		KonkaPeArticleInfo entity = new KonkaPeArticleInfo();
		super.copyProperties(entity, form);

		if(StringUtils.isNotBlank(pub_date)){
			SimpleDateFormat sdf2 = new SimpleDateFormat("HH:mm:ss");
			SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			String pub_date_value = pub_date+" "+ sdf2.format(new Date());
			entity.setPub_date(sdf1.parse(pub_date_value));
		}
		
		entity.setArticle_mod_id(Long.valueOf(mod_id));

		List<UploadFile> uploadFileList = super.uploadFile(form, MmtFilePathConfig.OTHERS_PATH, true, 0,
				new int[] { 240 });
		List<KonkaPeAttachments> konkaPeAttachmentsList = new ArrayList<KonkaPeAttachments>();
		KonkaPeAttachments konkaPeAttachments = null;
		for (UploadFile uploadFile : uploadFileList) {
			if ("img_path".equalsIgnoreCase(uploadFile.getFormName())) {
				entity.setImg_path(uploadFile.getFileSavePath());
			} else {
				konkaPeAttachments = new KonkaPeAttachments();
				konkaPeAttachments.setFile_name(uploadFile.getFileName());
				konkaPeAttachments.setFile_type(uploadFile.getContentType());
				konkaPeAttachments.setFile_size(new Long(uploadFile.getFileSize()));
				konkaPeAttachments.setSave_path(uploadFile.getFileSavePath());
				konkaPeAttachments.setSave_name(uploadFile.getFileSaveName());
				konkaPeAttachments.setIs_del((long) 0);
				konkaPeAttachments.setLink_tab(uploadFile.getFormName());
				konkaPeAttachments.setAdd_user_name(peProdUser.getUser_name());
				konkaPeAttachments.setAdd_user_id(peProdUser.getId());
				konkaPeAttachmentsList.add(konkaPeAttachments);
			}
		}
		entity.setKonkaPeAttachments(konkaPeAttachmentsList);

		if (StringUtils.isBlank(entity.getImg_path())) {
			entity.setImg_path(null);
		}

		// / 判断当前用户是否是分公司
		PeProdUser ui = (PeProdUser) request.getSession().getAttribute(Constants.USER_INFO);

		List<KonkaPePublicScope> konkaPePublicScopeList = new ArrayList<KonkaPePublicScope>();

		if ("4".equals(public_type) || "5".equals(public_type)) {
			select_type = "0";
		}

		logger.info("****************************************##############################:{}", select_type);
		if ("0".equals(select_type)) {// 按具体网点发布
			// public_type : 0全部 1选择的网点
			if ("0".equals(public_type)) {// 对全部地区的网点发送
				KonkaPePublicScope kps = new KonkaPePublicScope();
				kps.setPublic_type(0l);

				// '投放对象<br />
				// 0：R3
				// 1：代理商
				// 2：经销商
				// 3：分公司人员';
				kps.setPublic_target(new Integer(public_target));
				konkaPePublicScopeList.add(kps);
			} else if ("4".equals(public_type)) {// 按角色
				String[] _role_ids = StringUtils.split(role_ids, ",");
				for (String role_id : _role_ids) {
					KonkaPePublicScope kps = new KonkaPePublicScope();
					kps.setPublic_type(4L);
					kps.setPublic_scope(new Long(role_id));
					kps.setPublic_target(new Integer(public_target));
					konkaPePublicScopeList.add(kps);
				}

				if(StringUtils.isNotBlank(role_ids)){
					entity.setRole_ids(role_ids);
				}
				if(StringUtils.isNotBlank(role_names)){
					entity.setRole_names(role_names);
				}
				
			} else if ("5".equals(public_type)) {// 按分公司分
				String[] _dept_ids = StringUtils.split(dept_ids, ",");
				for (String dept_id : _dept_ids) {
					KonkaPePublicScope kps = new KonkaPePublicScope();
					kps.setPublic_type(5L);
					kps.setPublic_scope(new Long(dept_id));
					kps.setPublic_target(new Integer(public_target));
					konkaPePublicScopeList.add(kps);
				}

				if(StringUtils.isNotBlank(dept_ids)){
					entity.setDept_ids(dept_ids);
				}
				if(StringUtils.isNotBlank(dept_names)){
					entity.setDept_names(dept_names);
				}
			} else {// 对选择的网点进行发布
				String[] shop_ids = StringUtils.split(shop_id, ",");
				if ("0".equals(user_type) && shop_ids.length == 0) {// admin或事业部，可以只选择到区域而不需要选择到具体的网点
					for (String area_id : area_ids) {
						KonkaPePublicScope kps = new KonkaPePublicScope();
						kps.setPublic_type(1l);
						kps.setPublic_scope(new Long(area_id));
						kps.setPublic_target(new Integer(public_target));
						konkaPePublicScopeList.add(kps);
					}
				} else {
					for (String _shop_id : shop_ids) {
						KonkaPePublicScope kps = new KonkaPePublicScope();
						kps.setPublic_type(3l);
						kps.setPublic_scope(new Long(_shop_id));
						kps.setPublic_target(new Integer(public_target));
						konkaPePublicScopeList.add(kps);
					}
				}
			}
		} else if ("1".equals(select_type)) {// 按网点类别发布
			String[] peShopCategoryIds = StringUtils.split(peShopCategoryId, ",");
			if (null != peShopCategoryIds) {
				for (int i = 0; i < peShopCategoryIds.length; i++) {
					KonkaPePublicScope kps = new KonkaPePublicScope();
					kps.setPublic_type(2l);
					kps.setPublic_scope(new Long(peShopCategoryIds[i]));
					kps.setPublic_target(new Integer(public_target));
					konkaPePublicScopeList.add(kps);
				}

				// 不是 admin或事业部发送信息按照网点类别进行发布时，存信息时将其所管辖的区域存进去，方便客户端进行查询
				KonkaDept dept = new KonkaDept();
				dept.setDept_id(ui.getDept_id());
				dept = super.getFacade().getKonkaDeptService().getKonkaDept(dept);
				if (null != dept) {
					entity.setAreas_ids(dept.getM_areas_ids());
					entity.setAreas_names(dept.getM_areas_names());
				}
			}
		} else {
			super.invalidOper(request, response, "errors.parm");
			return null;
		}

		entity.setKonkaPePublicScopeList(konkaPePublicScopeList);

		if (area_ids.length > 0) {
			entity.setAreas_ids(StringUtils.join(area_ids, ","));
		}
		if (areas_names.length > 0) {
			entity.setAreas_names(StringUtils.join(areas_names, ","));
		}

		if (null == entity.getId()) {// insert
			entity.setAdd_user_id(peProdUser.getId());
			entity.setAdd_user_name(peProdUser.getUser_name());
			entity.setView_counts(0l);
			entity.setIs_del(0l);

			getFacade().getKonkaPeArticleInfoService().createKonkaPeArticleInfo(entity);
			saveMessage(request, "entity.inserted");
		} else if (null != entity) {// update
			getFacade().getKonkaPeArticleInfoService().modifyKonkaPeArticleInfo(entity);
			saveMessage(request, "entity.updated");
		}
		StringBuffer pathBuffer = new StringBuffer();
		pathBuffer.append(mapping.findForward("success").getPath());
		pathBuffer.append("&mod_id=").append(mod_id);
		pathBuffer.append("&receive_user_type=").append(receive_user_type);
		pathBuffer.append("&public_target=").append(public_target).append("&");
		pathBuffer.append(super.encodeSerializedQueryString(entity.getQueryString()));
		ActionForward forward = new ActionForward(pathBuffer.toString(), true);
		// end
		return forward;
	}

	public ActionForward view(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		setNaviStringToRequestScope(form, request);
		DynaBean dynaBean = (DynaBean) form;
		String id = (String) dynaBean.get("id");

		String user_type = "";

		PeProdUser ui = (PeProdUser) request.getSession().getAttribute(Constants.USER_INFO);

		KonkaDept konkaDept = new KonkaDept();
		konkaDept.setDept_id(ui.getDept_id());
		konkaDept = getFacade().getKonkaDeptService().getKonkaDept(konkaDept);
		if (konkaDept != null && konkaDept.getDept_type() == 3) { // 分公司
			dynaBean.set("many_p_index", konkaDept.getM_areas_ids()); // 分公司管辖范围
			user_type = "1"; // 分公司只可以选择管辖区域内的网点
		} else if (konkaDept != null && (konkaDept.getDept_type() == 5 || konkaDept.getDept_type() == 4)) { // 判断当前用户是否是经营部或办事处
			dynaBean.set("many_p_index", "");
			user_type = "2";// 经营部或办事处只可以选择分配给他的网点
		} else {
			user_type = "0";// admin 或 事业部用户
		}

		dynaBean.set("user_type", user_type);

		if (GenericValidator.isLong(id)) {

			KonkaPeArticleInfo entity = new KonkaPeArticleInfo();
			entity.setId(Long.valueOf(id));

			entity = super.getFacade().getKonkaPeArticleInfoService().getKonkaPeArticleInfo(entity);

			KonkaPeAttachments attachment = new KonkaPeAttachments();
			attachment.setLink_id(new Long(id));
			attachment.setIs_del((long) 0);
			request.setAttribute("attachmentList", getFacade().getKonkaPeAttachmentsService()
					.getKonkaPeAttachmentsList(attachment));

			if (null != entity.getArticle_type_id()) {
				KonkaPeArticleType konkaPeArticleType = new KonkaPeArticleType();
				konkaPeArticleType.setId(entity.getArticle_type_id());
				konkaPeArticleType = super.getFacade().getKonkaPeArticleTypeService().getKonkaPeArticleType(
						konkaPeArticleType);
				String type_name = konkaPeArticleType.getType_name();
				request.setAttribute("type_name", type_name);
			}

			// if (null == entity) {
			// saveMessage(request, "entity.missing");
			// return mapping.findForward("list");
			// }

			// 网点类别
			KonkaPePublicScope kpps = new KonkaPePublicScope();
			kpps.setArticle_id(Long.valueOf(id));
			kpps.setPublic_type(2l);
			List<KonkaPePublicScope> konkaPePublicScopeList = getFacade().getKonkaPePublicScopeService()
					.getKonkaPePublicScopeList(kpps);
			if (null != konkaPePublicScopeList && konkaPePublicScopeList.size() > 0) {
				StringBuffer sbCategoryIds = new StringBuffer(), sbCategoryNames = new StringBuffer();
				for (KonkaPePublicScope _kpps : konkaPePublicScopeList) {
					sbCategoryIds.append(_kpps.getPublic_scope()).append(",");
				}
				String _ids = StringUtils.substringBeforeLast(sbCategoryIds.toString(), ",");
				PeShopCategory psc = new PeShopCategory();
				psc.setIs_del(0l);
				psc.getMap().put("selects", _ids);
				List<PeShopCategory> _list = getFacade().getPeShopCategoryService().getPeShopCategoryList(psc);
				if (null != _list) {
					for (PeShopCategory _psc : _list) {
						sbCategoryNames.append(_psc.getCategory_name()).append("&nbsp;&nbsp;");
					}
					dynaBean.set("peShopCategoryId", _ids);
					dynaBean.set("peShopCategoryName", sbCategoryNames.toString());
				}
			}
			// 回显 发布对象信息,public_type标明发布对象类型： 0所有 ，1地区 ，3网点
			KonkaPePublicScope konkaPePublicScope = new KonkaPePublicScope();
			konkaPePublicScope.setArticle_id(Long.valueOf(id));

			Long public_type = 0l;

			konkaPePublicScope.setPublic_type(0l);
			List<KonkaPePublicScope> list = super.getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(
					konkaPePublicScope);
			if (list.size() == 0) {
				konkaPePublicScope.setPublic_type(1l);
				public_type = 1l;
				list = super.getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(konkaPePublicScope);
				if (list.size() == 0) {
					konkaPePublicScope.setPublic_type(2l);
					public_type = 2l;
					list = super.getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(
							konkaPePublicScope);
					if (list.size() == 0) {
						konkaPePublicScope.setPublic_type(3l);
						public_type = 3l;
						list = super.getFacade().getKonkaPePublicScopeService().getKonkaPePublicScopeList(
								konkaPePublicScope);
					}
				}
			}

			dynaBean.set("public_type", public_type);

			if (public_type == 0) {// 所有网点

			} else if (public_type == 1) {// 地区
				StringBuffer sb = new StringBuffer();
				for (int i = 0; i < list.size(); i++) {
					KonkaPePublicScope temp = list.get(i);
					if (i == 0) {
						sb.append(temp.getPublic_scope());
					} else
						sb.append(",").append(temp.getPublic_scope());
				}
				BaseProvinceListFour baseProvinceListFour = new BaseProvinceListFour();
				baseProvinceListFour.getMap().put("many_p_index", sb.toString());
				List<BaseProvinceListFour> baseProvinceListFour_list = super.getFacade()
						.getBaseProvinceListFourService().getBaseProvinceListFourList(baseProvinceListFour);
				sb = new StringBuffer();
				for (BaseProvinceListFour city : baseProvinceListFour_list) {
					sb.append(city.getFull_name()).append("&nbsp;&nbsp;");
				}
				dynaBean.set("citys", sb.toString());
			} else if (public_type == 3) {// 网点
				StringBuffer sb = new StringBuffer();
				for (int i = 0; i < list.size(); i++) {
					KonkaPePublicScope temp = list.get(i);
					if (i == 0) {
						sb.append(temp.getPublic_scope());
					} else
						sb.append(",").append(temp.getPublic_scope());
				}
				if (user_type == "2") {// 经营部或办事处回显所选择的分配给他的网点
					KonkaR3Shop konkaR3Shop = super.getKonkaR3ShopForSelect(mapping, form, request, response, null);
					konkaR3Shop.getRow().setFirst(0);
					konkaR3Shop.getRow().setCount(9999999);
					konkaR3Shop.getMap().put("selects", sb.toString());
					List<KonkaR3Shop> konkaR3Shop_list = getFacade().getKonkaR3ShopService()
							.getKonkaR3ShopPaginatedList(konkaR3Shop);
					sb = new StringBuffer();
					for (KonkaR3Shop shop : konkaR3Shop_list) {
						sb.append(shop.getShop_name()).append("<br />");
					}
					dynaBean.set("shops", sb.toString());
				} else {// 分公司、admin、事业部回显所选择的自己管辖区域内的网点
					// if (StringUtils.isNotBlank(sb.toString())) {
					// MmtEntpShop konkaEntpShop = new MmtEntpShop();
					// konkaEntpShop.getMap().put("selects", sb.toString());
					// List<MmtEntpShop> konkaEntpShop_list = getFacade().getMmtEntpShopService()
					// .getMmtEntpShopList(konkaEntpShop);
					// sb = new StringBuffer();
					// for (MmtEntpShop shop : konkaEntpShop_list) {
					// sb.append(shop.getShop_name()).append("<br />");
					// }
					// }
					// dynaBean.set("shops", sb.toString());
				}
			}

			// 资讯类别列表
			KonkaPeArticleType konkaPeArticleType = new KonkaPeArticleType();
			List<KonkaPeArticleType> peArticleTypeList = super.getFacade().getKonkaPeArticleTypeService()
					.getKonkaPeArticleTypeList(konkaPeArticleType);
			request.setAttribute("peArticleTypeList", peArticleTypeList);

			request.setAttribute("entity", entity);
			return mapping.findForward("view");
		} else {
			saveError(request, "errors.long", id);
			return mapping.findForward("list");
		}
	}

	public ActionForward delete(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		super.setNaviStringToRequestScope(form, request);
		DynaBean dynaBean = (DynaBean) form;

		String id = (String) dynaBean.get("id");
		String[] pks = (String[]) dynaBean.get("pks");
		String mod_id = (String) dynaBean.get("mod_id");
		String receive_user_type = (String) dynaBean.get("receive_user_type");
		String public_target = (String) dynaBean.get("public_target");

		PeProdUser PeProdUser = (PeProdUser) super.getSessionAttribute(request, Constants.USER_INFO);

		if (!StringUtils.isBlank(id) && GenericValidator.isLong(id)) {
			KonkaPeArticleInfo entity = new KonkaPeArticleInfo();
			entity.setId(new Long(id));
			entity.setDel_date(new Date());
			entity.setIs_del((long) 1);
			entity.setDel_user_id(PeProdUser.getId());
			super.getFacade().getKonkaPeArticleInfoService().removeKonkaPeArticleInfo(entity);
			saveMessage(request, "entity.deleted");
		} else if (!ArrayUtils.isEmpty(pks)) {
			KonkaPeArticleInfo entity = new KonkaPeArticleInfo();
			entity.setDel_date(new Date());
			entity.setDel_user_id(PeProdUser.getId());
			entity.setIs_del((long) 1);
			entity.getMap().put("pks", pks);
			super.getFacade().getKonkaPeArticleInfoService().removeKonkaPeArticleInfo(entity);
			saveMessage(request, "entity.deleted");
		}

		// the line below is added for pagination
		StringBuffer pathBuffer = new StringBuffer();
		pathBuffer.append(mapping.findForward("success").getPath());
		pathBuffer.append("&mod_id=").append(mod_id);
		pathBuffer.append("&receive_user_type=").append(receive_user_type);
		pathBuffer.append("&public_target=").append(public_target);
		pathBuffer.append(super.encodeSerializedQueryString(super.serialize(request, "id", "pks", "method")));
		ActionForward forward = new ActionForward(pathBuffer.toString(), true);
		// end

		return forward;
	}

	public ActionForward deleteFile(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		DynaBean dynaBean = (DynaBean) form;

		String id = (String) dynaBean.get("id");

		if (StringUtils.isNotBlank(id) && GenericValidator.isLong(id)) {
			KonkaPeAttachments entity = new KonkaPeAttachments();
			entity.setId(new Long(id));
			getFacade().getKonkaPeAttachmentsService().removeKonkaPeAttachments(entity);
			saveMessage(request, "entity.deleted");
		}

		super.renderText(response, "success");
		return null;
	}
}