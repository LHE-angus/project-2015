<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BASE_PD_CLASS">

	<typeAlias alias="basePdClass" type="com.ebiz.mmt.domain.BasePdClass" />

	

	<resultMap id="basePdClassResultForList" class="basePdClass">
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="CLS_NAME" property="cls_name" jdbcType="VARCHAR" />
		<result column="PAR_ID" property="par_id" jdbcType="DECIMAL" />
		<result column="ROOT_ID" property="root_id" jdbcType="DECIMAL" />
		<result column="ORDER_VALUE" property="order_value" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="basePdClassResult" class="basePdClass" extends="basePdClassResultForList">
	</resultMap>
	
	<resultMap id="basePdClassResultNum" class="basePdClass">
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="PD_COUNT" property="map.pd_count" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-basePdClass">
		<isNotEmpty prepend=" and " property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_name">CLS_NAME = #cls_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="par_id">PAR_ID = #par_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="root_id">ROOT_ID = #root_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.cls_name_like">UPPER(CLS_NAME) LIKE '%' || UPPER(#map.cls_name_like:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cls_id_in">CLS_ID in ($map.cls_id_in$)</isNotEmpty>
	</sql>

	<select id="selectBasePdClass" resultMap="basePdClassResult" parameterClass="basePdClass" >
		select * from  KONKA_BASE_PD_CLASS where 1 = 1
		<include refid="sf-basePdClass" />
	</select>

	<select id="selectBasePdClassList" resultMap="basePdClassResultForList" parameterClass="basePdClass" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from  KONKA_BASE_PD_CLASS where 1 = 1
		<include refid="sf-basePdClass" />
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectBasePdClassListByParClassId" resultMap="basePdClassResultForList" parameterClass="basePdClass" >
		select t.*
		  from  KONKA_BASE_PD_CLASS t
		 start with t.CLS_ID = #cls_id:DECIMAL#
		connect by prior t.cls_id = t.par_id
	</select>

	<select id="selectBasePdClassCount" resultClass="long" parameterClass="basePdClass" >
		select count(*) from  KONKA_BASE_PD_CLASS where 1 = 1
		<include refid="sf-basePdClass" />
	</select>

	<select id="selectBasePdClassPaginatedList" resultMap="basePdClassResult" parameterClass="basePdClass" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from  KONKA_BASE_PD_CLASS where 1 = 1
		<include refid="sf-basePdClass" />
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectBasePdClassCountNum" resultMap="basePdClassResultNum" parameterClass="basePdClass" >
		SELECT *
		  FROM (SELECT prev_cls_id || '0000' cls_id, pd_count
		          FROM (SELECT substr(s.cls_id, 1, 3) prev_cls_id,
		                       sum(s.pd_count) pd_count
		                  FROM (SELECT c.cls_id,
		                               c.par_id,
		                               c.cls_name,
		                               level cls_level,
		                               CONNECT_BY_ISLEAF IS_LEAF,
		                               value(p.pd_count, 0) pd_count
		                          FROM  KONKA_BASE_PD_CLASS c
		                          left join (SELECT t.cls_id,
		                                           count(t.cls_id) as pd_count
		                                      FROM pe_pd_model t
		                                     WHERE t.is_del = 0
		                                     <isNotEmpty prepend=" and " property="map.prod_entp_id">t.entp_prod_id = #map.prod_entp_id:DECIMAL#</isNotEmpty>
		                                     GROUP BY t.cls_id) p on c.cls_id =
		                                                             p.cls_id
		                         start with c.par_id = 0
		                        connect by prior c.cls_id = c.par_id) s
		                 GROUP BY substr(s.cls_id, 1, 3)))
		 where pd_count &gt; 0
		 	<isNotEmpty prepend=" AND " property="map.rownum_lt">rownum &lt;= 9</isNotEmpty>
		 ORDER BY pd_count desc
	</select>

	<insert id="insertBasePdClass" parameterClass="basePdClass">
		<selectKey resultClass="long" keyProperty="id">select seq_xxx.nextval as id from dual </selectKey>
		<![CDATA[insert into  KONKA_BASE_PD_CLASS (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="cls_id">CLS_ID</isNotNull>	
			<isNotNull prepend="," property="cls_name">CLS_NAME</isNotNull>	
			<isNotNull prepend="," property="par_id">PAR_ID</isNotNull>	
			<isNotNull prepend="," property="root_id">ROOT_ID</isNotNull>	
			<isNotNull prepend="," property="order_value">ORDER_VALUE</isNotNull>	
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="cls_id">#cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cls_name">#cls_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="par_id">#par_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="root_id">#root_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="order_value">#order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateBasePdClass" parameterClass="BasePdClass">
		update  KONKA_BASE_PD_CLASS
		<dynamic prepend="set">
			<isNotNull prepend="," property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cls_name">CLS_NAME = #cls_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="par_id">PAR_ID = #par_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="root_id">ROOT_ID = #root_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL = #is_del:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteBasePdClass" parameterClass="BasePdClass">
		delete from  KONKA_BASE_PD_CLASS where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>