<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="KONKA_PLAN_MONEY">

	<typeAlias alias="konkaPlanMoney" type="com.ebiz.mmt.domain.KonkaPlanMoney" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertKonkaPlanMoney" />
		<flushOnExecute statement="updateKonkaPlanMoney" />
		<flushOnExecute statement="deleteKonkaPlanMoney" />
	</cacheModel>

	<resultMap id="konkaPlanMoneyResultForList" class="konkaPlanMoney">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="P" property="p" jdbcType="DECIMAL" />
		<result column="Y" property="y" jdbcType="DECIMAL" />
		<result column="M" property="m" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="konkaPlanMoneyResult" class="konkaPlanMoney" extends="konkaPlanMoneyResultForList">
	</resultMap>
	
	<resultMap id="konkaPlanMoneyResultForYear" class="konkaPlanMoney" extends="konkaPlanMoneyResultForList">
		<result column="M1" property="map.m1" jdbcType="VARCHAR" />
		<result column="M2" property="map.m2" jdbcType="VARCHAR" />
		<result column="M3" property="map.m3" jdbcType="VARCHAR" />
		<result column="M4" property="map.m4" jdbcType="VARCHAR" />
		<result column="M5" property="map.m5" jdbcType="VARCHAR" />
		<result column="M6" property="map.m6" jdbcType="VARCHAR" />
		<result column="M7" property="map.m7" jdbcType="VARCHAR" />
		<result column="M8" property="map.m8" jdbcType="VARCHAR" />
		<result column="M9" property="map.m9" jdbcType="VARCHAR" />
		<result column="M10" property="map.m10" jdbcType="VARCHAR" />
		<result column="M11" property="map.m11" jdbcType="VARCHAR" />
		<result column="M12" property="map.m12" jdbcType="VARCHAR" />
		<result column="RATIO" property="map.ratio" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-konkaPlanMoney">
		<isNotEmpty prepend=" and " property="id">t.ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="p">t.P = #p:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="y">t.Y = #y:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="m">t.M = #m:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.year">t.Y like #map.year:VARCHAR# || '%'</isNotEmpty>
	</sql>

	<select id="selectKonkaPlanMoney" resultMap="konkaPlanMoneyResult" parameterClass="konkaPlanMoney" cacheModel="oneDayCache">
		select * from KONKA_PLAN_MONEY t where 1 = 1
		<include refid="sf-konkaPlanMoney" />
	</select>

	<select id="selectKonkaPlanMoneyList" resultMap="konkaPlanMoneyResultForList" parameterClass="konkaPlanMoney" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_PLAN_MONEY t where 1 = 1
		<include refid="sf-konkaPlanMoney" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectKonkaPlanMoneyCount" resultClass="long" parameterClass="konkaPlanMoney" cacheModel="oneDayCache">
		select count(*) from KONKA_PLAN_MONEY t where 1 = 1
		<include refid="sf-konkaPlanMoney" />
	</select>

	<select id="selectKonkaPlanMoneyPaginatedList" resultMap="konkaPlanMoneyResult" parameterClass="konkaPlanMoney" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from KONKA_PLAN_MONEY t where 1 = 1
		<include refid="sf-konkaPlanMoney" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectKonkaPlanMoneyListForYear" resultMap="konkaPlanMoneyResultForYear" parameterClass="konkaPlanMoney" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select t.id, t.p, t.y, t.m,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '01' <![CDATA[ and rownum <= 1 ]]>) as m1,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '02' <![CDATA[ and rownum <= 1 ]]>) as m2,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '03' <![CDATA[ and rownum <= 1 ]]>) as m3,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '04' <![CDATA[ and rownum <= 1 ]]>) as m4,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '05' <![CDATA[ and rownum <= 1 ]]>) as m5,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '06' <![CDATA[ and rownum <= 1 ]]>) as m6,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '07' <![CDATA[ and rownum <= 1 ]]>) as m7,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '08' <![CDATA[ and rownum <= 1 ]]>) as m8,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '09' <![CDATA[ and rownum <= 1 ]]>) as m9,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '10' <![CDATA[ and rownum <= 1 ]]>) as m10,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '11' <![CDATA[ and rownum <= 1 ]]>) as m11,
		       (select k.m
		          from konka_plan_money k
		         where k.p = 1
		           and k.y = t.y || '12' <![CDATA[ and rownum <= 1 ]]>) as m12,
		       (select value(sum(r.ratio),0) from konka_plan_ratio r where r.y = t.y and r.fgs_sn = r.dept_sn) as ratio
  		from konka_plan_money t
 		where 1 = 1 and t.p = 0
		<include refid="sf-konkaPlanMoney" />
		order by t.y desc, t.ID desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<insert id="insertKonkaPlanMoney" parameterClass="konkaPlanMoney">
		<selectKey resultClass="long" keyProperty="id">select SEQ_TASK_PARA.nextval as id from dual </selectKey>
		<![CDATA[insert into KONKA_PLAN_MONEY (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="p">P</isNotNull>	
			<isNotNull prepend="," property="y">Y</isNotNull>	
			<isNotNull prepend="," property="m">M</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="p">#p:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="y">#y:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="m">#m:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateKonkaPlanMoney" parameterClass="KonkaPlanMoney">
		update KONKA_PLAN_MONEY
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="p">P = #p:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="y">Y = #y:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="m">M = #m:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteKonkaPlanMoney" parameterClass="KonkaPlanMoney">
		delete from KONKA_PLAN_MONEY where 1 = 1
		<isNotEmpty prepend=" and " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" and " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" and " property="map.year">Y like #map.year# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="p">P = #p#</isNotEmpty>
	</delete>

</sqlMap>