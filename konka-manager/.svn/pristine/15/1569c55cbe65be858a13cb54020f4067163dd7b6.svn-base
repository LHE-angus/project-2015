<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="KONKA_PARTERSHIP">

	<typeAlias alias="konkaPartership" type="com.ebiz.mmt.domain.KonkaPartership" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertKonkaPartership" />
		<flushOnExecute statement="updateKonkaPartership" />
		<flushOnExecute statement="deleteKonkaPartership" />
	</cacheModel>

	<resultMap id="konkaPartershipResultForList" class="konkaPartership">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="SHOUDF_ID" property="shoudf_id" jdbcType="VARCHAR" />
		<result column="SHOUDF_NAME" property="shoudf_name" jdbcType="VARCHAR" />
		<result column="SONGDF_ID" property="songdf_id" jdbcType="VARCHAR" />
		<result column="SONGDF_NAME" property="songdf_name" jdbcType="VARCHAR" />
		<result column="ADD_USER_ID" property="add_user_id" jdbcType="VARCHAR" />
		<result column="ADD_DATE" property="add_date" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="konkaPartershipResult" class="konkaPartership" extends="konkaPartershipResultForList">
	</resultMap>

	<sql id="sf-konkaPartership">
		<isNotEmpty prepend=" and " property="id">a.ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shoudf_id">a.SHOUDF_ID = #shoudf_id:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shoudf_name">a.SHOUDF_NAME = #shoudf_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="songdf_id">a.SONGDF_ID = #songdf_id:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="songdf_name">a.SONGDF_NAME = #songdf_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_user_id">a.ADD_USER_ID = #add_user_id:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">a.ADD_DATE = #add_date:TIMESTAMP#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.shoudf_id_like">a.shoudf_id LIKE '%' || #map.shoudf_id_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.songdf_id_like">a.songdf_id LIKE '%' || #map.songdf_id_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.shoudf_name_like">a.shoudf_name LIKE '%' || #map.shoudf_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.songdf_name_like">a.songdf_name LIKE '%' || #map.songdf_name_like:VARCHAR# || '%'</isNotEmpty>
	</sql>

	<select id="selectKonkaPartership" resultMap="konkaPartershipResult" parameterClass="konkaPartership" cacheModel="oneDayCache">
		select * from KONKA_PARTERSHIP a where 1 = 1
		<include refid="sf-konkaPartership" />
	</select>

	<select id="selectKonkaPartershipList" resultMap="konkaPartershipResultForList" parameterClass="konkaPartership" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
			</isNotEmpty>
			select
				a.id,a.shoudf_id,a.songdf_id,a.add_user_id,a.add_date,d.customer_name
				as shoudf_name,e.customer_name as songdf_name from KONKA_PARTERSHIP a
				left join KONKA_R3_SHOP d on a.shoudf_id=d.r3_code
				left join KONKA_R3_SHOP e on a.songdf_id=e.r3_code
		<isNotEmpty property="map.dept_id_start">
			left join MV_ORG_OF_CUSTOMER b
    		  on a.SHOUDF_ID = b.R3_CODE
		</isNotEmpty>
		<isNotEmpty property="map.filter_by_ywy_id_eq">
			left join MV_ORG_OF_CUSTOMER c
    		  on a.SHOUDF_ID = c.R3_CODE
		</isNotEmpty>
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.dept_id_start">
				(b.cur_dept_id is not null and b.cur_dept_id in (
							select dept_id from konka_dept start with dept_id in (
							SELECT DISTINCT (dept_id)
			  							FROM KONKA_ROLE_DATA_LEVEL
			 							WHERE role_id IN (SELECT role_id
			                     			FROM KONKA_PE_ROLE_USER
			                    			WHERE user_id = #map.session_user_id#)
							) or dept_id = #map.dept_id_start# 
							connect by prior dept_id = par_id 
						)
				)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
			b.user_id = #map.filter_by_ywy_id_eq#
		</isNotEmpty> 
		<include refid="sf-konkaPartership" />
		<!-- order by ID asc -->
		order by add_date desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectKonkaPartershipCount" resultClass="long" parameterClass="konkaPartership" cacheModel="oneDayCache">
		select count(*) from KONKA_PARTERSHIP a
		<isNotEmpty property="map.dept_id_start">
			left join MV_ORG_OF_CUSTOMER b
    		  on a.SHOUDF_ID = b.R3_CODE
		</isNotEmpty>
		<isNotEmpty property="map.filter_by_ywy_id_eq">
			left join MV_ORG_OF_CUSTOMER c
    		  on a.SHOUDF_ID = c.R3_CODE
		</isNotEmpty>
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.dept_id_start">
				(b.cur_dept_id is not null and b.cur_dept_id in (
							select dept_id from konka_dept start with dept_id in (
							SELECT DISTINCT (dept_id)
			  							FROM KONKA_ROLE_DATA_LEVEL
			 							WHERE role_id IN (SELECT role_id
			                     			FROM KONKA_PE_ROLE_USER
			                    			WHERE user_id = #map.session_user_id#)
							) or dept_id = #map.dept_id_start# 
							connect by prior dept_id = par_id 
						)
				)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
			b.user_id = #map.filter_by_ywy_id_eq#
		</isNotEmpty> 
		<include refid="sf-konkaPartership" />
	</select>

	<select id="selectKonkaPartershipPaginatedList" resultMap="konkaPartershipResult" parameterClass="konkaPartership" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		
			select
				a.id,a.shoudf_id,a.songdf_id,a.add_user_id,a.add_date,d.customer_name
				as shoudf_name,e.customer_name as songdf_name from KONKA_PARTERSHIP a
				left join KONKA_R3_SHOP d on a.shoudf_id=d.r3_code
				left join KONKA_R3_SHOP e on a.songdf_id=e.r3_code
		<isNotEmpty property="map.dept_id_start">
			left join MV_ORG_OF_CUSTOMER b
    		  on a.SHOUDF_ID = b.R3_CODE
		</isNotEmpty>
		<isNotEmpty property="map.filter_by_ywy_id_eq">
			left join MV_ORG_OF_CUSTOMER b
    		  on a.SHOUDF_ID = b.R3_CODE
		</isNotEmpty>
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.dept_id_start">
				(b.cur_dept_id is not null and b.cur_dept_id in (
							select dept_id from konka_dept start with dept_id in (
							SELECT DISTINCT (dept_id)
			  							FROM KONKA_ROLE_DATA_LEVEL
			 							WHERE role_id IN (SELECT role_id
			                     			FROM KONKA_PE_ROLE_USER
			                    			WHERE user_id = #map.session_user_id#)
							) or dept_id = #map.dept_id_start# 
							connect by prior dept_id = par_id 
						)
				)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
			b.user_id = #map.filter_by_ywy_id_eq#
		</isNotEmpty> 
		<include refid="sf-konkaPartership" />
		<!-- order by ID asc -->
		order by add_date desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertKonkaPartership" parameterClass="konkaPartership">
		<selectKey resultClass="long" keyProperty="id">select KONKA_PARTERSHIP_SEQ.nextval as id from dual </selectKey>
		<![CDATA[insert into KONKA_PARTERSHIP (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="shoudf_id">SHOUDF_ID</isNotNull>	
			<isNotNull prepend="," property="shoudf_name">SHOUDF_NAME</isNotNull>	
			<isNotNull prepend="," property="songdf_id">SONGDF_ID</isNotNull>	
			<isNotNull prepend="," property="songdf_name">SONGDF_NAME</isNotNull>	
			<isNotNull prepend="," property="add_user_id">ADD_USER_ID</isNotNull>	
			<isNotNull prepend="," property="add_date">ADD_DATE</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shoudf_id">#shoudf_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shoudf_name">#shoudf_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="songdf_id">#songdf_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="songdf_name">#songdf_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_user_id">#add_user_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">#add_date:TIMESTAMP#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateKonkaPartership" parameterClass="KonkaPartership">
		update KONKA_PARTERSHIP
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shoudf_id">SHOUDF_ID = #shoudf_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shoudf_name">SHOUDF_NAME = #shoudf_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="songdf_id">SONGDF_ID = #songdf_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="songdf_name">SONGDF_NAME = #songdf_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_user_id">ADD_USER_ID = #add_user_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:TIMESTAMP#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteKonkaPartership" parameterClass="KonkaPartership">
		delete from KONKA_PARTERSHIP where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>