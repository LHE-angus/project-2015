package com.ebiz.mmt.web.struts.manager.admin;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.validator.GenericValidator;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ebiz.ssi.web.struts.bean.Pager;
import com.ebiz.mmt.domain.KonkaPeArticleUserMsg;
import com.ebiz.mmt.web.struts.BaseAction;

/**
 * Code by AutoGenerated Builder
 * AutoGenerated Builder Version 2.1
 * @author Hui,Gang
 * @datetime 2011-09-29 16:08:29
 */
public class KonkaPeArticleUserMsgAction extends BaseAction {
	public ActionForward unspecified(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		return this.list(mapping, form, request, response);
	}

	public ActionForward add(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		saveToken(request);
		// setNaviStringToRequestScope(form, request);

		return mapping.findForward("input");
	}

	public ActionForward list(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		// setNaviStringToRequestScope(form, request);
		
		DynaBean dynaBean = (DynaBean) form;
		super.encodeCharacterForGetMethod(dynaBean, request);

		Pager pager = (Pager) dynaBean.get("pager");

		KonkaPeArticleUserMsg entity = new KonkaPeArticleUserMsg();

		super.copyProperties(entity, form);

		Long recordCount = getFacade().getKonkaPeArticleUserMsgService().getKonkaPeArticleUserMsgCount(entity);
		pager.init(recordCount, pager.getPageSize(), pager.getRequestPage());
		entity.getRow().setFirst(pager.getFirstRow());
		entity.getRow().setCount(pager.getRowCount());
		List<KonkaPeArticleUserMsg> entityList = getFacade().getKonkaPeArticleUserMsgService().getKonkaPeArticleUserMsgPaginatedList(entity);
		request.setAttribute("entityList", entityList);

		return mapping.findForward("list");
	}

	public ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		saveToken(request);
		// setNaviStringToRequestScope(form, request);

		DynaBean dynaBean = (DynaBean) form;
		String id = (String) dynaBean.get("id");
		
		if (!GenericValidator.isLong(id)) {
			this.saveError(request, "errors.long", new String[] { id });
			return mapping.findForward("list");		
		}

		KonkaPeArticleUserMsg entity = new KonkaPeArticleUserMsg();
		entity.setId(Long.valueOf(id));
		entity = super.getFacade().getKonkaPeArticleUserMsgService().getKonkaPeArticleUserMsg(entity);
		if (null == entity) {
			saveMessage(request, "entity.missing");
			return mapping.findForward("list");
		}
		
		// the line below is added for pagination
		entity.setQueryString(super.serialize(request, "id", "method"));
		// end
		
		super.copyProperties(form, entity);
		
		return mapping.findForward("input");
	}
	
	public ActionForward save(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		if (isCancelled(request)) {
			return list(mapping, form, request, response);
		}
		if (!isTokenValid(request)) {
			saveError(request, "errors.token");
			return list(mapping, form, request, response);
		}
		resetToken(request);

		DynaBean dynaBean = (DynaBean) form;
		String mod_code = (String) dynaBean.get("mod_code");

		KonkaPeArticleUserMsg entity = new KonkaPeArticleUserMsg();
		super.copyProperties(entity, form);

		if (null == entity.getId()) {// insert
			super.getFacade().getKonkaPeArticleUserMsgService().createKonkaPeArticleUserMsg(entity);
			saveMessage(request, "entity.inserted");
		} else if (null != entity) {// update
			getFacade().getKonkaPeArticleUserMsgService().modifyKonkaPeArticleUserMsg(entity);
			saveMessage(request, "entity.updated");
		}

		// the line below is added for pagination
		StringBuffer pathBuffer = new StringBuffer();
		pathBuffer.append(mapping.findForward("success").getPath());
		pathBuffer.append("&mod_code=" + mod_code);
		pathBuffer.append("&");
		pathBuffer.append(super.encodeSerializedQueryString(entity.getQueryString()));
		ActionForward forward = new ActionForward(pathBuffer.toString(), true);
		// end
		return forward;
	}

	public ActionForward delete(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		DynaBean dynaBean = (DynaBean) form;

		String id = (String) dynaBean.get("id");
		String[] pks = (String[]) dynaBean.get("pks");
		String mod_code = (String) dynaBean.get("mod_code");

		if (!StringUtils.isBlank(id) && GenericValidator.isLong(id)) {
			KonkaPeArticleUserMsg entity = new KonkaPeArticleUserMsg();
			entity.setId(new Long(id));
			super.getFacade().getKonkaPeArticleUserMsgService().removeKonkaPeArticleUserMsg(entity);
			saveMessage(request, "entity.deleted");
		} else if (!ArrayUtils.isEmpty(pks)) {
			KonkaPeArticleUserMsg entity = new KonkaPeArticleUserMsg();
			entity.getMap().put("pks", pks);
			super.getFacade().getKonkaPeArticleUserMsgService().removeKonkaPeArticleUserMsg(entity);
			saveMessage(request, "entity.deleted");
		}
		
		// the line below is added for pagination
		StringBuffer pathBuffer = new StringBuffer();
		pathBuffer.append(mapping.findForward("success").getPath());
		pathBuffer.append("&mod_code=" + mod_code);
		pathBuffer.append("&");
		pathBuffer.append(super.encodeSerializedQueryString(super.serialize(request, "id", "pks", "method")));
		ActionForward forward = new ActionForward(pathBuffer.toString(), true);
		// end
		
		return forward;
	}
}