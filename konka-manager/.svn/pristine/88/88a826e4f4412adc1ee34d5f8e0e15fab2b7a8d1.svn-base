package com.ebiz.mmt.service.impl;
import java.util.HashMap;
import java.util.List;
import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import com.ebiz.mmt.dao.KonkaExpenseClaimsDao;
import com.ebiz.mmt.dao.KonkaPeAttachmentsDao;
import com.ebiz.mmt.dao.KonkaoaFilesAuditNodeDao;
import com.ebiz.mmt.dao.KonkaoaFilesContentDao;
import com.ebiz.mmt.dao.KonkaoaFilesDao;
import com.ebiz.mmt.dao.KonkaoaFilesPropertyDao;
import com.ebiz.mmt.dao.KonkaoaFilesRecipientDao;
import com.ebiz.mmt.domain.KonkaExpenseClaims;
import com.ebiz.mmt.domain.KonkaPeAttachments;
import com.ebiz.mmt.domain.KonkaoaFiles;
import com.ebiz.mmt.domain.KonkaoaFilesAuditNode;
import com.ebiz.mmt.domain.KonkaoaFilesContent;
import com.ebiz.mmt.domain.KonkaoaFilesProperty;
import com.ebiz.mmt.domain.KonkaoaFilesRecipient;
import com.ebiz.mmt.service.KonkaExpenseClaimsService;

/**
 * Code by AutoGenerated Builder AutoGenerated Builder Version 2.1
 * 
 * @author Hui,Gang
 * @datetime 2011-12-01 09:21:56
 */
@Service
public class KonkaExpenseClaimsServiceImpl implements KonkaExpenseClaimsService {

	@Resource
	private KonkaExpenseClaimsDao konkaExpenseClaimsDao;

	@Resource
	private KonkaoaFilesDao filesDao;

	@Resource
	private KonkaoaFilesContentDao filesContentDao;

	@Resource
	private KonkaPeAttachmentsDao KonkaPeAttachmentsDao;

	@Resource
	private KonkaoaFilesRecipientDao filesRecipientDao;

	@Resource
	private KonkaoaFilesPropertyDao filesPropertyDao;

	@Resource
	private KonkaoaFilesAuditNodeDao filesAuditNodeDao;

	public Long createKonkaExpenseClaims(KonkaExpenseClaims t) {

		KonkaoaFiles files = t.getFiles();
		Long id = this.filesDao.insertEntity(files);

		t.setFile_id(id);
		this.konkaExpenseClaimsDao.insertEntity(t);

		KonkaoaFilesContent filesContent = new KonkaoaFilesContent();
		filesContent.setLink_id(id);
		filesContent.setContent(files.getContent());
		this.filesContentDao.insertEntity(filesContent);

		List<KonkaoaFilesProperty> filesPropertyList = files.getFilesPropertyList();
		if (null != filesPropertyList) {
			for (KonkaoaFilesProperty fp : filesPropertyList) {
				fp.setLink_id(id);
				filesPropertyDao.insertEntity(fp);
			}
		}

		List<KonkaoaFilesRecipient> filesRecipientList = files.getFilesRecipientList();
		if (null != filesRecipientList) {
			for (KonkaoaFilesRecipient fr : filesRecipientList) {
				fr.setLink_id(id);
				filesRecipientDao.insertEntity(fr);
			}
		}

		List<KonkaPeAttachments> KonkaPeAttachmentsList = files.getAttachmentList();
		if (null != KonkaPeAttachmentsList) {
			for (KonkaPeAttachments KonkaPeAttachments : KonkaPeAttachmentsList) {
				KonkaPeAttachments.setLink_id(id);
				KonkaPeAttachments.setIs_del(0l);
				KonkaPeAttachments.setAdd_user_id(files.getSubmit_user_id());
				this.KonkaPeAttachmentsDao.insertEntity(KonkaPeAttachments);
			}
		}

		List<KonkaoaFilesAuditNode> filesAuditNodeList = files.getFilesAuditNodeList();
		if (null != filesAuditNodeList) {
			for (KonkaoaFilesAuditNode fau : filesAuditNodeList) {
				fau.setLink_id(id);
				this.filesAuditNodeDao.insertEntity(fau);
			}
		}

		return id;
	}

	public KonkaExpenseClaims getKonkaExpenseClaims(KonkaExpenseClaims t) {
		return this.konkaExpenseClaimsDao.selectEntity(t);
	}

	public Long getKonkaExpenseClaimsCount(KonkaExpenseClaims t) {
		return this.konkaExpenseClaimsDao.selectEntityCount(t);
	}

	public List<KonkaExpenseClaims> getKonkaExpenseClaimsList(KonkaExpenseClaims t) {
		return this.konkaExpenseClaimsDao.selectEntityList(t);
	}

	public int modifyKonkaExpenseClaims(KonkaExpenseClaims t) {
		int count = this.konkaExpenseClaimsDao.updateEntity(t);

		KonkaoaFiles files = t.getFiles();

		if (null != files) {
			this.filesDao.updateEntity(files);
		}
		
		KonkaoaFilesProperty _fp = new KonkaoaFilesProperty();
		_fp.setLink_id(t.getFile_id());
		filesPropertyDao.deleteEntity(_fp);
		List<KonkaoaFilesProperty> filesPropertyList = files.getFilesPropertyList();
		if (null != filesPropertyList) {
			for (KonkaoaFilesProperty fp : filesPropertyList) {
				fp.setLink_id(t.getFile_id());
				filesPropertyDao.insertEntity(fp);
			}
		}

		KonkaoaFilesRecipient _fr = new KonkaoaFilesRecipient();
		_fr.setLink_id(t.getFile_id());
		filesRecipientDao.deleteEntity(_fr);
		List<KonkaoaFilesRecipient> filesRecipientList = files.getFilesRecipientList();
		if (null != filesRecipientList) {
			for (KonkaoaFilesRecipient fr : filesRecipientList) {
				fr.setLink_id(t.getFile_id());
				filesRecipientDao.insertEntity(fr);
			}
		}

		KonkaoaFilesAuditNode _fan = new KonkaoaFilesAuditNode();
		_fan.setLink_id(t.getFile_id());
		// _fan.setAudit_type(t.getAudit_type());
		filesAuditNodeDao.deleteEntity(_fan);
		List<KonkaoaFilesAuditNode> filesAuditNodeList = files.getFilesAuditNodeList();
		if (null != filesAuditNodeList) {
			for (KonkaoaFilesAuditNode fau : filesAuditNodeList) {
				fau.setLink_id(t.getFile_id());
				this.filesAuditNodeDao.insertEntity(fau);
			}
		}

		List<KonkaPeAttachments> KonkaPeAttachmentsList = files.getAttachmentList();
		if (null != KonkaPeAttachmentsList) {
			for (KonkaPeAttachments KonkaPeAttachments : KonkaPeAttachmentsList) {
				KonkaPeAttachments.setLink_id(t.getFile_id());
				KonkaPeAttachments.setIs_del(0l);
				this.KonkaPeAttachmentsDao.insertEntity(KonkaPeAttachments);
			}
		}

		if (null != t.getContent()) {
			KonkaoaFilesContent filesContent = new KonkaoaFilesContent();
			filesContent.setLink_id(t.getFile_id());
			filesContent.setContent(t.getContent());
			this.filesContentDao.updateEntity(filesContent);
		}

		return count;
	}

	public int removeKonkaExpenseClaims(KonkaExpenseClaims t) {
		KonkaoaFiles files = new KonkaoaFiles();// 删除费用申请对应的审批表
		files.setId(t.getFile_id());
		// //System.out.println("-------------------------------file_id" + t.getFile_id());
		files.setIs_del(0);
		files = this.filesDao.selectKonkaoaFilesForExpenseClaims(files);
		if (null != files) {
			this.filesDao.deleteEntity(files);
		}

		KonkaPeAttachments attachment = new KonkaPeAttachments();// 删除费用申请对应的附件表
		attachment.setLink_id(t.getFile_id());
		attachment.setIs_del(0l);
		List<KonkaPeAttachments> attachmentList = this.KonkaPeAttachmentsDao.selectEntityList(attachment);
		if (null != attachmentList) {
			for (KonkaPeAttachments _attachment : attachmentList) {
				this.KonkaPeAttachmentsDao.deleteEntity(_attachment);
			}
		}

		return this.konkaExpenseClaimsDao.deleteEntity(t);// 删除费用申请表
	}

	public List<KonkaExpenseClaims> getKonkaExpenseClaimsPaginatedList(KonkaExpenseClaims t) {
		return this.konkaExpenseClaimsDao.selectEntityPaginatedList(t);
	}

	public List<HashMap<String, String>> getKonkaExpenseClaimsCountList(KonkaExpenseClaims t) {
		return this.konkaExpenseClaimsDao.getKonkaExpenseClaimsCountList(t);
	}

	public Long getKonkaExpenseClaimsCountListCount(KonkaExpenseClaims t) {
		return this.konkaExpenseClaimsDao.getKonkaExpenseClaimsCountListCount(t);
	}
}