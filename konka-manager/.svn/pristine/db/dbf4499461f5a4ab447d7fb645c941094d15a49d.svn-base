<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="STATISTICAL_DIMENSION_DATA_MONTH">

	<typeAlias alias="statisticalDimensionDataMonth" type="com.ebiz.mmt.domain.StatisticalDimensionDataMonth" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertStatisticalDimensionDataMonth" />
		<flushOnExecute statement="updateStatisticalDimensionDataMonth" />
		<flushOnExecute statement="deleteStatisticalDimensionDataMonth" />
	</cacheModel>

	<resultMap id="statisticalDimensionDataMonthResultForList" class="statisticalDimensionDataMonth">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="R3_CODE" property="r3_code" jdbcType="VARCHAR" />
		<result column="CUSTOMER_CODE" property="customer_code" jdbcType="VARCHAR" />
		<result column="BRANCH_NAME" property="branch_name" jdbcType="VARCHAR" />
		<result column="SHOP_STATE" property="shop_state" jdbcType="DECIMAL" />
		<result column="CATEGORY_ID" property="category_id" jdbcType="DECIMAL" />
		<result column="MONTH_ID" property="month_id" jdbcType="DECIMAL" />
		<result column="JOIN_DATE" property="join_date" jdbcType="TIMESTAMP" />
		<result column="JOIN_DATE_TYPE" property="join_date_type" jdbcType="DECIMAL" />
		<result column="STOP_DATE" property="stop_date" jdbcType="TIMESTAMP" />
		<result column="STOP_DATE_TYPE" property="stop_date_type" jdbcType="DECIMAL" />
		<result column="P_INDEX" property="p_index" jdbcType="DECIMAL" />
		<result column="STORE_NUM" property="store_num" jdbcType="DECIMAL" />
		<result column="LOSS_STORE_NUM" property="loss_store_num" jdbcType="DECIMAL" />
		<result column="ADD_STORE_NUM" property="add_store_num" jdbcType="DECIMAL" />
		<result column="AGENT_NUM" property="agent_num" jdbcType="DECIMAL" />
		<result column="LOSS_AGENT_NUM" property="loss_agent_num" jdbcType="DECIMAL" />
		<result column="YWY_NUM" property="ywy_num" jdbcType="DECIMAL" />
		<result column="PROMOTER_NUM" property="promoter_num" jdbcType="DECIMAL" />
		<result column="MONTH_CUSTOMER_SALE" property="month_customer_sale" jdbcType="DECIMAL" />
		<result column="MONTH_TURNOVER" property="month_turnover" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY" property="month_settle_money" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_NUM" property="month_settle_num" jdbcType="DECIMAL" />
		<result column="MONTH_QDXT_ORDER_NUM" property="month_qdxt_order_num" jdbcType="DECIMAL" />
		<result column="MONTH_QDXT_ORDER_MONEY" property="month_qdxt_order_money" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY" property="month_retail_money" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_NUM" property="month_retail_num" jdbcType="DECIMAL" />
		<result column="UPDATE_DATE" property="update_date" jdbcType="TIMESTAMP" />
		<result column="UPDATE_USER_ID" property="update_user_id" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
		<result column="CUSTOMER_RISK_TYPE" property="customer_risk_type" jdbcType="DECIMAL" />
		<result column="CUSTOMER_RWWCBFB" property="customer_rwwcbfb" jdbcType="DECIMAL" />
		<result column="ADD_AGENT_NUM" property="add_agent_num" jdbcType="DECIMAL" />
		<result column="CUSTOMER_NAME" property="customer_name" jdbcType="VARCHAR" />
		<result column="IS_SDF" property="is_sdf" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_BZ" property="month_retail_money_bz" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TBZF" property="month_retail_money_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_TURNOVER_BZ" property="month_turnover_bz" jdbcType="DECIMAL" />
		<result column="MONTH_TURNOVER_TBZF" property="month_turnover_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_BZ" property="month_settle_money_bz" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_TBZF" property="month_settle_money_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_QDXT_ORDER_NUM_BZ" property="month_qdxt_order_num_bz" jdbcType="DECIMAL" />
		<result column="MONTH_QDXT_ORDER_NUM_ZF" property="month_qdxt_order_num_zf" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_TURNOVER" property="pre_month_turnover" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_CUSTOMER_SALE" property="pre_month_customer_sale" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_SETTLE_MONEY" property="pre_month_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_SETTLE_NUM" property="pre_month_settle_num" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_QDXT_ORDER_NUM" property="pre_month_qdxt_order_num" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_QDXT_ORDER_MONEY" property="pre_month_qdxt_order_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_MONEY" property="pre_month_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_NUM" property="pre_month_retail_num" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_TURNOVER" property="pre_year_turnover" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_CUSTOMER_SALE" property="pre_year_customer_sale" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_SETTLE_MONEY" property="pre_year_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_SETTLE_NUM" property="pre_year_settle_num" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_QDXT_ORDER_NUM" property="pre_year_qdxt_order_num" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_QDXT_ORDER_MONEY" property="pre_year_qdxt_order_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_RETAIL_MONEY" property="pre_year_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_RETAIL_NUM" property="pre_year_retail_num" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TASK" property="month_retail_money_task" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_MONEY_TASK" property="pre_month_retail_money_task" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_RETAIL_MONEY_TASK" property="pre_year_retail_money_task" jdbcType="DECIMAL" />
	</resultMap>
	
	<!-- 门店网店统计表 2014-11-20 -->
	<resultMap id="statisticalDimensionDataMonthResultForStoreAndAgent" class="statisticalDimensionDataMonth" extends="statisticalDimensionDataMonthResultForList">
		<result column="YEAR" property="map.year" jdbcType="VARCHAR" />
		<result column="FGS_NAME" property="map.fgs_name" jdbcType="VARCHAR" />
		<result column="C_NAME" property="map.c_name" jdbcType="VARCHAR" />
		<result column="YWY_NAME" property="map.ywy_name" jdbcType="VARCHAR" />
		<result column="MONTH" property="map.month" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 客户分类统计表 2014-11-20 -->
	<resultMap id="statisticalDimensionDataMonthResultForCustomerFltj" class="statisticalDimensionDataMonth">
		<result column="C_NAME" property="map.c_name" jdbcType="VARCHAR" />
		<result column="CUSTOMER_NUM_PRE" property="map.customer_num_pre" jdbcType="DECIMAL" />
		<result column="NEW_WITHOUT_SETTLE_PRE" property="map.new_without_settle_pre" jdbcType="DECIMAL" />
		<result column="NEW_WITH_SETTLE_PRE" property="map.new_with_settle_pre" jdbcType="DECIMAL" />
		<result column="CUSTOMER_NUM_NOW" property="map.customer_num_now" jdbcType="DECIMAL" />
		<result column="NEW_WITHOUT_SETTLE_NOW" property="map.new_without_settle_now" jdbcType="DECIMAL" />
		<result column="NEW_WITH_SETTLE_NOW" property="map.new_with_settle_now" jdbcType="DECIMAL" />
	</resultMap>
	
	<!-- 门店分类统计表2014-11-17 -->
	<resultMap id="statisticalDimensionDataMonthResultForStoreTypeFltj" class="statisticalDimensionDataMonth">
	    <result column="C_NAME" property="map.c_name" jdbcType="VARCHAR" />
		<result column="STORE_NUM_PRE" property="map.store_num_pre" jdbcType="DECIMAL" />
		<result column="NEW_WITHOUT_SETTLE_PRE" property="map.new_without_settle_pre" jdbcType="DECIMAL" />
		<result column="NEW_WITH_SETTLE_PRE" property="map.new_with_settle_pre" jdbcType="DECIMAL" />
		<result column="STORE_NUM_NOW" property="map.store_num_now" jdbcType="DECIMAL" />
		<result column="NEW_WITHOUT_SETTLE_NOW" property="map.new_without_settle_now" jdbcType="DECIMAL" />
		<result column="NEW_WITH_SETTLE_NOW" property="map.new_with_settle_now" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="statisticalDimensionDataMonthResult" class="statisticalDimensionDataMonth" extends="statisticalDimensionDataMonthResultForList">
	</resultMap>

	<sql id="sf-statisticalDimensionDataMonth">
		<isNotEmpty prepend=" and " property="id">a.ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="r3_code">a.R3_CODE = #r3_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_code">a.CUSTOMER_CODE = #customer_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="branch_name">a.BRANCH_NAME = #branch_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_state">a.SHOP_STATE = #shop_state:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="category_id">a.CATEGORY_ID = #category_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_id">a.MONTH_ID = #month_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="join_date">a.JOIN_DATE = #join_date:TIMESTAMP#</isNotEmpty>
		<isNotEmpty prepend=" and " property="join_date_type">a.JOIN_DATE_TYPE = #join_date_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="stop_date">a.STOP_DATE = #stop_date:TIMESTAMP#</isNotEmpty>
		<isNotEmpty prepend=" and " property="stop_date_type">a.STOP_DATE_TYPE = #stop_date_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="p_index">a.P_INDEX = #p_index:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="store_num">a.STORE_NUM = #store_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="loss_store_num">a.LOSS_STORE_NUM = #loss_store_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_store_num">a.ADD_STORE_NUM = #add_store_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="agent_num">a.AGENT_NUM = #agent_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="loss_agent_num">a.LOSS_AGENT_NUM = #loss_agent_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="ywy_num">a.YWY_NUM = #ywy_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="promoter_num">a.PROMOTER_NUM = #promoter_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_customer_sale">a.MONTH_CUSTOMER_SALE = #month_customer_sale:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_turnover">a.MONTH_TURNOVER = #month_turnover:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_settle_money">a.MONTH_SETTLE_MONEY = #month_settle_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_settle_num">a.MONTH_SETTLE_NUM = #month_settle_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_qdxt_order_num">a.MONTH_QDXT_ORDER_NUM = #month_qdxt_order_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_qdxt_order_money">a.MONTH_QDXT_ORDER_MONEY = #month_qdxt_order_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_retail_money">a.MONTH_RETAIL_MONEY = #month_retail_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_retail_num">a.MONTH_RETAIL_NUM = #month_retail_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="update_date">a.UPDATE_DATE = #update_date:TIMESTAMP#</isNotEmpty>
		<isNotEmpty prepend=" and " property="update_user_id">a.UPDATE_USER_ID = #update_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">a.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_risk_type">a.CUSTOMER_RISK_TYPE = #customer_risk_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_rwwcbfb">a.CUSTOMER_RWWCBFB = #customer_rwwcbfb:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_agent_num">a.ADD_AGENT_NUM = #add_agent_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_name">a.CUSTOMER_NAME = #customer_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_sdf">a.IS_SDF = #is_sdf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_retail_money_bz">a.MONTH_RETAIL_MONEY_BZ = #month_retail_money_bz:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_retail_money_tbzf">a.MONTH_RETAIL_MONEY_TBZF = #month_retail_money_tbzf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_turnover_bz">a.MONTH_TURNOVER_BZ = #month_turnover_bz:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_turnover_tbzf">a.MONTH_TURNOVER_TBZF = #month_turnover_tbzf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_settle_money_bz">a.MONTH_SETTLE_MONEY_BZ = #month_settle_money_bz:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_settle_money_tbzf">a.MONTH_SETTLE_MONEY_TBZF = #month_settle_money_tbzf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_qdxt_order_num_bz">a.MONTH_QDXT_ORDER_NUM_BZ = #month_qdxt_order_num_bz:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_qdxt_order_num_zf">a.MONTH_QDXT_ORDER_NUM_ZF = #month_qdxt_order_num_zf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_turnover">a.PRE_MONTH_TURNOVER = #pre_month_turnover:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_customer_sale">a.PRE_MONTH_CUSTOMER_SALE = #pre_month_customer_sale:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_settle_money">a.PRE_MONTH_SETTLE_MONEY = #pre_month_settle_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_settle_num">a.PRE_MONTH_SETTLE_NUM = #pre_month_settle_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_qdxt_order_num">a.PRE_MONTH_QDXT_ORDER_NUM = #pre_month_qdxt_order_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_qdxt_order_money">a.PRE_MONTH_QDXT_ORDER_MONEY = #pre_month_qdxt_order_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_retail_money">a.PRE_MONTH_RETAIL_MONEY = #pre_month_retail_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_retail_num">a.PRE_MONTH_RETAIL_NUM = #pre_month_retail_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_turnover">PRE_YEAR_TURNOVER = #pre_year_turnover:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_customer_sale">PRE_YEAR_CUSTOMER_SALE = #pre_year_customer_sale:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_settle_money">PRE_YEAR_SETTLE_MONEY = #pre_year_settle_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_settle_num">PRE_YEAR_SETTLE_NUM = #pre_year_settle_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_qdxt_order_num">PRE_YEAR_QDXT_ORDER_NUM = #pre_year_qdxt_order_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_qdxt_order_money">PRE_YEAR_QDXT_ORDER_MONEY = #pre_year_qdxt_order_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_retail_money">PRE_YEAR_RETAIL_MONEY = #pre_year_retail_money:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_retail_num">PRE_YEAR_RETAIL_NUM = #pre_year_retail_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="month_retail_money_task">MONTH_RETAIL_MONEY_TASK = #month_retail_money_task:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_month_retail_money_task">PRE_MONTH_RETAIL_MONEY_TASK = #pre_month_retail_money_task:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pre_year_retail_money_task">PRE_YEAR_RETAIL_MONEY_TASK = #pre_year_retail_money_task:DECIMAL#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.r3_code_like">a.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.customer_name_like">a.CUSTOMER_NAME like '%' || #map.customer_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_name_like">b.YWY_NAME like '%' || #map.ywy_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.fgs_id">b.FGS_ID = #map.fgs_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_cw">t.is_cw = #map.is_cw:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_id1">kc.PAR_INDEX = #map.category_id1#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_id2">kc.C_INDEX = #map.category_id2#</isNotEmpty>
		
		 
		 <isNotEmpty prepend=" " property="map.dept_id_start">
		 	left join MV_ORG_OF_CUSTOMER_ALL ee on ee.r3_code= a.r3_code
		 </isNotEmpty>
		 <isNotEmpty prepend=" " property="map.filter_by_ywy_id_eq">
		 	left join MV_ORG_OF_CUSTOMER_ALL ee on ee.r3_code= a.r3_code
		 </isNotEmpty>
		 <isNotEmpty prepend=" and " property="map.fgs_dept_value"> b.fgs_id = #map.fgs_dept_value#</isNotEmpty>
		 <isNotEmpty prepend=" and " property="map.dept_id_start">
			(ee.cur_dept_id is not null and  ee.cur_dept_id in (
						select dept_id from konka_dept start with dept_id in (
						SELECT DISTINCT (dept_id)
		  							FROM KONKA_ROLE_DATA_LEVEL
		 							WHERE role_id IN (SELECT role_id
		                     			FROM KONKA_PE_ROLE_USER
		                    			WHERE user_id = #map.session_user_id#)
						) or dept_id = #map.dept_id_start# 
						connect by prior dept_id = par_id 
					)
			)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
			ee.user_id = #map.filter_by_ywy_id_eq#
		</isNotEmpty>
		
	</sql>

	<select id="selectStatisticalDimensionDataMonth" resultMap="statisticalDimensionDataMonthResult" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		select * from STATISTICAL_DIMENSION_DATA_MONTH a where 1 = 1
		<include refid="sf-statisticalDimensionDataMonth" />
	</select>

	<select id="selectStatisticalDimensionDataMonthList" resultMap="statisticalDimensionDataMonthResultForList" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from STATISTICAL_DIMENSION_DATA_MONTH a where 1 = 1
		<include refid="sf-statisticalDimensionDataMonth" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectStatisticalDimensionDataMonthCount" resultClass="long" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		select count(*) from STATISTICAL_DIMENSION_DATA_MONTH a where 1 = 1
		<include refid="sf-statisticalDimensionDataMonth" />
	</select>

	<select id="selectStatisticalDimensionDataMonthPaginatedList" resultMap="statisticalDimensionDataMonthResult" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from STATISTICAL_DIMENSION_DATA_MONTH a where 1 = 1
		<include refid="sf-statisticalDimensionDataMonth" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- 门店网点统计表 2014-11-20 -->
	<select id="selectStatisticalDimensionDataMonthForStoreAndAgentCount" resultClass="long" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		select count(*) from STATISTICAL_DIMENSION_DATA_MONTH a
		left join STATISTICAL_DIMENSION_KHFGS b on a.r3_code = b.r3_code
		left join Konka_Category kc on kc.C_INDEX = a.category_id
		left join STATISTICAL_DIMENSION_TIME_MONTH t on t.id = a.month_id
		 where 1 = 1
		<include refid="sf-statisticalDimensionDataMonth" />
	</select>
	
	<!-- 门店网点统计表  2014-11-20-->
	<select id="selectStatisticalDimensionDataMonthForStoreAndAgentPaginatedList" resultMap="statisticalDimensionDataMonthResultForStoreAndAgent" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*,b.fgs_name,t.month,t.year,b.ywy_name,kc.c_name from STATISTICAL_DIMENSION_DATA_MONTH a
		left join STATISTICAL_DIMENSION_KHFGS b on a.r3_code = b.r3_code
		left join Konka_Category kc on kc.C_INDEX = a.category_id
		left join STATISTICAL_DIMENSION_TIME_MONTH t on t.id = a.month_id
		 where 1 = 1
		<include refid="sf-statisticalDimensionDataMonth" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	
	<!-- 客户类型管理统计表 2014-11-20 -->
	<select id="selectStatisticalDimensionDataMonthForCustomerFltjCount" resultClass="long" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		select count(1) from KONKA_CATEGORY kc
		WHERE 1 = 1 AND kc.C_TYPE = 10 AND kc.IS_DEL = 0
		<isNotEmpty prepend=" and " property="map.category_id1">kc.PAR_INDEX = #map.category_id1#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_id2">kc.C_INDEX = #map.category_id2#</isNotEmpty>
	</select>
	
	
	<!-- 客户类型管理统计表  2014-11-20-->
	<select id="selectStatisticalDimensionDataMonthForCustomerFltjPaginatedList" resultMap="statisticalDimensionDataMonthResultForCustomerFltj" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		<![CDATA[
		select 
 				kc.C_NAME,
                kc.C_INDEX,
                nvl(t1.CUSTOMER_NUM_PRE,0) CUSTOMER_NUM_PRE,
                nvl(t2.NEW_WITHOUT_SETTLE_PRE,0) NEW_WITHOUT_SETTLE_PRE,
                nvl(t3.NEW_WITH_SETTLE_PRE,0) NEW_WITH_SETTLE_PRE,
                nvl(t4.CUSTOMER_NUM_NOW,0) CUSTOMER_NUM_NOW,
                nvl(t5.NEW_WITHOUT_SETTLE_NOW,0) NEW_WITHOUT_SETTLE_NOW,
                nvl(t6.NEW_WITH_SETTLE_NOW,0) NEW_WITH_SETTLE_NOW
		from KONKA_CATEGORY kc
		left join (select a.CATEGORY_ID,count(a.ID) CUSTOMER_NUM_PRE  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]>
		<isNotEmpty prepend=" and " property="map.month_id_pre">a.MONTH_ID = #map.month_id_pre:DECIMAL#</isNotEmpty>
		 <![CDATA[ group by a.CATEGORY_ID) t1 on t1.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,count(a.ID) NEW_WITHOUT_SETTLE_PRE  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_pre">a.MONTH_ID = #map.month_id_pre:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY<=0 group by a.CATEGORY_ID) t2 on t2.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,count(a.ID) NEW_WITH_SETTLE_PRE  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]>
		<isNotEmpty prepend=" and " property="map.month_id_pre">a.MONTH_ID = #map.month_id_pre:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY>0 group by a.CATEGORY_ID) t3 on t3.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,count(a.ID) CUSTOMER_NUM_NOW  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_now">a.MONTH_ID = #map.month_id_now:DECIMAL#</isNotEmpty>
		  <![CDATA[ group by a.CATEGORY_ID) t4 on t4.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,count(a.ID) NEW_WITHOUT_SETTLE_NOW  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_now">a.MONTH_ID = #map.month_id_now:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY<=0 group by a.CATEGORY_ID) t5 on t5.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,count(a.ID) NEW_WITH_SETTLE_NOW  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_now">a.MONTH_ID = #map.month_id_now:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY>0 group by a.CATEGORY_ID) t6 on t6.CATEGORY_ID=kc.C_INDEX]]>
		WHERE 1 = 1 AND kc.C_TYPE = 10 AND kc.IS_DEL = 0
		<isNotEmpty prepend=" and " property="map.category_id1">kc.PAR_INDEX = #map.category_id1#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_id2">kc.C_INDEX = #map.category_id2#</isNotEmpty>
		<![CDATA[ORDER BY kc.PAR_INDEX, kc.C_INDEX ASC]]>
		
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- 门店分类统计表2014-11-17 数量 -->
	<select id="selectStatisticalDimensionDataMonthForStoreTypeFltjCount" resultClass="long" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
	select count(1) from KONKA_CATEGORY kc
	WHERE 1 = 1 AND kc.C_TYPE = 10 AND kc.IS_DEL = 0
	<isNotEmpty prepend = " and " property="map.category_id1">kc.PAR_INDEX = #map.category_id1:DECIMAL#</isNotEmpty>
	<isNotEmpty prepend = " and " property="map.category_id2">kc.C_INDEX = #map.category_id2:DECIMAL#</isNotEmpty>
	</select>
	
	<!-- 门店分类统计表2014-11-17 查询 -->
	<select id="selectStatisticalDimensionDataMonthForStoreTypeFltjPaginatedList" resultMap="statisticalDimensionDataMonthResultForStoreTypeFltj" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		<![CDATA[
		select 
 				kc.C_NAME,
                kc.C_INDEX,
                nvl(t1.STORE_NUM_PRE,0) STORE_NUM_PRE,
                nvl(t2.NEW_WITHOUT_SETTLE_PRE,0) NEW_WITHOUT_SETTLE_PRE,
                nvl(t3.NEW_WITH_SETTLE_PRE,0) NEW_WITH_SETTLE_PRE,
                nvl(t4.STORE_NUM_NOW,0) STORE_NUM_NOW,
                nvl(t5.NEW_WITHOUT_SETTLE_NOW,0) NEW_WITHOUT_SETTLE_NOW,
                nvl(t6.NEW_WITH_SETTLE_NOW,0) NEW_WITH_SETTLE_NOW
		from KONKA_CATEGORY kc
		left join (select a.CATEGORY_ID,sum(a.STORE_NUM) STORE_NUM_PRE  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]>
		<isNotEmpty prepend=" and " property="map.month_id_pre">a.MONTH_ID = #map.month_id_pre:DECIMAL#</isNotEmpty>
		 <![CDATA[ group by a.CATEGORY_ID) t1 on t1.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,sum(a.STORE_NUM) NEW_WITHOUT_SETTLE_PRE  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_pre">a.MONTH_ID = #map.month_id_pre:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY<=0 group by a.CATEGORY_ID) t2 on t2.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,sum(a.STORE_NUM) NEW_WITH_SETTLE_PRE  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]>
		<isNotEmpty prepend=" and " property="map.month_id_pre">a.MONTH_ID = #map.month_id_pre:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY>0 group by a.CATEGORY_ID) t3 on t3.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,sum(a.STORE_NUM) STORE_NUM_NOW  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_now">a.MONTH_ID = #map.month_id_now:DECIMAL#</isNotEmpty>
		  <![CDATA[ group by a.CATEGORY_ID) t4 on t4.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,sum(a.STORE_NUM) NEW_WITHOUT_SETTLE_NOW  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_now">a.MONTH_ID = #map.month_id_now:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY<=0 group by a.CATEGORY_ID) t5 on t5.CATEGORY_ID=kc.C_INDEX
		left join (select a.CATEGORY_ID,sum(a.STORE_NUM) NEW_WITH_SETTLE_NOW  
		from STATISTICAL_DIMENSION_DATA_MONTH a where 1=1 and a.is_del=0]]> 
		<isNotEmpty prepend=" and " property="map.month_id_now">a.MONTH_ID = #map.month_id_now:DECIMAL#</isNotEmpty>
		  <![CDATA[ and a.MONTH_SETTLE_MONEY>0 group by a.CATEGORY_ID) t6 on t6.CATEGORY_ID=kc.C_INDEX]]>
		WHERE 1 = 1 AND kc.C_TYPE = 10 AND kc.IS_DEL = 0
		<isNotEmpty prepend=" and " property="map.category_id1">kc.PAR_INDEX = #map.category_id1:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_id2">kc.C_INDEX = #map.category_id2:DECIMAL#</isNotEmpty>
		<![CDATA[ORDER BY kc.PAR_INDEX, kc.C_INDEX ASC]]>
		
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- 根据年获得目标销售额，实际销售额，同期销售额 2014-12-08 -->
	<resultMap id="statisticalDimensionDataMonthResultForRetailMoneyByYear" class="statisticalDimensionDataMonth">
		<result column="MONTH_RETAIL_MONEY" property="month_retail_money" jdbcType="DECIMAL" />
		<result column="MONTH_CUSTOMER_SALE" property="month_customer_sale" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_MONEY" property="pre_month_retail_money" jdbcType="DECIMAL" />
		<result column="YEAR" property="map.year" jdbcType="DECIMAL" />
	</resultMap>
	<!-- 根据年获得目标销售额，实际销售额，同期销售额 2014-12-08-->
	<select id="selectRetailMoneyByYear" resultMap="statisticalDimensionDataMonthResultForRetailMoneyByYear" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select 
			sum(a.MONTH_RETAIL_MONEY)/10000 MONTH_RETAIL_MONEY,
			sum(a.MONTH_CUSTOMER_SALE)/10000 MONTH_CUSTOMER_SALE,
			sum(a.PRE_MONTH_RETAIL_MONEY)/10000 PRE_MONTH_RETAIL_MONEY,
			b.year
			from STATISTICAL_DIMENSION_DATA_MONTH a
		left join STATISTICAL_DIMENSION_TIME_MONTH b on b.ID = a.MONTH_ID
	    where 1=1 
	    <isNotEmpty prepend=" and " property="map.year">b.year = #map.year:DECIMAL#</isNotEmpty>
	    group by b.YEAR
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- 根据年获得目标销售额，实际销售额，同期销售额 2014-12-08 -->
	<resultMap id="statisticalDimensionDataMonthResultForRetailMoneyByYear2" class="statisticalDimensionDataMonth">
		<result column="MONTH_RETAIL_MONEY" property="month_retail_money" jdbcType="DECIMAL" />
		<result column="MONTH_CUSTOMER_SALE" property="month_customer_sale" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_MONEY" property="pre_month_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_RETAIL_MONEY" property="pre_year_retail_money" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY" property="month_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_SETTLE_MONEY" property="pre_month_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_SETTLE_MONEY" property="pre_year_settle_money" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TASK" property="month_retail_money_task" jdbcType="DECIMAL" />
		
		<result column="YEAR" property="map.year" jdbcType="DECIMAL" />
		<result column="MONTH" property="map.month" jdbcType="DECIMAL" />
	</resultMap>
	<!-- 根据年获得目标销售额，实际销售额，同期销售额 2014-12-08-->
	<select id="selectRetailMoneyByYearForMonths" resultMap="statisticalDimensionDataMonthResultForRetailMoneyByYear2" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select 
			sum(a.MONTH_RETAIL_MONEY)/10000 MONTH_RETAIL_MONEY,
			sum(a.MONTH_RETAIL_MONEY_TASK)/10000 MONTH_RETAIL_MONEY_TASK,
			sum(a.MONTH_CUSTOMER_SALE)/10000 MONTH_CUSTOMER_SALE,
			sum(a.PRE_MONTH_RETAIL_MONEY)/10000 PRE_MONTH_RETAIL_MONEY,
			sum(a.PRE_YEAR_RETAIL_MONEY)/10000 PRE_YEAR_RETAIL_MONEY,
			sum(a.MONTH_SETTLE_MONEY)/10000 MONTH_SETTLE_MONEY,
			sum(a.PRE_MONTH_SETTLE_MONEY)/10000 PRE_MONTH_SETTLE_MONEY,
			sum(a.PRE_YEAR_SETTLE_MONEY)/10000 PRE_YEAR_SETTLE_MONEY,
			c.year,
			c.month
			from STATISTICAL_DIMENSION_DATA_MONTH a
			left join STATISTICAL_DIMENSION_KHFGS b on b.R3_CODE = a.R3_CODE
			left join STATISTICAL_DIMENSION_TIME_MONTH c on c.ID = a.MONTH_ID
	    where 1=1 
	    <isNotEmpty prepend=" and " property="map.year">c.year = #map.year:DECIMAL#</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.month">c.month = #map.month:DECIMAL#</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.fgs_id">b.fgs_id = #map.fgs_id:DECIMAL#</isNotEmpty>
	    group by c.YEAR,c.MONTH order by c.year,c.month
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- 根据区域分组，计算各种额 2014-12-08 -->
	<resultMap id="statisticalDimensionDataMonthResultGroupByArea" class="statisticalDimensionDataMonth">
		<result column="MONTH_CUSTOMER_SALE" property="month_customer_sale" jdbcType="DECIMAL" />
		<result column="CUSTOMER_RWWCBFB" property="customer_rwwcbfb" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TASK" property="month_retail_money_task" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY" property="month_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_MONEY" property="pre_month_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_RETAIL_MONEY" property="pre_year_retail_money" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TBZF" property="month_retail_money_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_BZ" property="month_retail_money_bz" jdbcType="DECIMAL" />
		
		<result column="MONTH_SETTLE_MONEY" property="month_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_SETTLE_MONEY" property="pre_month_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_SETTLE_MONEY" property="pre_year_settle_money" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_TBZF" property="month_settle_money_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_BZ" property="month_settle_money_bz" jdbcType="DECIMAL" />
		<result column="NAME" property="map.name" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 根据区域分组，计算各种额 2014-12-08-->
	<select id="selectMoneysGroupByArea" resultMap="statisticalDimensionDataMonthResultGroupByArea" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select 
			<isNotEmpty prepend=" " property="map.groupbyWhat">
			$map.groupbyWhat$ as name,
			</isNotEmpty>
			sum(a.MONTH_CUSTOMER_SALE)/10000 MONTH_CUSTOMER_SALE,
			sum(a.MONTH_RETAIL_MONEY_TASK)/10000 MONTH_RETAIL_MONEY_TASK,
			sum(a.CUSTOMER_RWWCBFB)/count(*) CUSTOMER_RWWCBFB,			
			sum(a.MONTH_RETAIL_MONEY)/10000 MONTH_RETAIL_MONEY,
			sum(a.PRE_MONTH_RETAIL_MONEY)/10000 PRE_MONTH_RETAIL_MONEY,
			sum(a.PRE_YEAR_RETAIL_MONEY)/10000 PRE_YEAR_RETAIL_MONEY,
			sum(a.MONTH_RETAIL_MONEY_TBZF) MONTH_RETAIL_MONEY_TBZF,
			sum(a.MONTH_RETAIL_MONEY_BZ) MONTH_RETAIL_MONEY_BZ,
			
			sum(a.MONTH_SETTLE_MONEY)/10000 MONTH_SETTLE_MONEY,
			sum(a.PRE_YEAR_SETTLE_MONEY)/10000 PRE_YEAR_SETTLE_MONEY,
			sum(a.PRE_MONTH_SETTLE_MONEY)/10000 PRE_MONTH_SETTLE_MONEY,
			sum(a.MONTH_SETTLE_MONEY_TBZF) MONTH_SETTLE_MONEY_TBZF,
			sum(a.MONTH_SETTLE_MONEY_BZ) MONTH_SETTLE_MONEY_BZ	
					
			FROM STATISTICAL_DIMENSION_DATA_MONTH a 
			left join STATISTICAL_DIMENSION_KHFGS b on b.R3_CODE = a.R3_CODE
			left join STATISTICAL_DIMENSION_TIME_MONTH c on c.ID = a.MONTH_ID
			where 1=1
			<isNotEmpty prepend=" and " property="map.year">c.year = #map.year:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.month">c.month = #map.month:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend="  " property="map.groupbyWhat">
			group by $map.groupbyWhat$
			ORDER by $map.groupbyWhat$ ASC
			</isNotEmpty>
			
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- 根据区域分组，计算各种累计额 2014-12-08 -->
	<resultMap id="statisticalDimensionDataMonthResultGroupByAreaLj" class="statisticalDimensionDataMonth">
		<result column="CUSTOMER_SALE_LJ" property="map.customer_sale_lj" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TASK_LJ" property="map.month_retail_money_task_lj" jdbcType="DECIMAL" />
		<result column="RETAIL_MONEY_LJ" property="map.retail_money_lj" jdbcType="DECIMAL" />
		<result column="CUSTOMER_RWWCBFB_LJ" property="map.customer_rwwcbfb_lj" jdbcType="DECIMAL" />
		<result column="SETTLE_MONEY_LJ" property="map.settle_money_lj" jdbcType="DECIMAL" />
		<result column="NAME" property="map.name" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 根据区域分组，计算各种累计额 2014-12-08-->
	<select id="selectMoneysGroupByAreaLj" resultMap="statisticalDimensionDataMonthResultGroupByAreaLj" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select 
			<isNotEmpty prepend=" " property="map.groupbyWhat">
			$map.groupbyWhat$ as name,
			</isNotEmpty>
			<isEmpty prepend="" property="map.month">
				sum(a.MONTH_CUSTOMER_SALE)/10000 CUSTOMER_SALE_LJ,
				sum(a.MONTH_RETAIL_MONEY_TASK)/10000 MONTH_RETAIL_MONEY_TASK_LJ,
				sum(a.MONTH_RETAIL_MONEY)/10000 RETAIL_MONEY_LJ,
				sum(a.CUSTOMER_RWWCBFB)/count(*) CUSTOMER_RWWCBFB_LJ,
				sum(a.MONTH_SETTLE_MONEY)/10000 SETTLE_MONEY_LJ
			FROM STATISTICAL_DIMENSION_DATA_MONTH a 
			left join STATISTICAL_DIMENSION_KHFGS b on b.R3_CODE = a.R3_CODE
			left join STATISTICAL_DIMENSION_TIME_MONTH c on c.ID = a.MONTH_ID
			left join (SELECT c_index ,par_index, case c_comm  
								when  '家电连锁'  then  decode(c_name, '国美',c_name,'苏宁',c_name,'其它连锁')
								when  '超市渠道'  then '超市渠道' 
								when  '电子商务'  then '电子商务' 
								else  decode(c_comm, '城市客户',c_comm,'县乡客户',c_comm,'其它客户')  end  as c_comm  
								FROM KONKA_CATEGORY WHERE 1 = 1 AND par_index IN (SELECT par_index FROM KONKA_CATEGORY  WHERE c_type = 10 GROUP BY par_index)) d
			on a.CATEGORY_ID=d.c_index 
			</isEmpty>
			<isNotEmpty prepend="" property="map.month">
				sum(a.MONTH_CUSTOMER_SALE)/10000 CUSTOMER_SALE_LJ,
				sum(a.MONTH_RETAIL_MONEY_TASK)/10000 MONTH_RETAIL_MONEY_TASK_LJ,
				sum(a.MONTH_RETAIL_MONEY)/10000 RETAIL_MONEY_LJ,
				sum(a.CUSTOMER_RWWCBFB)/count(*) CUSTOMER_RWWCBFB_LJ,
				sum(a.MONTH_SETTLE_MONEY)/10000 SETTLE_MONEY_LJ
			FROM STATISTICAL_DIMENSION_DATA_MONTH a 
			left join STATISTICAL_DIMENSION_KHFGS b on b.R3_CODE = a.R3_CODE
			left join STATISTICAL_DIMENSION_TIME_MONTH c on c.ID = a.MONTH_ID
			left join (SELECT c_index ,par_index, case c_comm  
								when  '家电连锁'  then  decode(c_name, '国美',c_name,'苏宁',c_name,'其它连锁')
								when  '超市渠道'  then '超市渠道' 
								when  '电子商务'  then '电子商务' 
								else  decode(c_comm, '城市客户',c_comm,'县乡客户',c_comm,'其它客户')  end  as c_comm  
								FROM KONKA_CATEGORY WHERE 1 = 1 AND par_index IN (SELECT par_index FROM KONKA_CATEGORY  WHERE c_type = 10 GROUP BY par_index)) d
			on a.CATEGORY_ID=d.c_index 
			</isNotEmpty>
			where 1=1 
			<isNotEmpty prepend=" and " property="map.fgs_id">b.fgs_id = #map.fgs_id:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.year">c.year = #map.year:DECIMAL#</isNotEmpty> 
			<isNotEmpty prepend=" and " property="map.month">c.month = #map.month:DECIMAL#</isNotEmpty> 
			<isNotEmpty prepend="  " property="map.filter_by">
			$map.filter_by$
			</isNotEmpty>
			<isNotEmpty prepend="  " property="map.groupbyWhat">
			group by $map.groupbyWhat$
			ORDER by $map.groupbyWhat$ ASC
			</isNotEmpty>
			
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	 
			

	<!-- 根据区域分组，计算各种额 2014-12-08 -->
	<resultMap id="statisticalDimensionDataMonthResultGroupByAreaForQd" class="statisticalDimensionDataMonth">
		<result column="MONTH_CUSTOMER_SALE" property="month_customer_sale" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TASK" property="month_retail_money_task" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY" property="month_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_RETAIL_MONEY" property="pre_month_retail_money" jdbcType="DECIMAL" />
		<result column="PRE_YEAR_RETAIL_MONEY" property="pre_year_retail_money" jdbcType="DECIMAL" />
		<result column="CUSTOMER_RWWCBFB" property="customer_rwwcbfb" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_TBZF" property="month_retail_money_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_BZ" property="month_retail_money_bz" jdbcType="DECIMAL" /> 
		
		<result column="MONTH_RETAIL_MONEY_GM" property="map.month_retail_money_gm" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_SN" property="map.month_retail_money_sn" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_QTLS" property="map.month_retail_money_qtls" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_CSQD" property="map.month_retail_money_csqd" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_CSKH" property="map.month_retail_money_cskh" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_XXKH" property="map.month_retail_money_xxkh" jdbcType="DECIMAL" />
		<result column="MONTH_RETAIL_MONEY_QTKH" property="map.month_retail_money_qtkh" jdbcType="DECIMAL" />
		
		<result column="MONTH_SETTLE_MONEY" property="month_settle_money" jdbcType="DECIMAL" />
		<result column="PRE_MONTH_SETTLE_MONEY" property="pre_month_settle_money" jdbcType="DECIMAL" /> 
		<result column="PRE_YEAR_SETTLE_MONEY" property="pre_year_settle_money" jdbcType="DECIMAL" /> 
		<result column="MONTH_SETTLE_MONEY_TBZF" property="month_settle_money_tbzf" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_BZ" property="month_settle_money_bz" jdbcType="DECIMAL" />
		
		<result column="MONTH_SETTLE_MONEY_GM" property="map.month_settle_money_gm" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_SN" property="map.month_settle_money_sn" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_QTLS" property="map.month_settle_money_qtls" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_CSQD" property="map.month_settle_money_csqd" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_CSKH" property="map.month_settle_money_cskh" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_XXKH" property="map.month_settle_money_xxkh" jdbcType="DECIMAL" />
		<result column="MONTH_SETTLE_MONEY_QTKH" property="map.month_settle_money_qtkh" jdbcType="DECIMAL" />
		<result column="NAME" property="map.name" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 根据区域分组，计算各种额 2014-12-08-->
	<select id="selectMoneysGroupByAreaForQd" resultMap="statisticalDimensionDataMonthResultGroupByAreaForQd" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select 
			<isNotEmpty prepend=" " property="map.groupbyWhat">
			$map.groupbyWhat$ as name,
			</isNotEmpty> 
			sum(a.MONTH_CUSTOMER_SALE)/10000 MONTH_CUSTOMER_SALE,
			sum(a.MONTH_RETAIL_MONEY_TASK)/10000 MONTH_RETAIL_MONEY_TASK,
			sum(a.MONTH_RETAIL_MONEY)/10000 MONTH_RETAIL_MONEY,
			sum(a.PRE_MONTH_RETAIL_MONEY)/10000 PRE_MONTH_RETAIL_MONEY,
			sum(a.PRE_YEAR_RETAIL_MONEY)/10000 PRE_YEAR_RETAIL_MONEY,
			sum(a.CUSTOMER_RWWCBFB)/count(*) CUSTOMER_RWWCBFB,
			sum(a.MONTH_RETAIL_MONEY_TBZF) MONTH_RETAIL_MONEY_TBZF,
			sum(a.MONTH_RETAIL_MONEY_BZ) MONTH_RETAIL_MONEY_BZ,
			sum(decode(d.c_comm,'国美', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_GM,
			sum(decode(d.c_comm,'苏宁', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_SN,
			sum(decode(d.c_comm,'其它连锁', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_QTLS,
			sum(decode(d.c_comm,'超市渠道', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_CSQD,
			sum(decode(d.c_comm,'城市客户', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_CSKH,
			sum(decode(d.c_comm,'县乡客户', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_XXKH,
			sum(decode(d.c_comm,'电子商务', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_DZSW,
			sum(decode(d.c_comm,'其它客户', a.MONTH_RETAIL_MONEY ,0 ) )/10000 as MONTH_RETAIL_MONEY_QTKH, 
			sum(a.MONTH_SETTLE_MONEY)/10000 MONTH_SETTLE_MONEY,
			sum(a.PRE_MONTH_SETTLE_MONEY)/10000 PRE_MONTH_SETTLE_MONEY, 
			sum(a.PRE_YEAR_SETTLE_MONEY)/10000 PRE_YEAR_SETTLE_MONEY, 
			sum(a.MONTH_SETTLE_MONEY_TBZF) MONTH_SETTLE_MONEY_TBZF,
			sum(a.MONTH_SETTLE_MONEY_BZ) MONTH_SETTLE_MONEY_BZ,			
			sum(decode(d.c_comm,'国美', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_GM,
			sum(decode(d.c_comm,'苏宁', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_SN,
			sum(decode(d.c_comm,'其它连锁', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_QTLS,
			sum(decode(d.c_comm,'超市渠道', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_CSQD,
			sum(decode(d.c_comm,'城市客户', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_CSKH,
			sum(decode(d.c_comm,'县乡客户', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_XXKH,
			sum(decode(d.c_comm,'电子商务', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_DZSW,
			sum(decode(d.c_comm,'其它客户', a.MONTH_SETTLE_MONEY ,0 ) )/10000 as MONTH_SETTLE_MONEY_QTKH
			
			FROM STATISTICAL_DIMENSION_DATA_MONTH a 
			left join STATISTICAL_DIMENSION_KHFGS b on b.R3_CODE = a.R3_CODE
			left join STATISTICAL_DIMENSION_TIME_MONTH c on c.ID = a.MONTH_ID
			left join (SELECT c_index ,par_index, case c_comm  
			when  '家电连锁'  then  decode(c_name, '国美',c_name,'苏宁',c_name,'其它连锁')
			when  '超市渠道'  then '超市渠道' 
			when  '电子商务'  then '电子商务' 
			else  decode(c_comm, '城市客户',c_comm,'县乡客户',c_comm,'其它客户')  end  as c_comm,c_name 
			FROM KONKA_CATEGORY WHERE 1 = 1 AND par_index IN (SELECT par_index FROM KONKA_CATEGORY  WHERE c_type = 10 GROUP BY par_index)) d
			on a.CATEGORY_ID=d.c_index 
			
			where 1=1
			<isNotEmpty prepend=" and " property="map.fgs_id">b.fgs_id = #map.fgs_id:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.year">c.year = #map.year:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.month">c.month = #map.month:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend="  " property="map.filter_by">
			$map.filter_by$
			</isNotEmpty>
			<isNotEmpty prepend="  " property="map.groupbyWhat">
			group by $map.groupbyWhat$
			ORDER by $map.groupbyWhat$ ASC
			</isNotEmpty>
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectDimensionDataMonthFgsJieSuanTask" resultClass="string" parameterClass="statisticalDimensionDataMonth" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select sum(a.money) money from
		(SELECT r.y as year, to_number(nvl(substr(t.y ,5,6),0)) as month, t.m*r.ratio money,(select dept_id from konka_dept where dept_sn =r.dept_sn ) dept_id, (select dept_id from konka_dept where   dept_sn =r.fgs_sn ) fgs_id, (select dept_name from konka_dept where   dept_sn =r.fgs_sn ) fgs_name,(SELECT dept_name FROM  konka_dept WHERE dept_sn =r.dept_sn ) dept_name FROM konka_plan_money t  left join KONKA_PLAN_RATIO r on t.Y like r.y||'%') a
		<isNotEmpty prepend=" " property="map.area_name">left join (select dept_id as fgs_id, decode(p_area,10,'华东',20,'山东',30,'东北',40,'华北',50,'华南',60,'西南',70,'华中',80,'西北') area_name from konka_dept where dept_type=3  and par_id=0) b on b.FGS_ID = a.DEPT_ID</isNotEmpty>
		 where 1=1   
		<isNotEmpty prepend=" and " property="map.fgs_id">a.fgs_id = #map.fgs_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_id">a.dept_id = #map.dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.year">a.year = #map.year:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.month">a.month = #map.month:DECIMAL# </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_name">a.dept_name = #map.dept_name:VARCHAR#</isNotEmpty> 
		<isNotEmpty prepend=" and " property="map.fgs_name">a.fgs_name = #map.fgs_name:VARCHAR#</isNotEmpty> 
		<isNotEmpty prepend=" and " property="map.is_fgs">a.fgs_id = a.dept_id</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.area_name">b.area_name = #map.area_name:VARCHAR# and a.fgs_id = a.dept_id </isNotEmpty>
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- 	执行插入数据的SQL语句，并且更新相应的比例数据   月度统计 2014-11-12-->
	<update id="AutoRunUpdateStatementForDataMonthInsertAndUpdate"  parameterClass="StatisticalDimensionData">
	<![CDATA[
		insert into STATISTICAL_DIMENSION_DATA_MONTH_MIDDLE (ID,CUSTOMER_NAME,R3_CODE,CUSTOMER_CODE,BRANCH_NAME,SHOP_STATE,CATEGORY_ID,MONTH_ID,
		JOIN_DATE,STOP_DATE,P_INDEX,STORE_NUM,LOSS_STORE_NUM,ADD_STORE_NUM,AGENT_NUM,LOSS_AGENT_NUM,ADD_AGENT_NUM,IS_SDF,YWY_NUM,
		PROMOTER_NUM,MONTH_CUSTOMER_SALE,MONTH_TURNOVER,MONTH_SETTLE_NUM,MONTH_SETTLE_MONEY,MONTH_QDXT_ORDER_NUM,MONTH_QDXT_ORDER_MONEY,
		MONTH_RETAIL_NUM,MONTH_RETAIL_MONEY,IS_DEL,UPDATE_DATE,UPDATE_USER_ID,MONTH_RETAIL_MONEY_TASK
		)
		select
		SEQ_STATISTICAL_DIMENSION_DATA_MONTH_MIDDLE.NEXTVAL AS ID,
		      CUSTOMER_NAME,
		      R3_CODE,
		      CUSTOMER_CODE,
		      BRANCH_NAME,
		      SHOP_STATE,
		      CATEGORY_ID,
		      MONTH_ID,
		      JOIN_DATE,
		      STOP_DATE,
		      P_INDEX,
		      STORE_NUM,
		      LOSS_STORE_NUM,
		      ADD_STORE_NUM,
		      AGENT_NUM,
		      LOSS_AGENT_NUM,
		      ADD_AGENT_NUM,
		      IS_SDF,
		      YWY_NUM,
		      PROMOTER_NUM,
		      MONTH_CUSTOMER_SALE,
		      MONTH_TURNOVER,
		      (MONTH_SETTLE_NUM_DC + MONTH_SETTLE_NUM_JC) AS MONTH_SETTLE_NUM ,
		      (MONTH_SETTLE_MONEY_DC + MONTH_SETTLE_MONEY_JC) AS MONTH_SETTLE_MONEY,
		      (MONTH_QDXT_ORDER_NUM_JH - MONTH_QDXT_ORDER_NUM_TH) as MONTH_QDXT_ORDER_NUM,
		      (MONTH_QDXT_ORDER_MONEY_JH - MONTH_QDXT_ORDER_MONEY_TH) as MONTH_QDXT_ORDER_MONEY,
		      (sail_num + xs_num + fx_num - xsth_num - fxth_num) as MONTH_RETAIL_NUM,
		      (sail_money + xs_money + fx_money - xsth_money - fxth_money) as MONTH_RETAIL_MONEY,
		      is_del,
		      SYSDATE AS UPDATE_DATE,
		      0 AS UPDATE_USER_ID,
          MONTH_RETAIL_MONEY_TASK
		from (
		SELECT a.CUSTOMER_NAME as CUSTOMER_NAME,
       a.R3_CODE as R3_CODE,
       a.CUSTOMER_CODE,
       a.SHOP_STATUS as SHOP_STATE, 
       a.CUSTOMER_TYPE as CATEGORY_ID,
       a.MONTH_ID as MONTH_ID,
       a.YEAR,
       a.month,
       a.ADD_DATE as JOIN_DATE,
       a.stop_date as STOP_DATE,
       a.ENTP_P_INDEX as P_INDEX,
       a.IS_DEL,
       a.IS_SDF,
       a.BRANCH_NAME,
       nvl(pp.YWY_NUM,0) YWY_NUM,
       nvl(qq.PROMOTER_NUM,0) PROMOTER_NUM,
       nvl(rr.MONTH_CUSTOMER_SALE,0) MONTH_CUSTOMER_SALE,
       nvl(ss.MONTH_TURNOVER,0) as MONTH_TURNOVER,
       nvl(tt.MONTH_RETAIL_MONEY_TASK,0) as MONTH_RETAIL_MONEY_TASK,
       
       nvl(aa.num,0) as sail_num,
       nvl(aa.money,0) as sail_money,
       
       nvl(bb.num,0) as MONTH_SETTLE_NUM_DC,
       nvl(bb.money,0) as MONTH_SETTLE_MONEY_DC,
       
       nvl(cc.NUM,0) as MONTH_QDXT_ORDER_NUM_JH,
       nvl(cc.MONEY,0) as MONTH_QDXT_ORDER_MONEY_JH,
       nvl(dd.NUM,0) as MONTH_QDXT_ORDER_NUM_TH,
       nvl(dd.MONEY,0) as MONTH_QDXT_ORDER_MONEY_TH,
      
       nvl(ee.num,0) xs_num,
       nvl(ee.money,0) as xs_money,
       nvl(ff.num,0) xsth_num,
       nvl(ff.money,0) as xsth_money,
       nvl(gg.num,0) fx_num,
       nvl(gg.money,0) as fx_money,
       nvl(hh.num,0) fxth_num,
       nvl(hh.money,0) as fxth_money,
       
       nvl(ii.num,0) as MONTH_SETTLE_NUM_JC,
       nvl(ii.money,0) as MONTH_SETTLE_MONEY_JC,
       nvl(jj.STORE_NUM,0) STORE_NUM,
       nvl(kk.LOSS_STORE_NUM,0) LOSS_STORE_NUM,
       nvl(ll.ADD_STORE_NUM,0) ADD_STORE_NUM,
       nvl(mm.AGENT_NUM,0) AGENT_NUM,
       nvl(nn.LOSS_AGENT_NUM,0) LOSS_AGENT_NUM,
       nvl(oo.ADD_AGENT_NUM,0) ADD_AGENT_NUM
       
	   from (select krs.*,t.ID MONTH_ID,t.IS_CW,t.START_DATE,t.END_DATE,t.YEAR,t.MONTH FROM konka_r3_shop krs , STATISTICAL_DIMENSION_TIME_MONTH t where t.IS_DEL=0) a
	   left join (select customer_r3_code,sum(nvl(a.num,0)) num,sum(nvl(a.ALL_PRICE,0)) money,t.ID MONTH_ID
	        from konka_mobile_sail_data a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.REPORT_DATE>=t.START_DATE and a.REPORT_DATE<=t.END_DATE
	        
	        and t.is_del=0
	       	and a.num <> 0
			and a.all_price <> 0
	        group by customer_r3_code,t.ID) aa on aa.customer_r3_code = a.R3_CODE and aa.MONTH_ID = a.MONTH_ID
	
	   left join (select a.column_1,sum(nvl(a.COLUMN_12,0)) num,sum(nvl(a.COLUMN_14,0)) money,t.ID MONTH_ID
	        from CHANNEL_DATA_IMPORT a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.COLUMN_26>=t.START_DATE and a.COLUMN_26<=t.END_DATE and t.is_del=0
	        group by COLUMN_1,t.ID) bb on bb.column_1 = a.R3_CODE and bb.MONTH_ID = a.MONTH_ID
	   
	   left join (select a.CUST_ID,count(1) num,sum(nvl(a.MONEY,0)) money,t.ID MONTH_ID
	        from konka_order_info a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.IS_DEL=0 and a.AUDIT_STATE=3 and a.DOC_TYPE in ('ZFOR','ZFGC','ZFCR') and a.ORDER_DATE>=t.START_DATE and a.ORDER_DATE<=t.END_DATE and t.is_del=0
	        group by a.CUST_ID,t.ID) cc on cc.CUST_ID = a.ID AND cc.MONTH_ID = a.MONTH_ID
	   
	   left join (select a.CUST_ID,count(1) num,sum(nvl(a.MONEY,0)) money,t.ID MONTH_ID
	        from konka_order_info a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.IS_DEL=0 and a.AUDIT_STATE=3 and a.DOC_TYPE in ('ZFRE') and a.ORDER_DATE>=t.START_DATE and a.ORDER_DATE<=t.END_DATE and t.is_del=0
	        group by a.CUST_ID,t.ID) dd on dd.CUST_ID = a.ID AND dd.MONTH_ID = a.MONTH_ID
	   
	   left join (select e1.c_id,sum (nvl(e2.NUM,0)) num,sum(nvl(e2.MONEY,0)) money,t.ID MONTH_ID
	        from j_bill e1 left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 LEFT JOIN J_Bill_Details e2 ON e1.bill_id = e2.BILL_ID
	        where e1.bill_type=20 and e1.ADD_DATE >= t.START_DATE and e1.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by e1.C_ID,t.ID) ee on ee.C_ID = a.ID AND ee.MONTH_ID = a.MONTH_ID
	   
	   left join (select e1.c_id,sum (nvl(e2.NUM,0)) num,sum(nvl(e2.MONEY,0)) money,t.ID MONTH_ID
	        from j_bill e1 left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 LEFT JOIN J_Bill_Details e2 ON e1.bill_id = e2.BILL_ID
	        where e1.bill_type=21 and e1.ADD_DATE >= t.START_DATE and e1.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by e1.C_ID,t.ID) ff on ff.C_ID = a.ID AND ff.MONTH_ID = a.MONTH_ID
	        
	   left join (select e1.c_id,sum (nvl(e2.NUM,0)) num,sum(nvl(e2.MONEY,0)) money,t.ID MONTH_ID
	        from j_bill e1 left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 LEFT JOIN J_Bill_Details e2 ON e1.bill_id = e2.BILL_ID
	        where e1.bill_type=40 and e1.ADD_DATE >= t.START_DATE and e1.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by e1.C_ID,t.ID) gg on gg.C_ID = a.ID AND gg.MONTH_ID = a.MONTH_ID
	        
	   left join (select e1.c_id,sum (nvl(e2.NUM,0)) num,sum(nvl(e2.MONEY,0)) money,t.ID MONTH_ID
	        from j_bill e1 left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 LEFT JOIN J_Bill_Details e2 ON e1.bill_id = e2.BILL_ID
	        where e1.bill_type=42 and e1.ADD_DATE >= t.START_DATE and e1.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by e1.C_ID,t.ID) hh on hh.C_ID = a.ID AND hh.MONTH_ID = a.MONTH_ID
	        
	   left join (select  kz.KUNNR,sum (nvl(kz.LFIMG1,0)) AS num, SUM(NVL(kz.LFIMG,0) * NVL(kp.PRICE,0)) money, t.ID MONTH_ID
	        FROM KONKA_ZLES23_RESULT_INFO kz left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 left join KONKA_PRICE_MANAGER  kp 
	        on kz.MATNR=kp.GOODS_NAME and kz.LGORT=kp.STORE_SN and kz.BUDAT1 >=kp.START_DATE and kz.BUDAT1<=kp.END_DATE
	        WHERE kz.ERDAT >= t.START_DATE and kz.ERDAT<=t.END_DATE and t.is_del=0
	        group by kz.KUNNR,t.ID) ii on ii.KUNNR = a.R3_CODE AND ii.MONTH_ID = a.MONTH_ID
	
	   left join (select a.R3_CODE,count(1) as STORE_NUM,t.ID MONTH_ID
	        from  KONKA_R3_STORE a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.IS_DEL=0 and a.ADD_DATE<=t.END_DATE  and t.is_del=0
	        group by a.R3_CODE,t.ID) jj on jj.R3_CODE = a.R3_CODE and jj.MONTH_ID = a.MONTH_ID    
	   
	   left join (select a.R3_CODE,count(1) as LOSS_STORE_NUM,t.ID MONTH_ID
	        from  KONKA_R3_STORE a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.IS_DEL=1 and a.STOP_DATE>=t.START_DATE and a.STOP_DATE<=t.END_DATE and t.is_del=0
	        group by a.R3_CODE,t.ID) kk on kk.R3_CODE = a.R3_CODE and kk.MONTH_ID = a.MONTH_ID    
	        
	   left join (select a.R3_CODE,count(1) as ADD_STORE_NUM,t.ID MONTH_ID
	        from  KONKA_R3_STORE a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.ADD_DATE>=t.START_DATE and a.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by a.R3_CODE,t.ID) ll on ll.R3_CODE = a.R3_CODE and ll.MONTH_ID = a.MONTH_ID     
	   
	   left join (select a.C_ID,count(1) as AGENT_NUM,t.ID MONTH_ID
	        from  J_BASE_PARTNER a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.IS_DEL=0 and a.ADD_DATE<=t.END_DATE AND a.PARTNER_TYPE = 1  AND a.PARTNER_OBJ = 1 and t.is_del=0
	        group by a.C_ID,t.ID) mm on mm.C_ID = a.ID and mm.MONTH_ID = a.MONTH_ID    
	   
	   left join (select a.C_ID,count(1) as LOSS_AGENT_NUM,t.ID MONTH_ID
	        from  J_BASE_PARTNER a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.IS_DEL=1 AND a.PARTNER_TYPE = 1 AND a.PARTNER_OBJ = 1 and a.STOP_DATE>=t.START_DATE and a.STOP_DATE<=t.END_DATE and t.is_del=0
	        group by a.C_ID,t.ID) nn on nn.C_ID = a.ID and nn.MONTH_ID = a.MONTH_ID    
	        
	   left join (select a.C_ID,count(1) as ADD_AGENT_NUM,t.ID MONTH_ID
	        from  J_BASE_PARTNER a,STATISTICAL_DIMENSION_TIME_MONTH t
	        where a.PARTNER_TYPE = 1  AND a.PARTNER_OBJ = 1 and a.ADD_DATE>=t.START_DATE and a.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by a.C_ID,t.ID) oo on oo.C_ID = a.ID and oo.MONTH_ID = a.MONTH_ID 
	        
	   left join (select ba.KONKA_R3_ID,count(a.ID) as YWY_NUM,t.ID MONTH_ID
	        from  konka_pe_prod_user a left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 left join BRANCH_ASSIGN ba on ba.user_id = a.id
	        where t.is_del=0
	        group by ba.KONKA_R3_ID,t.ID) pp on pp.KONKA_R3_ID = a.ID and pp.MONTH_ID = a.MONTH_ID 
	   
	   left join (select c.R3_CODE,count(1) as PROMOTER_NUM,t.ID MONTH_ID
	        from  konka_pe_prod_user a left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 
	        left join KONKA_MOBILE_SP_RELATION b on b.SELLER_ID = a.id left join KONKA_R3_STORE c on c.STORE_ID = b.shop_id
	        where c.IS_DEL=0 and c.ADD_DATE<=t.END_DATE and t.is_del=0
	        group by c.R3_CODE,t.ID) qq on qq.R3_CODE = a.R3_CODE and qq.MONTH_ID = a.MONTH_ID 
	        
	   left join (select b.CUSTOMER_ID,sum(nvl(tc.TASK_ED,0)) as MONTH_CUSTOMER_SALE,t.ID MONTH_ID
	        from  TASK_CONTENT tc left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 
	        left join TASK_PARTICIPANT b on b.ID = tc.PARTICIPANT_ID
	        where tc.TASK_YEAR = t.YEAR and tc.TASK_MONTH = t.MONTH  and t.is_del=0
	        group by b.CUSTOMER_ID,t.ID) rr on rr.CUSTOMER_ID = a.ID and rr.MONTH_ID = a.MONTH_ID
	        
	   left join (select krb.R3_CODE,t.ID MONTH_ID,t.YEAR,t.MONTH,
	          case t.MONTH when 1 then sum(krb.COLUMN_1)
	          when 2 then sum(krb.COLUMN_2)
	          when 3 then sum(krb.COLUMN_3)
	          when 4 then sum(krb.COLUMN_4)
	          when 5 then sum(krb.COLUMN_5)
	          when 6 then sum(krb.COLUMN_6)
	          when 7 then sum(krb.COLUMN_7)
	          when 8 then sum(krb.COLUMN_8)
	          when 9 then sum(krb.COLUMN_9)
	          when 10 then sum(krb.COLUMN_10)
	          when 11 then sum(krb.COLUMN_11)
	          when 12 then sum(krb.COLUMN_12)
	          end as MONTH_TURNOVER
	        from KONKA_R3_BACKMONEY krb,STATISTICAL_DIMENSION_TIME_MONTH t 
	        where krb.YEAR = t.YEAR and t.IS_DEL=0
	        group by krb.R3_CODE,t.ID,t.YEAR,t.MONTH) ss on ss.R3_CODE = a.R3_CODE and ss.MONTH_ID = a.MONTH_ID
     left join (select tc.R3_CODE,sum(nvl(tc.TASK_MONEY,0)) as MONTH_RETAIL_MONEY_TASK,t.ID MONTH_ID
	        from  KONKA_R3_SHOP_TASK tc left join STATISTICAL_DIMENSION_TIME_MONTH t on 1=1 
	        where tc.YEAR = t.YEAR and tc.MONTH = t.MONTH  and t.is_del=0
	        group by tc.R3_CODE,t.ID) tt on tt.R3_CODE = a.R3_CODE and tt.MONTH_ID = a.MONTH_ID
	        
	 )
       ]]>
	</update>
	
	<!-- 	更新过度的数据到最终的表中的SQL语句  2014-11-13-->
	<update id="AutoRunUpdateStatementForDataMonthInsert"  parameterClass="StatisticalDimensionData">
	<![CDATA[
		insert into STATISTICAL_DIMENSION_DATA_MONTH (ID,CUSTOMER_NAME,R3_CODE,CUSTOMER_CODE,BRANCH_NAME,SHOP_STATE,CATEGORY_ID,MONTH_ID,
		JOIN_DATE,STOP_DATE,JOIN_DATE_TYPE,STOP_DATE_TYPE,P_INDEX,STORE_NUM,LOSS_STORE_NUM,ADD_STORE_NUM,AGENT_NUM,LOSS_AGENT_NUM,ADD_AGENT_NUM,IS_SDF,YWY_NUM,
		PROMOTER_NUM,MONTH_CUSTOMER_SALE,MONTH_TURNOVER,MONTH_SETTLE_NUM,MONTH_SETTLE_MONEY,MONTH_QDXT_ORDER_NUM,MONTH_QDXT_ORDER_MONEY,
		MONTH_RETAIL_NUM,MONTH_RETAIL_MONEY,MONTH_RETAIL_MONEY_TASK,IS_DEL,UPDATE_DATE,UPDATE_USER_ID,
	    CUSTOMER_RWWCBFB,MONTH_RETAIL_MONEY_BZ,MONTH_QDXT_ORDER_NUM_BZ,MONTH_SETTLE_MONEY_BZ,MONTH_TURNOVER_BZ,  
	    MONTH_QDXT_ORDER_NUM_ZF,MONTH_RETAIL_MONEY_TBZF,MONTH_SETTLE_MONEY_TBZF,MONTH_TURNOVER_TBZF,
	    PRE_YEAR_QDXT_ORDER_NUM,PRE_YEAR_QDXT_ORDER_MONEY,PRE_YEAR_RETAIL_MONEY,PRE_YEAR_RETAIL_NUM,PRE_YEAR_SETTLE_MONEY,
	    PRE_YEAR_SETTLE_NUM,PRE_YEAR_TURNOVER,PRE_YEAR_CUSTOMER_SALE,PRE_YEAR_RETAIL_MONEY_TASK
			)
	
	SELECT 
	    SEQ_STATISTICAL_DIMENSION_DATA_MONTH.NEXTVAL,
			a.CUSTOMER_NAME,
			      a.R3_CODE,
			      a.CUSTOMER_CODE,
			      a.BRANCH_NAME,
			      a.SHOP_STATE,
			      a.CATEGORY_ID,
			      a.MONTH_ID,
			      a.JOIN_DATE,
			      a.STOP_DATE,
	  (days(current date)- days(a.JOIN_DATE))/365 AS JOIN_DATE_TYPE,
	  (days(current date)- days(a.STOP_DATE))/365 AS STOP_DATE_TYPE,
		      a.P_INDEX,
		      a.STORE_NUM,
		      a.LOSS_STORE_NUM,
		      a.ADD_STORE_NUM,
		      a.AGENT_NUM,
		      a.LOSS_AGENT_NUM,
		      a.ADD_AGENT_NUM,
		      a.IS_SDF,
		      a.YWY_NUM,
		      a.PROMOTER_NUM,
		      a.MONTH_CUSTOMER_SALE,
		      a.MONTH_TURNOVER,
		      a.MONTH_SETTLE_NUM ,
		      a.MONTH_SETTLE_MONEY,
		      a.MONTH_QDXT_ORDER_NUM,
		      a.MONTH_QDXT_ORDER_MONEY,
		      a.MONTH_RETAIL_NUM,
		      a.MONTH_RETAIL_MONEY,
		      a.MONTH_RETAIL_MONEY_TASK,
		      a.is_del,
		      a.UPDATE_DATE,
		      a.UPDATE_USER_ID,
		
		decode (a.MONTH_CUSTOMER_SALE,
		               0,
		               NULL,
		               a.MONTH_SETTLE_MONEY / a.MONTH_CUSTOMER_SALE)
		          AS CUSTOMER_RWWCBFB,                                  
		       decode ( aa.MONTH_RETAIL_MONEY_FGS,
		               0,
		               NULL,
		                 a.MONTH_RETAIL_MONEY
		               * 100
		               / aa.MONTH_RETAIL_MONEY_FGS)
		          MONTH_RETAIL_MONEY_BZ,                            
		       decode ( aa.MONTH_QDXT_ORDER_NUM_FGS,
		               0,
		               NULL,
		                 a.MONTH_QDXT_ORDER_NUM
		               * 100
		               / aa.MONTH_QDXT_ORDER_NUM_FGS)
		          MONTH_QDXT_ORDER_NUM_BZ,                               
		       decode ( aa.MONTH_SETTLE_MONEY_FGS,
		               0,
		               NULL,
		                 a.MONTH_SETTLE_MONEY
		               * 100
		               / aa.MONTH_SETTLE_MONEY_FGS)
		          MONTH_SETTLE_MONEY_BZ,                            
		       decode ( aa.MONTH_TURNOVER_FGS,
		               0,
		               NULL,
		                 a.MONTH_TURNOVER
		               * 100
		               / aa.MONTH_TURNOVER_FGS)
		          MONTH_TURNOVER_BZ,                                 
		        decode(cc.MONTH_QDXT_ORDER_NUM,0,null,a.MONTH_QDXT_ORDER_NUM * 100 / cc.MONTH_QDXT_ORDER_NUM) MONTH_QDXT_ORDER_NUM_ZF,
		        decode(cc.MONTH_RETAIL_MONEY,0,null,a.MONTH_RETAIL_MONEY * 100 / cc.MONTH_RETAIL_MONEY) MONTH_RETAIL_MONEY_TBZF,
		        decode(cc.MONTH_SETTLE_MONEY,0,null,a.MONTH_SETTLE_MONEY * 100 / cc.MONTH_SETTLE_MONEY) MONTH_SETTLE_MONEY_TBZF,
		        decode(cc.MONTH_TURNOVER,0,null,a.MONTH_TURNOVER * 100 / cc.MONTH_TURNOVER) MONTH_TURNOVER_TBZF,
		        cc.MONTH_QDXT_ORDER_NUM as PRE_YEAR_QDXT_ORDER_NUM,
		        cc.MONTH_QDXT_ORDER_MONEY as PRE_YEAR_QDXT_ORDER_MONEY,
		        cc.MONTH_RETAIL_MONEY as PRE_YEAR_RETAIL_MONEY,
		        cc.MONTH_RETAIL_NUM as PRE_YEAR_RETAIL_NUM,
		        cc.MONTH_SETTLE_MONEY as PRE_YEAR_SETTLE_MONEY,
		        cc.MONTH_SETTLE_NUM as PRE_YEAR_SETTLE_NUM,
		        cc.MONTH_TURNOVER as PRE_YEAR_TURNOVER,
		        cc.MONTH_CUSTOMER_SALE as PRE_YEAR_CUSTOMER_SALE,
            cc.MONTH_RETAIL_MONEY_TASK AS PRE_YEAR_RETAIL_MONEY_TASK
		  FROM    STATISTICAL_DIMENSION_DATA_MONTH_MIDDLE a
               left join STATISTICAL_DIMENSION_TIME_MONTH tm on tm.ID = a.MONTH_ID
		       LEFT JOIN
		          STATISTICAL_DIMENSION_KHFGS fgs
		       ON fgs.R3_CODE = a.R3_CODE
		       left join(
		          select sum(b.MONTH_RETAIL_MONEY) MONTH_RETAIL_MONEY_FGS,
		                 SUM(b.MONTH_QDXT_ORDER_NUM) MONTH_QDXT_ORDER_NUM_FGS,
		                 SUM(b.MONTH_SETTLE_MONEY) MONTH_SETTLE_MONEY_FGS,
		                 SUM(b.MONTH_TURNOVER) MONTH_TURNOVER_FGS,
		              f.FGS_ID,b.MONTH_ID from STATISTICAL_DIMENSION_DATA_MONTH_MIDDLE b left join STATISTICAL_DIMENSION_KHFGS f on b.R3_CODE = f.R3_CODE group by b.MONTH_ID,f.FGS_ID
		       ) aa on aa.FGS_ID = fgs.FGS_ID and aa.MONTH_ID = a.MONTH_ID
		       left join (
		          select b.R3_CODE,b.MONTH_ID,
		          b.MONTH_QDXT_ORDER_NUM,
		          b.MONTH_QDXT_ORDER_MONEY,
		          b.MONTH_RETAIL_MONEY,
		          b.MONTH_RETAIL_NUM,
		          b.MONTH_SETTLE_MONEY,
		          b.MONTH_SETTLE_NUM,
		          b.MONTH_TURNOVER,
		          b.MONTH_CUSTOMER_SALE,
              b.MONTH_RETAIL_MONEY_TASK,
              dtm.YEAR,
              dtm.MONTH,
              dtm.IS_CW
		          from STATISTICAL_DIMENSION_DATA_MONTH_MIDDLE b
              left join STATISTICAL_DIMENSION_TIME_MONTH dtm on dtm.ID = b.MONTH_ID
		       ) cc on cc.R3_CODE = a.R3_CODE and cc.IS_CW = tm.IS_CW and date(cc.YEAR||'-'||cc.MONTH||'-01 00:00:00')= date(tm.YEAR||'-'||tm.MONTH||'-01 00:00:00')-1 year 
	
	]]>
	</update>

	<insert id="insertStatisticalDimensionDataMonth" parameterClass="statisticalDimensionDataMonth">
		<selectKey resultClass="long" keyProperty="id">select SEQ_STATISTICAL_DIMENSION_DATA_MONTH.nextval as id from dual </selectKey>
		<![CDATA[insert into STATISTICAL_DIMENSION_DATA_MONTH (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="r3_code">R3_CODE</isNotNull>	
			<isNotNull prepend="," property="customer_code">CUSTOMER_CODE</isNotNull>	
			<isNotNull prepend="," property="branch_name">BRANCH_NAME</isNotNull>	
			<isNotNull prepend="," property="shop_state">SHOP_STATE</isNotNull>	
			<isNotNull prepend="," property="category_id">CATEGORY_ID</isNotNull>	
			<isNotNull prepend="," property="month_id">MONTH_ID</isNotNull>	
			<isNotNull prepend="," property="join_date">JOIN_DATE</isNotNull>	
			<isNotNull prepend="," property="join_date_type">JOIN_DATE_TYPE</isNotNull>	
			<isNotNull prepend="," property="stop_date">STOP_DATE</isNotNull>	
			<isNotNull prepend="," property="stop_date_type">STOP_DATE_TYPE</isNotNull>	
			<isNotNull prepend="," property="p_index">P_INDEX</isNotNull>	
			<isNotNull prepend="," property="store_num">STORE_NUM</isNotNull>	
			<isNotNull prepend="," property="loss_store_num">LOSS_STORE_NUM</isNotNull>	
			<isNotNull prepend="," property="add_store_num">ADD_STORE_NUM</isNotNull>	
			<isNotNull prepend="," property="agent_num">AGENT_NUM</isNotNull>	
			<isNotNull prepend="," property="loss_agent_num">LOSS_AGENT_NUM</isNotNull>	
			<isNotNull prepend="," property="ywy_num">YWY_NUM</isNotNull>	
			<isNotNull prepend="," property="promoter_num">PROMOTER_NUM</isNotNull>	
			<isNotNull prepend="," property="month_customer_sale">MONTH_CUSTOMER_SALE</isNotNull>	
			<isNotNull prepend="," property="month_turnover">MONTH_TURNOVER</isNotNull>	
			<isNotNull prepend="," property="month_settle_money">MONTH_SETTLE_MONEY</isNotNull>	
			<isNotNull prepend="," property="month_settle_num">MONTH_SETTLE_NUM</isNotNull>	
			<isNotNull prepend="," property="month_qdxt_order_num">MONTH_QDXT_ORDER_NUM</isNotNull>	
			<isNotNull prepend="," property="month_qdxt_order_money">MONTH_QDXT_ORDER_MONEY</isNotNull>	
			<isNotNull prepend="," property="month_retail_money">MONTH_RETAIL_MONEY</isNotNull>	
			<isNotNull prepend="," property="month_retail_num">MONTH_RETAIL_NUM</isNotNull>	
			<isNotNull prepend="," property="update_date">UPDATE_DATE</isNotNull>	
			<isNotNull prepend="," property="update_user_id">UPDATE_USER_ID</isNotNull>	
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>	
			<isNotNull prepend="," property="customer_risk_type">CUSTOMER_RISK_TYPE</isNotNull>	
			<isNotNull prepend="," property="customer_rwwcbfb">CUSTOMER_RWWCBFB</isNotNull>	
			<isNotNull prepend="," property="add_agent_num">ADD_AGENT_NUM</isNotNull>	
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME</isNotNull>	
			<isNotNull prepend="," property="is_sdf">IS_SDF</isNotNull>	
			<isNotNull prepend="," property="month_retail_money_bz">MONTH_RETAIL_MONEY_BZ</isNotNull>	
			<isNotNull prepend="," property="month_retail_money_tbzf">MONTH_RETAIL_MONEY_TBZF</isNotNull>	
			<isNotNull prepend="," property="month_turnover_bz">MONTH_TURNOVER_BZ</isNotNull>	
			<isNotNull prepend="," property="month_turnover_tbzf">MONTH_TURNOVER_TBZF</isNotNull>	
			<isNotNull prepend="," property="month_settle_money_bz">MONTH_SETTLE_MONEY_BZ</isNotNull>	
			<isNotNull prepend="," property="month_settle_money_tbzf">MONTH_SETTLE_MONEY_TBZF</isNotNull>	
			<isNotNull prepend="," property="month_qdxt_order_num_bz">MONTH_QDXT_ORDER_NUM_BZ</isNotNull>	
			<isNotNull prepend="," property="month_qdxt_order_num_zf">MONTH_QDXT_ORDER_NUM_ZF</isNotNull>	
			<isNotNull prepend="," property="pre_month_turnover">PRE_MONTH_TURNOVER</isNotNull>	
			<isNotNull prepend="," property="pre_month_customer_sale">PRE_MONTH_CUSTOMER_SALE</isNotNull>	
			<isNotNull prepend="," property="pre_month_settle_money">PRE_MONTH_SETTLE_MONEY</isNotNull>	
			<isNotNull prepend="," property="pre_month_settle_num">PRE_MONTH_SETTLE_NUM</isNotNull>	
			<isNotNull prepend="," property="pre_month_qdxt_order_num">PRE_MONTH_QDXT_ORDER_NUM</isNotNull>	
			<isNotNull prepend="," property="pre_month_qdxt_order_money">PRE_MONTH_QDXT_ORDER_MONEY</isNotNull>	
			<isNotNull prepend="," property="pre_month_retail_money">PRE_MONTH_RETAIL_MONEY</isNotNull>	
			<isNotNull prepend="," property="pre_month_retail_num">PRE_MONTH_RETAIL_NUM</isNotNull>	
			<isNotNull prepend="," property="pre_year_turnover">PRE_YEAR_TURNOVER</isNotNull>	
			<isNotNull prepend="," property="pre_year_customer_sale">PRE_YEAR_CUSTOMER_SALE</isNotNull>	
			<isNotNull prepend="," property="pre_year_settle_money">PRE_YEAR_SETTLE_MONEY</isNotNull>	
			<isNotNull prepend="," property="pre_year_settle_num">PRE_YEAR_SETTLE_NUM</isNotNull>	
			<isNotNull prepend="," property="pre_year_qdxt_order_num">PRE_YEAR_QDXT_ORDER_NUM</isNotNull>	
			<isNotNull prepend="," property="pre_year_qdxt_order_money">PRE_YEAR_QDXT_ORDER_MONEY</isNotNull>	
			<isNotNull prepend="," property="pre_year_retail_money">PRE_YEAR_RETAIL_MONEY</isNotNull>	
			<isNotNull prepend="," property="pre_year_retail_num">PRE_YEAR_RETAIL_NUM</isNotNull>	
			<isNotNull prepend="," property="month_retail_money_task">MONTH_RETAIL_MONEY_TASK</isNotNull>	
			<isNotNull prepend="," property="pre_month_retail_money_task">PRE_MONTH_RETAIL_MONEY_TASK</isNotNull>	
			<isNotNull prepend="," property="pre_year_retail_money_task">PRE_YEAR_RETAIL_MONEY_TASK</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="r3_code">#r3_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_code">#customer_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="branch_name">#branch_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shop_state">#shop_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="category_id">#category_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_id">#month_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="join_date">#join_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="join_date_type">#join_date_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="stop_date">#stop_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="stop_date_type">#stop_date_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="p_index">#p_index:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="store_num">#store_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="loss_store_num">#loss_store_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_store_num">#add_store_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="agent_num">#agent_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="loss_agent_num">#loss_agent_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="ywy_num">#ywy_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="promoter_num">#promoter_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_customer_sale">#month_customer_sale:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_turnover">#month_turnover:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_money">#month_settle_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_num">#month_settle_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_num">#month_qdxt_order_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_money">#month_qdxt_order_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money">#month_retail_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_num">#month_retail_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="update_date">#update_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="update_user_id">#update_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="customer_risk_type">#customer_risk_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="customer_rwwcbfb">#customer_rwwcbfb:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_agent_num">#add_agent_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="customer_name">#customer_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_sdf">#is_sdf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money_bz">#month_retail_money_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money_tbzf">#month_retail_money_tbzf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_turnover_bz">#month_turnover_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_turnover_tbzf">#month_turnover_tbzf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_money_bz">#month_settle_money_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_money_tbzf">#month_settle_money_tbzf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_num_bz">#month_qdxt_order_num_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_num_zf">#month_qdxt_order_num_zf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_turnover">#pre_month_turnover:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_customer_sale">#pre_month_customer_sale:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_settle_money">#pre_month_settle_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_settle_num">#pre_month_settle_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_qdxt_order_num">#pre_month_qdxt_order_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_qdxt_order_money">#pre_month_qdxt_order_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_retail_money">#pre_month_retail_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_retail_num">#pre_month_retail_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_turnover">#pre_year_turnover:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_customer_sale">#pre_year_customer_sale:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_settle_money">#pre_year_settle_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_settle_num">#pre_year_settle_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_qdxt_order_num">#pre_year_qdxt_order_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_qdxt_order_money">#pre_year_qdxt_order_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_retail_money">#pre_year_retail_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_retail_num">#pre_year_retail_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money_task">#month_retail_money_task:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_retail_money_task">#pre_month_retail_money_task:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_retail_money_task">#pre_year_retail_money_task:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateStatisticalDimensionDataMonth" parameterClass="StatisticalDimensionDataMonth">
		update STATISTICAL_DIMENSION_DATA_MONTH
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="r3_code">R3_CODE = #r3_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_code">CUSTOMER_CODE = #customer_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="branch_name">BRANCH_NAME = #branch_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shop_state">SHOP_STATE = #shop_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="category_id">CATEGORY_ID = #category_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_id">MONTH_ID = #month_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="join_date">JOIN_DATE = #join_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="join_date_type">JOIN_DATE_TYPE = #join_date_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="stop_date">STOP_DATE = #stop_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="stop_date_type">STOP_DATE_TYPE = #stop_date_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="p_index">P_INDEX = #p_index:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="store_num">STORE_NUM = #store_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="loss_store_num">LOSS_STORE_NUM = #loss_store_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_store_num">ADD_STORE_NUM = #add_store_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="agent_num">AGENT_NUM = #agent_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="loss_agent_num">LOSS_AGENT_NUM = #loss_agent_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="ywy_num">YWY_NUM = #ywy_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="promoter_num">PROMOTER_NUM = #promoter_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_customer_sale">MONTH_CUSTOMER_SALE = #month_customer_sale:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_turnover">MONTH_TURNOVER = #month_turnover:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_money">MONTH_SETTLE_MONEY = #month_settle_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_num">MONTH_SETTLE_NUM = #month_settle_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_num">MONTH_QDXT_ORDER_NUM = #month_qdxt_order_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_money">MONTH_QDXT_ORDER_MONEY = #month_qdxt_order_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money">MONTH_RETAIL_MONEY = #month_retail_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_num">MONTH_RETAIL_NUM = #month_retail_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="update_date">UPDATE_DATE = #update_date:TIMESTAMP#</isNotNull>
			<isNotNull prepend="," property="update_user_id">UPDATE_USER_ID = #update_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL = #is_del:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="customer_risk_type">CUSTOMER_RISK_TYPE = #customer_risk_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="customer_rwwcbfb">CUSTOMER_RWWCBFB = #customer_rwwcbfb:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_agent_num">ADD_AGENT_NUM = #add_agent_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME = #customer_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_sdf">IS_SDF = #is_sdf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money_bz">MONTH_RETAIL_MONEY_BZ = #month_retail_money_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money_tbzf">MONTH_RETAIL_MONEY_TBZF = #month_retail_money_tbzf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_turnover_bz">MONTH_TURNOVER_BZ = #month_turnover_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_turnover_tbzf">MONTH_TURNOVER_TBZF = #month_turnover_tbzf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_money_bz">MONTH_SETTLE_MONEY_BZ = #month_settle_money_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_settle_money_tbzf">MONTH_SETTLE_MONEY_TBZF = #month_settle_money_tbzf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_num_bz">MONTH_QDXT_ORDER_NUM_BZ = #month_qdxt_order_num_bz:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_qdxt_order_num_zf">MONTH_QDXT_ORDER_NUM_ZF = #month_qdxt_order_num_zf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_turnover">PRE_MONTH_TURNOVER = #pre_month_turnover:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_customer_sale">PRE_MONTH_CUSTOMER_SALE = #pre_month_customer_sale:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_settle_money">PRE_MONTH_SETTLE_MONEY = #pre_month_settle_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_settle_num">PRE_MONTH_SETTLE_NUM = #pre_month_settle_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_qdxt_order_num">PRE_MONTH_QDXT_ORDER_NUM = #pre_month_qdxt_order_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_qdxt_order_money">PRE_MONTH_QDXT_ORDER_MONEY = #pre_month_qdxt_order_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_retail_money">PRE_MONTH_RETAIL_MONEY = #pre_month_retail_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_retail_num">PRE_MONTH_RETAIL_NUM = #pre_month_retail_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_turnover">PRE_YEAR_TURNOVER = #pre_year_turnover:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_customer_sale">PRE_YEAR_CUSTOMER_SALE = #pre_year_customer_sale:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_settle_money">PRE_YEAR_SETTLE_MONEY = #pre_year_settle_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_settle_num">PRE_YEAR_SETTLE_NUM = #pre_year_settle_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_qdxt_order_num">PRE_YEAR_QDXT_ORDER_NUM = #pre_year_qdxt_order_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_qdxt_order_money">PRE_YEAR_QDXT_ORDER_MONEY = #pre_year_qdxt_order_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_retail_money">PRE_YEAR_RETAIL_MONEY = #pre_year_retail_money:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_retail_num">PRE_YEAR_RETAIL_NUM = #pre_year_retail_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="month_retail_money_task">MONTH_RETAIL_MONEY_TASK = #month_retail_money_task:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_month_retail_money_task">PRE_MONTH_RETAIL_MONEY_TASK = #pre_month_retail_money_task:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pre_year_retail_money_task">PRE_YEAR_RETAIL_MONEY_TASK = #pre_year_retail_money_task:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteStatisticalDimensionDataMonth" parameterClass="StatisticalDimensionDataMonth">
		delete from STATISTICAL_DIMENSION_DATA_MONTH where 1=1
		<isNotEmpty prepend=" and " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" and " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

	<!-- 产品-区域分析，获取指定省份下各城市零售量 -->
	<select id="selectCitysDataList" resultClass="java.util.HashMap" parameterClass="StatisticalDimensionDataMonth" cacheModel="oneDayCache">
	    select b.CITY_NAME,b.city_id,sum(MONTH_RETAIL_NUM) as num,sum(MONTH_RETAIL_MONEY) MONEY,
	    	sum(PRE_YEAR_RETAIL_MONEY) PAR_MONEY,sum(PRE_YEAR_RETAIL_NUM) PAR_NUM
	    from STATISTICAL_DIMENSION_DATA_MONTH a
			left join STATISTICAL_DIMENSION_AREA b on a.p_index=b.p_index
 		where 1=1 and city_name is not null 
 		<isNotEmpty prepend=" and " property="map.month_id">a.month_id = #map.month_id#</isNotEmpty>
 		<isNotEmpty prepend=" and " property="map.province">b.PROVINCE_ID = #map.province#</isNotEmpty>
		group by b.CITY_NAME,b.city_id
	</select>
</sqlMap>