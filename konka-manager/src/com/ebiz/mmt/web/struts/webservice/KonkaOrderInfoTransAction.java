package com.ebiz.mmt.web.struts.webservice;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.validator.GenericValidator;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.ebiz.mmt.domain.KonkaOrderInfoTrans;
import com.ebiz.mmt.domain.KonkaOrderInfoTransDetails;
import com.ebiz.mmt.domain.PeProdUser;
import com.ebiz.mmt.domain.PeRoleUser;
import com.ebiz.mmt.web.Constants;
import com.ebiz.mmt.web.struts.BaseAction;
import com.ebiz.mmt.web.util.DESPlus;

/**
 * Code by AutoGenerated Builder AutoGenerated Builder Version 2.1
 * 
 * @author Xiao,GuoJian
 * @datetime 2014-05-23
 */
public class KonkaOrderInfoTransAction extends BaseAction {

	@Override
	public ActionForward unspecified(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		return this.mobileConfirm(mapping, form, request, response);
	}
	
	// 手机签收页面
	public ActionForward mobileConfirm(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		saveToken(request);
		setNaviStringToRequestScope(form, request);
		DynaBean dynaBean = (DynaBean) form;
		String mod_id = (String) dynaBean.get("mod_id");// mod_id
		String param = (String) dynaBean.get("param");// mod_id
		String[] paramArr = param.split(",");
		String trans_index_detail = paramArr[0];
		String userid = paramArr[1];// userid
		String password = paramArr[2];// password

		if (StringUtils.isBlank(trans_index_detail)) {
			super.renderJavaScript(response, "alert('数据丢失！');history.back();");
			return null;
		}
		//版本号,android_version,ios_version
		String android_version=(String) dynaBean.get("android_version");
		String ios_version=(String) dynaBean.get("ios_version");
		// 用户名或者密码不存在， 资讯信息类别为公开
		PeProdUser userInfo = checkUserid(userid,password,android_version,ios_version);
		if (null==userInfo) {
			super.renderJavaScript(response, "alert('用户登录失败！');history.back();");
			return null;
		}else{
				HttpSession session = request.getSession();
				session.setAttribute(Constants.USER_INFO, userInfo);
				session.setAttribute(Constants.ROLE_INFO, super.getRoleInfoByUserId(userInfo.getId()));

				PeRoleUser _peRoleUser = new PeRoleUser();
				_peRoleUser.setUser_id(userInfo.getId());
				List<PeRoleUser> peRoleUserList = super.getFacade().getPeRoleUserService().getPeRoleUserList(_peRoleUser);

				if (null != peRoleUserList && peRoleUserList.size() > 0) {
					String[] roleNames = new String[peRoleUserList.size()];

					int i = 0;
					for (PeRoleUser peRoleUser : peRoleUserList) {
						// if (null != peRoleUser && peRoleUser.getRole_id() == 400)
						// {// 专卖店店长不允许从该端口登录
						// super.renderJavaScript(response,
						// "window.onload=function(){alert('用户不存在，登录管理系统失败。您是专卖店店长，请至客户端登录端口。');location.href='customer/login.do'}");
						// return null;
						// }
						roleNames[i] = (String) peRoleUser.getMap().get("role_name");
					}
					session.setAttribute(Constants.ROLE_NAMES, StringUtils.join(roleNames, ","));
					session.setAttribute(Constants.ROLE_INFO_LIST, peRoleUserList);
				}
		}
		KonkaOrderInfoTransDetails entity = new KonkaOrderInfoTransDetails();
		
		if (StringUtils.isNotBlank(trans_index_detail)) {
			entity.setTrans_index_detail(trans_index_detail);
		}
		entity.setIs_del(0);
		List<KonkaOrderInfoTransDetails> entityList = super.getFacade()
				.getKonkaOrderInfoTransDetailsService()
				.getKonkaOrderInfoTransDetailsForConfirmList(entity);
		request.setAttribute("entityList", entityList);
		request.setAttribute("mod_id", mod_id);
		request.setAttribute("ensu_id", trans_index_detail);
		if (null != userInfo && null != userInfo.getId() && null != userInfo.getPass_word()) {
			request.setAttribute("user_id", userInfo.getId());
			request.setAttribute("password", userInfo.getPass_word());
		}
		request.setAttribute("trans_ensu_date", new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
		return new ActionForward("/../manager/admin/KonkaOrderInfoTrans/mobileConfirm.jsp");
	}

	/**
	 * @method:确认的保存
	 * @author Xiao,GuoJian
	 */
	public ActionForward confirmSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		resetToken(request);
		setNaviStringToRequestScope(form, request);
		DynaBean dynaBean = (DynaBean) form;
		String mod_id = (String) dynaBean.get("mod_id");// mod_id
		String trans_id = (String) dynaBean.get("trans_id");
		String trans_ensu_user = (String) dynaBean.get("trans_ensu_user");
		String trans_ensu_user_phone = (String) dynaBean
				.get("trans_ensu_user_phone");
		String trans_ensu_date = (String) dynaBean.get("trans_ensu_date");
		String[] ensu_ids = request.getParameterValues("ensu_id");// Details中ID
		String[] trans_unensu_nums = request
				.getParameterValues("trans_unensu_num");// 未签收数量
		String[] trans_ensu_nums = request.getParameterValues("trans_ensu_num");// 本次签收数量
		String[] trans_ensu_descs = request
				.getParameterValues("trans_ensu_desc");// 签收说明

		PeProdUser ui = (PeProdUser) super.getSessionAttribute(request,
				Constants.USER_INFO);
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		List<KonkaOrderInfoTransDetails> detailsList = new ArrayList<KonkaOrderInfoTransDetails>();
		if (null != ensu_ids) {
			for (int i = 0; i < ensu_ids.length; i++) {
				KonkaOrderInfoTransDetails details = new KonkaOrderInfoTransDetails();
				if (StringUtils.isNotBlank(ensu_ids[i])) {
					details.setEnsu_id(Long.parseLong(ensu_ids[i]));
				}
				if (StringUtils.isNotBlank(trans_ensu_nums[i])
						&& StringUtils.isNotEmpty(trans_unensu_nums[i])) {
					// 判断已签收数量和未签收数量的大小 来判定签收状态
					details.setTrans_ensu_num(Long
							.parseLong(trans_ensu_nums[i]));
					if (Long.parseLong(trans_unensu_nums[i]) == Long
							.parseLong(trans_ensu_nums[i])) {// 未签收和本次签收相等的情况下
						// 确认收货
						details.setTrans_ensu_status(2);
					} else if (Long.parseLong(trans_unensu_nums[i]) > Long
							.parseLong(trans_ensu_nums[i])) {// 未签收大于本次签收的情况下
						// 部分签收
						details.setTrans_ensu_status(1);
					} else if (Long.parseLong(trans_ensu_nums[i]) == 0) {// 本次签收0的情况下
						// 全部拒收
						details.setTrans_ensu_status(3);
					}
				}
				details.setTrans_ensu_desc(trans_ensu_descs[i]);
				details.setTrans_ensu_user_phone(trans_ensu_user_phone);
				details.setTrans_ensu_user(trans_ensu_user);
				details.setTrans_ensu_type(1);
				details.setTrans_ensu_date(format.parse(trans_ensu_date));
				detailsList.add(details);
			}
		}
		KonkaOrderInfoTrans konkaOrderInfoTrans = new KonkaOrderInfoTrans();
		// if(StringUtils.isNotBlank(trans_id)){
		// konkaOrderInfoTrans.setTrans_id(Long.parseLong(trans_id));
		// konkaOrderInfoTrans.set
		
		super.getFacade().getKonkaOrderInfoTransDetailsService()
				.modifyKonkaOrderInfoTransDetailsForEnsu(detailsList,
						konkaOrderInfoTrans);
		 //}
		
			super.renderJavaScript(response, "alert('确认收货成功！');window.close();");
			return null;
		//return new ActionForward("/../manager/admin/KonkaOrderInfoTrans.do?mod_id=" + mod_id,true);
	}
}