package com.ebiz.mmt.dao;

import java.util.HashMap;
import java.util.List;

import com.ebiz.mmt.domain.KonkaR3Shop;
import com.ebiz.ssi.dao.EntityDao;

/**
 * Code by AutoGenerated Builder AutoGenerated Builder Version 2.1
 * 
 * @author Hui,Gang
 * @datetime 2011-09-24 14:50:49
 */
public interface KonkaR3ShopDao extends EntityDao<KonkaR3Shop> {
	/**
	 * @author wangyang
	 */
	KonkaR3Shop selectKonkaR3ShopForResult(KonkaR3Shop t);

	/**
	 * @author Xing,XiuDong
	 */
	KonkaR3Shop selectKonkaR3ShopSimpleStat(KonkaR3Shop t);

	/**
	 * @author wangyang 根据业务数据上报时间取R3网点
	 */
	Long selectKonkaR3ShopCountByAddDate(KonkaR3Shop t);

	List<KonkaR3Shop> selectKonkaR3ShopPaginatedListByAddDate(KonkaR3Shop t);

	/**
	 * @author Jiang,JiaYong
	 * @version 2013-08-29
	 */
	List<KonkaR3Shop> selectKonkaR3ShopStockByR3CodeList(KonkaR3Shop t);

	/** Li,Ka :网点端进货选择康佳品牌时，通过shop_id查询其代理商（供应商） */
	KonkaR3Shop selectKonkaR3ShopByShopId(KonkaR3Shop t);

	/**
	 * @author Zhang,Xufeng 查询已分配和已分配的 R3 网点
	 */
	List<KonkaR3Shop> selectKonkaR3ShopMatchAndAssignList(KonkaR3Shop t);

	/**
	 * @author Zhang,Xufeng 查询已分配和已分配的 R3 网点
	 */
	List<KonkaR3Shop> selectKonkaR3ShopMatchAndAssignPaginatedList(KonkaR3Shop t);

	Long selectKonkaR3ShopMatchAndAssignCount(KonkaR3Shop t);

	/**
	 * @author wangyang 分组查询经办名称
	 */
	List<KonkaR3Shop> selectKonkaR3ShopGroupByHandleName(KonkaR3Shop t);

	List<KonkaR3Shop> selectKonkaR3ShopPaginatedListForStat(KonkaR3Shop t);

	Long selectKonkaR3ShopCountForHandle(KonkaR3Shop t);

	/**
	 * @author wangyang 分组查询分公司名称
	 */
	List<KonkaR3Shop> selectKonkaR3ShopGroupByBranchAreaName(KonkaR3Shop t);

	/**
	 * @author gaoyongxiang 分组查询网点名称
	 */
	List<KonkaR3Shop> selectKonkaR3ShopPaginatedListGroupByName(KonkaR3Shop t);

	/**
	 * @author gaoyongxiang 分组查询网点名称
	 */
	List<KonkaR3Shop> selectKonkaR3ShopStaticsGroupByFGS(KonkaR3Shop t);

	/**
	 * @author Ren,zhong
	 * @date 2013-06-09
	 */
	KonkaR3Shop selectKonkaR3ShopWithBranchAssign(KonkaR3Shop t);

	/**
	 * @author pan,gang
	 * @date 2013-7-5
	 * @Description: R3业务员列表显示
	 */

	List<KonkaR3Shop> selectKonkaR3ShopForYwyPaginatedList(KonkaR3Shop t);

	/**
	 * @author ZHOU
	 * @param t
	 * @return 返回经办列表
	 */
	List<KonkaR3Shop> selectJBDataBydeptName(KonkaR3Shop t);

	/**
	 * 
	 * @param code
	 * @return 客户所属部门
	 */
	Long selectDeptIdFromR3code(String code);

	/**
	 * @author Hu,Hao
	 * @version 2013-08-11
	 * @return 返回R3客户列表
	 */
	List<KonkaR3Shop> selectKonkaR3ShopListByUserName(KonkaR3Shop t);

	/**
	 * @author Liu,ZhiXiang
	 * @version 2013-09-23
	 * @return 根据p_index查询所能获取到的客户数量
	 */
	List<KonkaR3Shop> selectKonkaR3ShopCountByPIndex(KonkaR3Shop t);

	/**
	 * @author Liu,ZhiXiang
	 * @version 2013-09-23
	 * @return 根据p_index查询所能获取到的客户销售额
	 */
	List<KonkaR3Shop> selectKonkaR3ShopListByPIndex(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-09
	 * @return 根据用户ID查询客户R3_CODE
	 */
	List<KonkaR3Shop> selectKonkaR3ShopForUserIdList(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-14
	 */
	Long selectKonkaR3ShopForYwyCount(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-28
	 */
	Long selectKonkaR3ShopForOrderCount(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-10-28
	 */
	List<KonkaR3Shop> selectKonkaR3ShopForOrderList(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-12-04
	 */
	Long selectKonkaR3ShopForStocksCount(KonkaR3Shop t);

	/**
	 * @author Hu,Hao
	 * @version 2013-12-04
	 */
	List<KonkaR3Shop> selectKonkaR3ShopForStocksList(KonkaR3Shop t);

	/**
	 * 订货会 参会客户自动提出
	 * 
	 * @author Zhang,Chao
	 * @version 2014-01-25
	 */
	Long selectKonkaR3ShopResultListByViewCustomerCount(KonkaR3Shop t);

	/**
	 * 订货会 参会客户自动提出
	 * 
	 * @author Zhang,Chao
	 * @version 2014-01-25
	 */
	List<KonkaR3Shop> selectKonkaR3ShopResultListByViewCustomerList(KonkaR3Shop t);

	List<KonkaR3Shop> selectKonkaR3ShopListForYwyAndJb(KonkaR3Shop t);

	/**
	 * 合作伙伴关系R3编码
	 * 
	 * @author Xiao,GuoJian
	 * @version 2014-05-05
	 */
	Long selectKonkaR3ShopForR3CodeCount(KonkaR3Shop t);

	/**
	 * 合作伙伴关系R3编码
	 * 
	 * @author Xiao,GuoJian
	 * @version 2014-05-05
	 */
	List<KonkaR3Shop> selectKonkaR3ShopForR3CodePaginatedList(KonkaR3Shop t);

	List<KonkaR3Shop> selectKonkaR3ShopForCustVisit(KonkaR3Shop entity);

	// 客户 零售 结算 汇款统计count
	Long selectKonkaR3ShopMoneryPaginatedListCount(KonkaR3Shop t);

	// 客户 零售 结算 汇款统计list
	List<HashMap> selectKonkaR3ShopMoneryPaginatedList(KonkaR3Shop t);

	HashMap selectKonkaR3ShopOrJbasePartner(KonkaR3Shop t);

	/**
	 * R3合并客户查询统计
	 * 
	 * @author Liang,HouEn 2014-9-16
	 * @param t
	 * @return
	 */
	Long selectMergeR3ShopCount(KonkaR3Shop t);

	/**
	 * 统计结算客户数
	 * 
	 * @author Liang,HouEn 2014-9-17
	 * @param t
	 * @return
	 */
	Long selectMergeR3ShopcustCount(KonkaR3Shop t);

	/**
	 * R3合并客户查询
	 * 
	 * @author Liang,HouEn 2014-9-16
	 * @param t
	 * @return
	 */
	List<HashMap> selectMergeR3ShopList(KonkaR3Shop t);

	/**
	 * 根据R3编码查询客户信息
	 * 
	 * @author Liang,HouEn 2014-10-22
	 * @param t
	 * @return
	 */
	KonkaR3Shop selectKonkaR3ShopByR3Code(KonkaR3Shop t);

	/**
	 * 查询客户信息包括本月是否结转以及上月是否全部盘点
	 * 
	 * @param t
	 * @return
	 */
	Long selectKonkaR3ShopWithJzAndPdCount(KonkaR3Shop t);

	/**
	 * 查询客户信息包括本月是否结转以及上月是否全部盘点
	 * 
	 * @param t
	 * @return
	 */
	List<KonkaR3Shop> selectKonkaR3ShopWithJzAndPdList(KonkaR3Shop t);

	/**
	 * 查询客户信息包括本月是否结转以及上月是否全部盘点
	 * 
	 * @param t
	 * @return
	 */
	List<KonkaR3Shop> selectKonkaR3ShopWithJzAndPdPaginatedList(KonkaR3Shop t);
	
	/**
	 * 
	 * @author Liang,HouEn
	 * 2014-12-17
	 * @param t
	 * @return
	 */
	List<KonkaR3Shop> selectShopForAgent(KonkaR3Shop t);
	
	/**
	 * 自动变更客户状态
	 * @author Liang,HouEn
	 * 2014-12-18
	 */
	void changeShopStatus();
	
	/**
	 * 根据ID修改客户信息
	 * @param t
	 * @return
	 */
	int updateKonkaR3ShopByID(KonkaR3Shop t);
}