<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="KONKA_XX_PD">

	<typeAlias alias="konkaXxPd" type="com.ebiz.mmt.domain.KonkaXxPd" />

	

	<resultMap id="konkaXxPdResultForList" class="konkaXxPd">
		<result column="DEPT_PD_ID" property="dept_pd_id" jdbcType="DECIMAL" />
		<result column="DEPT_ID" property="dept_id" jdbcType="DECIMAL" />
		<result column="PD_CLS" property="pd_cls" jdbcType="DECIMAL" />
		<result column="PD_CLS_NAME" property="pd_cls_name" jdbcType="VARCHAR" />
		<result column="MD_NAME" property="md_name" jdbcType="VARCHAR" />
		<result column="PD_TYPE" property="pd_type" jdbcType="DECIMAL" />
		<result column="PRICE_REF" property="price_ref" jdbcType="DECIMAL" />
		<result column="PRICE_MAX" property="price_max" jdbcType="DECIMAL" />
		<result column="PRICE_MIN" property="price_min" jdbcType="DECIMAL" />
		<result column="FIX_FEE" property="fix_fee" jdbcType="DECIMAL" />
		<result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATETIME" />
		<result column="ADD_USER_ID" property="add_user_id" jdbcType="DECIMAL" />
		<result column="UP_TIME" property="up_time" jdbcType="DATETIME" />
		<result column="DOWN_TIME" property="down_time" jdbcType="DATETIME" />
		<result column="AUDIT_STATE" property="audit_state" jdbcType="DECIMAL" />
		<result column="AUDIT_USER_ID" property="audit_user_id" jdbcType="DECIMAL" />
		<result column="AUDIT_DATE" property="audit_date" jdbcType="DATETIME" />
		<result column="FAC_SN" property="fac_sn" jdbcType="VARCHAR" />
		<result column="STORE_SN" property="store_sn" jdbcType="VARCHAR" />
		<result column="FAC_DESC" property="fac_desc" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaXxPdResult" class="konkaXxPd" extends="konkaXxPdResultForList">
	</resultMap>
	
	<resultMap id="konkaXxPdResultForDemo" class="konkaXxPd" extends="konkaXxPdResultForList">
		<result column="id" property="map.id" jdbcType="DECIMAL" />
		<result column="ZMD_SN" property="map.zmd_sn" jdbcType="VARCHAR" />
		<result column="COUNTS" property="map.counts" jdbcType="DECIMAL" />
		<result column="TYPE_NAME" property="map.state" jdbcType="DECIMAL" />
		<result column="FROM_STORE_NAME" property="map.from_store_name" jdbcType="VARCHAR" />
		<result column="UP_DATE" property="map.up_date" jdbcType="DATETIME" />
		<result column="DOWN_DATE" property="map.down_date" jdbcType="DATETIME" />
		<result column="USER_NAME" property="map.user_name" jdbcType="DECIMAL" />
		<result column="DIST_DATE" property="map.dist_date" jdbcType="DATETIME" />
		
		<result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
		<result column="MEMO" property="map.memo" jdbcType="VARCHAR" />
		<result column="ZMD_ID" property="map.zmd_id" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="konkaXxPdWidthUserResult" class="konkaXxPd" extends="konkaXxPdResultForList">
	<result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-konkaXxPd">
		<isNotEmpty prepend=" and " property="dept_pd_id">DEPT_PD_ID = #dept_pd_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_id">DEPT_ID = #dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pd_cls">PD_CLS = #pd_cls:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pd_cls_name">PD_CLS_NAME = #pd_cls_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="md_name">MD_NAME = #md_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pd_type">PD_TYPE = #pd_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="price_ref">PRICE_REF = #price_ref:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="price_max">PRICE_MAX = #price_max:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="price_min">PRICE_MIN = #price_min:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="fix_fee">FIX_FEE = #fix_fee:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="remarks">REMARKS = #remarks:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">ADD_DATE = #add_date:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_user_id">ADD_USER_ID = #add_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="up_time">UP_TIME = #up_time:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="down_time">DOWN_TIME = #down_time:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_state">AUDIT_STATE = #audit_state:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_user_id">AUDIT_USER_ID = #audit_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_date">AUDIT_DATE = #audit_date:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="fac_sn">FAC_SN = #fac_sn:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="store_sn">STORE_SN = #store_sn:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="fac_desc">FAC_DESC = #fac_desc:VARCHAR#</isNotEmpty>
				
		<isNotEmpty prepend=" and " property="map.isNotDemo">PD_TYPE <![CDATA[<>]]> #map.isNotDemo#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.md_name_like">UPPER(md_name) like '%' || UPPER(#map.md_name_like:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_dept_pd_id">UPPER(dept_pd_id) <![CDATA[<>]]> #map.not_dept_pd_id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.isSales">((<![CDATA[UP_TIME <= to_date(#map.isSales#, 'yyyy-MM-dd') and DOWN_TIME >= to_date(#map.isSales#, 'yyyy-MM-dd hh24:mi:ss') ]]>) or (DOWN_TIME is null))</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.zmd_id">dept_pd_id in (
			SELECT t.DEPT_PD_ID
			  FROM (SELECT a.DEPT_PD_ID, (a.FAC_SN || '_' || a.STORE_SN) AS fac_store
			          FROM konka_xx_pd a
			         WHERE     a.AUDIT_STATE = 1
			               AND a.FAC_SN IS NOT NULL
			               AND a.STORE_SN IS NOT NULL) t
			 WHERE t.fac_store IN
			          (SELECT (b.FACTORY_ID || '_' || b.STORE_ID) AS fac_store
			             FROM KONKA_XX_ZMD_STORE b
			            WHERE b.zmd_id = #map.zmd_id#))
         </isNotEmpty>
         
         <isNotEmpty prepend=" and " property="map.pds">UPPER(#map.pds:VARCHAR#) like '%' ||  upper( ',' || md_name || ',') || '%'</isNotEmpty>
	
	</sql>

	<select id="selectKonkaXxPd" resultMap="konkaXxPdResult" parameterClass="konkaXxPd" >
		select * from KONKA_XX_PD where 1 = 1
		<include refid="sf-konkaXxPd" />
	</select>
	
	<select id="selectKonkaXxPdList" resultMap="konkaXxPdResultForList" parameterClass="konkaXxPd" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_XX_PD where 1 = 1
		<include refid="sf-konkaXxPd" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectKonkaXxPdToExcelList" resultMap="konkaXxPdResultForDemo" parameterClass="konkaXxPd" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		SELECT a.*, b.id, b.zmd_id, value(b.counts, 0) counts, b.from_store_name, b.up_date, b.down_date, b.dist_date, b.memo, c.zmd_sn, d.type_name, u.user_name, kd.dept_name
		  FROM KONKA_XX_ZMD_DEMOMAC b
		  left join KONKA_XX_PD a on a.md_name = b.md_name
		  left join KONKA_XX_BASE_TYPE d on b.state = d.type_id
		  left join KONKA_XX_ZMD c on b.zmd_id = c.zmd_id
		  left join KONKA_PE_PROD_USER u on b.DIST_USER_ID = u.id
		  left join KONKA_DEPT kd on a.dept_id = kd.dept_id
		 WHERE 1 = 1 
		 <isNotEmpty prepend=" AND " property="map.state">b.state = #map.state:DECIMAL#</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="map.state_is_not_null">b.state is not null</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="dept_id">a.dept_id = #dept_id:DECIMAL#</isNotEmpty>
		 <isNotEmpty property="map.md_name_like" prepend=" AND ">UPPER(a.md_name) like '%' || UPPER(#map.md_name_like:VARCHAR#) || '%'</isNotEmpty>
		  <isNotEmpty property="map.zmd_sn" prepend=" AND ">c.zmd_sn = #map.zmd_sn:VARCHAR#</isNotEmpty>
		 <isNotEmpty property="map.cls_id_like" prepend=" AND ">a.pd_cls in (select cls_id from KONKA_BASE_PD_CLAZZ where is_del = 0 start with CLS_ID = #map.cls_id_like:VARCHAR# connect by prior cls_id  = par_id)</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="map.zmd_ids">b.zmd_id in <iterate close=")" open="(" conjunction="," property="map.zmd_ids">#map.zmd_ids[]#</iterate></isNotEmpty>
		order by b.dist_date desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectKonkaXxPdCount" resultClass="long" parameterClass="konkaXxPd" >
		select count(*) from KONKA_XX_PD where 1 = 1
		<include refid="sf-konkaXxPd" />
	</select>
	
	<select id="selectKonkaXxPdCountForDemo" resultClass="long" parameterClass="konkaXxPd" >
		SELECT count(*)
		  FROM KONKA_XX_ZMD_DEMOMAC b
		  left join KONKA_XX_PD a on a.md_name = b.md_name
		  left join KONKA_XX_BASE_TYPE d on b.state = d.type_id
		  left join KONKA_XX_ZMD c on b.zmd_id = c.zmd_id
		  left join KONKA_PE_PROD_USER u on b.DIST_USER_ID = u.id
		  left join KONKA_DEPT kd on a.dept_id = kd.dept_id
		 WHERE 1 = 1
		 <isNotEmpty prepend=" AND " property="map.state">b.state = #map.state:DECIMAL#</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="map.state_is_not_null">b.state is not null</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="dept_id">a.dept_id = #dept_id:DECIMAL#</isNotEmpty>
		 <isNotEmpty property="map.md_name_like" prepend=" AND ">UPPER(a.md_name) like '%' || UPPER(#map.md_name_like:VARCHAR#) || '%'</isNotEmpty>
		 <isNotEmpty property="map.zmd_sn" prepend=" AND ">c.zmd_sn = #map.zmd_sn:VARCHAR#</isNotEmpty>
		 <isNotEmpty property="map.cls_id_like" prepend=" AND ">a.pd_cls in (select cls_id from KONKA_BASE_PD_CLAZZ where is_del = 0 start with CLS_ID = #map.cls_id_like:VARCHAR# connect by prior cls_id  = par_id)</isNotEmpty>
	</select>

	<select id="selectKonkaXxPdPaginatedList" resultMap="konkaXxPdResult" parameterClass="konkaXxPd" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from KONKA_XX_PD where 1 = 1
		<include refid="sf-konkaXxPd" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectKonkaXxPdPaginatedListForDemo" resultMap="konkaXxPdResultForDemo" parameterClass="konkaXxPd" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		SELECT a.*, b.id, b.zmd_id, value(b.counts, 0) counts, b.from_store_name, b.up_date, b.down_date, b.dist_date, b.memo, c.zmd_sn, d.type_name, u.user_name, kd.dept_name
		  FROM KONKA_XX_ZMD_DEMOMAC b
		  left join KONKA_XX_PD a on a.md_name = b.md_name
		  left join KONKA_XX_BASE_TYPE d on b.state = d.type_id
		  left join KONKA_XX_ZMD c on b.zmd_id = c.zmd_id
		  left join KONKA_PE_PROD_USER u on b.DIST_USER_ID = u.id
		  left join KONKA_DEPT kd on a.dept_id = kd.dept_id
		 WHERE 1 = 1
		 <isNotEmpty prepend=" AND " property="map.state">b.state = #map.state:DECIMAL#</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="map.state_is_not_null">b.state is not null</isNotEmpty>
		 <isNotEmpty prepend=" AND " property="dept_id">a.dept_id = #dept_id:DECIMAL#</isNotEmpty>
		 <isNotEmpty property="map.md_name_like" prepend=" AND ">UPPER(a.md_name) like '%' || UPPER(#map.md_name_like:VARCHAR#) || '%'</isNotEmpty>
		  <isNotEmpty property="map.zmd_sn" prepend=" AND ">c.zmd_sn = #map.zmd_sn:VARCHAR#</isNotEmpty>
		 <isNotEmpty property="map.cls_id_like" prepend=" AND ">a.pd_cls in (select cls_id from KONKA_BASE_PD_CLAZZ where is_del = 0 start with CLS_ID = #map.cls_id_like:VARCHAR# connect by prior cls_id  = par_id)</isNotEmpty>
		order by b.dist_date desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!--huhao  2012-01-09 -->
	<select id="selectKonkaXxPdWithUserCount" resultClass="long" parameterClass="konkaXxPd" >
		select count(*) from KONKA_XX_PD a join KONKA_DEPT b on a.dept_id = b.dept_id
		<isNotEmpty prepend=" and " property="map.par_cls_id">a.pd_cls in (select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.cls_id = t.par_id)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.price_min_ge"><![CDATA[
			a.price_min >= #map.price_min_ge:DECIMAL#
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.price_min_le"><![CDATA[
			a.price_min <= #map.price_min_le:DECIMAL#
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.md_name_like">UPPER(a.md_name) like '%' || UPPER(#map.md_name_like:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_id">a.DEPT_ID = #dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_state">a.AUDIT_STATE = #audit_state:DECIMAL#</isNotEmpty>
	</select>
	
	<!--huhao  2012-01-09 -->
	<select id="selectKonkaXxWithUsersPdPaginatedList" resultMap="konkaXxPdWidthUserResult" parameterClass="konkaXxPd" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*,b.DEPT_NAME from KONKA_XX_PD a join KONKA_DEPT b on a.dept_id = b.dept_id
		<isNotEmpty prepend=" and " property="map.par_cls_id">a.pd_cls in (select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.cls_id = t.par_id)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.price_min_ge"><![CDATA[
			a.price_min >= #map.price_min_ge:DECIMAL#
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.price_min_le"><![CDATA[
			a.price_min <= #map.price_min_le:DECIMAL#
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_id">a.DEPT_ID = #dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_state">a.AUDIT_STATE = #audit_state:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.md_name_like">UPPER(a.md_name) like '%' || UPPER(#map.md_name_like:VARCHAR#) || '%'</isNotEmpty>
		<!-- order by ID asc -->
		order by a.add_date desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<resultMap id="konkaXxPdForMdName" class="konkaXxPd">
		<result column="MD_NAMES" property="map.md_names" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectKonkaXxPdForMdNameList" resultMap="konkaXxPdForMdName" parameterClass="konkaXxPd" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select distinct(md_name) as md_names from KONKA_XX_PD where 1 = 1
		<include refid="sf-konkaXxPd" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<insert id="insertKonkaXxPd" parameterClass="konkaXxPd">
		<selectKey resultClass="long" keyProperty="dept_pd_id">select KONKA_S_BASE.nextval as dept_pd_id from dual </selectKey>
		<![CDATA[insert into KONKA_XX_PD (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="dept_pd_id">DEPT_PD_ID</isNotNull>	
			<isNotNull prepend="," property="dept_id">DEPT_ID</isNotNull>	
			<isNotNull prepend="," property="pd_cls">PD_CLS</isNotNull>	
			<isNotNull prepend="," property="pd_cls_name">PD_CLS_NAME</isNotNull>	
			<isNotNull prepend="," property="md_name">MD_NAME</isNotNull>	
			<isNotNull prepend="," property="pd_type">PD_TYPE</isNotNull>	
			<isNotNull prepend="," property="price_ref">PRICE_REF</isNotNull>	
			<isNotNull prepend="," property="price_max">PRICE_MAX</isNotNull>	
			<isNotNull prepend="," property="price_min">PRICE_MIN</isNotNull>	
			<isNotNull prepend="," property="fix_fee">FIX_FEE</isNotNull>	
			<isNotNull prepend="," property="remarks">REMARKS</isNotNull>	
			<isNotNull prepend="," property="add_date">ADD_DATE</isNotNull>	
			<isNotNull prepend="," property="add_user_id">ADD_USER_ID</isNotNull>
			<isNotNull prepend="," property="up_time">UP_TIME</isNotNull>
			<isNotNull prepend="," property="down_time">DOWN_TIME</isNotNull>
			<isNotNull prepend="," property="audit_state">AUDIT_STATE</isNotNull>
			<isNotNull prepend="," property="audit_user_id">AUDIT_USER_ID</isNotNull>
			<isNotNull prepend="," property="audit_date">AUDIT_DATE</isNotNull>
			<isNotNull prepend="," property="fac_sn">FAC_SN</isNotNull>
			<isNotNull prepend="," property="store_sn">STORE_SN</isNotNull>
			<isNotNull prepend="," property="fac_desc">FAC_DESC</isNotNull>
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="dept_pd_id">#dept_pd_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="dept_id">#dept_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pd_cls">#pd_cls:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pd_cls_name">#pd_cls_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="md_name">#md_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pd_type">#pd_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="price_ref">#price_ref:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="price_max">#price_max:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="price_min">#price_min:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="fix_fee">#fix_fee:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="remarks">#remarks:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">#add_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="add_user_id">#add_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="up_time">#up_time:DATETIME#</isNotNull>
			<isNotNull prepend="," property="down_time">#down_time:DATETIME#</isNotNull>
			<isNotNull prepend="," property="audit_state">#audit_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_user_id">#audit_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_date">#audit_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="fac_sn">#fac_sn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_sn">#store_sn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="fac_desc">#fac_desc:VARCHAR#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateKonkaXxPd" parameterClass="KonkaXxPd">
		update KONKA_XX_PD
		<dynamic prepend="set">
			<isNotNull prepend="," property="dept_pd_id">DEPT_PD_ID = #dept_pd_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="dept_id">DEPT_ID = #dept_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pd_cls">PD_CLS = #pd_cls:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pd_cls_name">PD_CLS_NAME = #pd_cls_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="md_name">MD_NAME = #md_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pd_type">PD_TYPE = #pd_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="price_ref">PRICE_REF = #price_ref:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="price_max">PRICE_MAX = #price_max:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="price_min">PRICE_MIN = #price_min:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="fix_fee">FIX_FEE = #fix_fee:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="remarks">REMARKS = #remarks:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="add_user_id">ADD_USER_ID = #add_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="up_time">UP_TIME = #up_time:DATETIME#</isNotNull>
			<isNotNull prepend="," property="down_time">DOWN_TIME = #down_time:DATETIME#</isNotNull>
			<isNotNull prepend="," property="audit_state">AUDIT_STATE = #audit_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_user_id">AUDIT_USER_ID = #audit_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_date">AUDIT_DATE = #audit_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="fac_sn">FAC_SN = #fac_sn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_sn">STORE_SN = #store_sn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="fac_desc">FAC_DESC = #fac_desc:VARCHAR#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="dept_pd_id">DEPT_PD_ID = #dept_pd_id#</isNotEmpty>
		<isEmpty prepend=" " property="dept_pd_id">
			<isNotEmpty prepend=" " property="map.pks">
				DEPT_PD_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteKonkaXxPd" parameterClass="KonkaXxPd">
		delete from KONKA_XX_PD where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>