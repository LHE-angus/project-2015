<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ENTP_SHOP">

	<typeAlias alias="entpShop" type="com.ebiz.mmt.domain.EntpShop" />

	

	<resultMap id="entpShopResultForList" class="entpShop">
		<result column="SHOP_ID" property="shop_id" jdbcType="DECIMAL" />
		<result column="ENTP_ID" property="entp_id" jdbcType="DECIMAL" />
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="SHOP_DESC" property="shop_desc" jdbcType="VARCHAR" />
		<result column="LOGO_PIC" property="logo_pic" jdbcType="VARCHAR" />
		<result column="SHOP_TYPE" property="shop_type" jdbcType="DECIMAL" />
		<result column="P_INDEX" property="p_index" jdbcType="DECIMAL" />
		<result column="C_INDEX" property="c_index" jdbcType="VARCHAR" />
		<result column="MAIN_PD" property="main_pd" jdbcType="VARCHAR" />
		<result column="IS_RURAL" property="is_rural" jdbcType="DECIMAL" />
		<result column="IS_AUTH" property="is_auth" jdbcType="DECIMAL" />
		<result column="ACCESS_NUM" property="access_num" jdbcType="DECIMAL" />
		<result column="HOST_ID" property="host_id" jdbcType="DECIMAL" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATETIME" />
		<result column="DEL_MAN2" property="del_man2" jdbcType="DECIMAL" />
		<result column="STATE" property="state" jdbcType="DECIMAL" />
		<result column="AUDITOR_ID" property="auditor_id" jdbcType="DECIMAL" />
		<result column="AUDIT_DATE" property="audit_date" jdbcType="DATETIME" />
		<result column="CREDIT" property="credit" jdbcType="DECIMAL" />
		<result column="ONLINE_QQ" property="online_qq" jdbcType="VARCHAR" />
		<result column="ALIPAY_EMAIL" property="alipay_email" jdbcType="VARCHAR" />
		<result column="IS_COMMEND" property="is_commend" jdbcType="DECIMAL" />
		<result column="ORDER_VALUE" property="order_value" jdbcType="DECIMAL" />
		<result column="ROYALTY_RATE" property="royalty_rate" jdbcType="DECIMAL" />
		<result column="STD_ENTP_MAIN_ID" property="std_entp_main_id" jdbcType="DECIMAL" />
		<result column="IS_SALL" property="is_sall" jdbcType="DECIMAL" />
		<result column="IS_MAINT" property="is_maint" jdbcType="DECIMAL" />
		<result column="IS_CALLB" property="is_callb" jdbcType="DECIMAL" />
		<result column="SHOP_LEVEL" property="shop_level" jdbcType="DECIMAL" />
		
		<result column="KEY_SEQUENCE" property="key_sequence" jdbcType="VARCHAR" />
		<result column="LOGIN_SETTINGS" property="login_settings" jdbcType="VARCHAR" />
		<result column="P_COUNT" property="p_count" jdbcType="DECIMAL" />
		<result column="O_COUNT" property="o_count" jdbcType="DECIMAL" />
		<result column="IS_OTN" property="is_otn" jdbcType="DECIMAL" />
		<result column="G_LNG" property="g_lng" jdbcType="DECIMAL" />
		<result column="G_LAT" property="g_lat" jdbcType="DECIMAL" />
		<result column="LINK_USER" property="link_user" jdbcType="VARCHAR" />
		<result column="LINK_PHONE" property="link_phone" jdbcType="VARCHAR" />
		<result column="STREET_ADDR" property="street_addr" jdbcType="VARCHAR" />
		<result column="POST_CODE" property="post_code" jdbcType="VARCHAR" />
		<result column="MAIN_PD2" property="main_pd2" jdbcType="VARCHAR" />
		
		<result column="G_LAT_T" property="g_lat_t" jdbcType="DECIMAL" />
		<result column="G_LNG_T" property="g_lng_t" jdbcType="DECIMAL" />
		<result column="G_IS_AUDIT" property="g_is_audit" jdbcType="DECIMAL" />
		<result column="G_RE_COUNT" property="g_re_count" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="entpShopResult" class="entpShop" extends="entpShopResultForList">
		<result column="CONTENT" property="content" jdbcType="CLOB" />
	</resultMap>

	<resultMap id="entpShopResultForGMapAuditStatics" class="entpShop">
		<result column="P_INDEX" property="map.p_index" jdbcType="DECIMAL" />
		<result column="P_NAME" property="map.p_name" jdbcType="VARCHAR" />
		<result column="G" property="map.g" jdbcType="DECIMAL" />
		<result column="G0" property="map.g0" jdbcType="DECIMAL" />
		<result column="G1" property="map.g1" jdbcType="DECIMAL" />
		<result column="G2" property="map.g2" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="entpShopResultForMMST" class="entpShop" extends="entpShopResultForList">
		<result column="user_name" property="user_name" jdbcType="VARCHAR" />
		<result column="pass_word" property="pass_word" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="entpShopResultForListForMmstAdmin" class="entpShop" extends="entpShopResultForList">
		<result column="P_INDEX" property="map.p_index" jdbcType="DECIMAL" />
		<result column="P_NAME" property="map.p_name" jdbcType="VARCHAR" />
		<result column="PAR_INDEX" property="map.par_index" jdbcType="DECIMAL" />
		<result column="PAR_NAME" property="map.par_name" jdbcType="VARCHAR" />
		<result column="PAR_PAR_INDEX" property="map.par_par_index" jdbcType="DECIMAL" />
		<result column="PAR_PAR_NAME" property="map.par_par_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="entpShopOrderByMarkResult" class="entpShop">
		<result column="SHOP_ID" property="shop_id" jdbcType="DECIMAL" />
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="P_INDEX" property="p_index" jdbcType="DECIMAL" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATETIME" />
		<result column="mark" property="map.mark" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="entpShopForMapResultForList" class="entpShop" extends="entpShopResultForList">
		<result column="sumMoney" property="map.sumMoney" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="entpShopForMapUpdatedResultForList" class="entpShop">
		<result column="SHOP_ID" property="shop_id" jdbcType="VARCHAR" />
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="g_lat_t" property="g_lat_t" jdbcType="VARCHAR" />
		<result column="g_lng_t" property="g_lng_t" jdbcType="VARCHAR" />
	</resultMap>
	
	
	<resultMap id="entpShopForXsCountTableResultForList" class="entpShop" extends="entpShopResultForList">
		<result column="r_name" property="map.r_name" jdbcType="VARCHAR" />
		<result column="p_name" property="map.p_name" jdbcType="VARCHAR" />
		<result column="countbybrand" property="map.countbybrand" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="entpShopForPdTypeList" class="entpShop">
		<result column="SHOP_ID" property="map.shop_id" jdbcType="DECIMAL" />
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="LOGO_PIC" property="logo_pic" jdbcType="VARCHAR" />
		<result column="LINK_PHONE" property="link_phone" jdbcType="VARCHAR" />
		<result column="STREET_ADDR" property="street_addr" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="entpShopSellPerMonth" class="entpShop">
		<result column="SHOP_ID" property="shop_id" jdbcType="DECIMAL" />
		<result column="TOTALSALES" property="map.totalSales" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="entpShopInfoScores" class="entpShop">
		<result column="SHOP_ID" property="shop_id" jdbcType="DECIMAL" />
		<result column="SCORES" property="map.scores" jdbcType="DECIMAL" />
	</resultMap>
	
	<sql id="sf-entpShop">
		<isNotEmpty prepend=" and " property="shop_id">a.SHOP_ID = #shop_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="entp_id">a.ENTP_ID = #entp_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_name">a.SHOP_NAME = #shop_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.pd_type">a.MAIN_PD like '%' || #map.pd_type:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_desc">a.SHOP_DESC = #shop_desc:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="logo_pic">a.LOGO_PIC = #logo_pic:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_type">a.SHOP_TYPE = #shop_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="p_index">a.P_INDEX = #p_index:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="c_index">a.C_INDEX = #c_index:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="main_pd">a.MAIN_PD = #main_pd:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_rural">a.IS_RURAL = #is_rural:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_auth">a.IS_AUTH = #is_auth:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="access_num">a.ACCESS_NUM = #access_num:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="host_id">a.HOST_ID = #host_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">a.ADD_DATE = #add_date:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="del_man2">a.DEL_MAN2 = #del_man2:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="state">a.STATE = #state:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="auditor_id">a.AUDITOR_ID = #auditor_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_date">a.AUDIT_DATE = #audit_date:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="credit">a.CREDIT = #credit:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="online_qq">a.ONLINE_QQ = #online_qq:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="alipay_email">a.ALIPAY_EMAIL = #alipay_email:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_commend">a.IS_COMMEND = #is_commend:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">a.ORDER_VALUE = #order_value:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="royalty_rate">a.ROYALTY_RATE = #royalty_rate:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="std_entp_main_id">a.STD_ENTP_MAIN_ID = #std_entp_main_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_sall">a.IS_SALL = #is_sall:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_maint">a.IS_MAINT = #is_maint:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_callb">a.IS_CALLB = #is_callb:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="shop_level">a.SHOP_LEVEL = #shop_level:DECIMAL#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="key_sequence">a.KEY_SEQUENCE = #key_sequence:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="login_settings">a.LOGIN_SETTINGS like '%' || #login_settings:VARCHAR# || '%' </isNotEmpty>
		<isNotEmpty prepend=" and " property="p_count">a.P_COUNT = #p_count:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="o_count">a.O_COUNT = #o_count:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_otn">a.IS_OTN = #is_otn:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="g_lng">a.G_LNG = #g_lng:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="g_lat">a.G_LAT = #g_lat:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_user">LINK_USER = #link_user:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_phone">LINK_PHONE = #link_phone:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="street_addr">STREET_ADDR = #street_addr:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="post_code">POST_CODE = #post_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="main_pd">a.MAIN_PD2 = #main_pd2:VARCHAR#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="g_lat_t">G_LAT_T = #g_lat_t:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="g_lng_t">G_LNG_T = #g_lng_t:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="g_is_audit">G_IS_AUDIT = #g_is_audit:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="g_re_count">G_RE_COUNT = #g_re_count:DECIMAL#</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.shop_name_like">a.SHOP_NAME like '%' || #map.shop_name_like# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.add_date_ge"><![CDATA[to_char(a.ADD_DATE,'yyyy-MM-dd') >= #map.add_date_ge#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.add_date_le"><![CDATA[to_char(a.ADD_DATE,'yyyy-MM-dd') <= #map.add_date_le#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.p_count_ge"><![CDATA[a.P_COUNT >= #map.p_count_ge#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.p_count_le"><![CDATA[a.P_COUNT <= #map.p_count_le#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.o_count_ge"><![CDATA[a.O_COUNT >= #map.o_count_ge#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.o_count_le"><![CDATA[a.O_COUNT <= #map.o_count_le#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.g_lng_ge"><![CDATA[a.G_LNG >= #map.g_lng_ge#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.g_lng_le"><![CDATA[a.G_LNG <= #map.g_lng_le#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.g_lat_ge"><![CDATA[a.G_LAT >= #map.g_lat_ge#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.g_lat_le"><![CDATA[a.G_LAT <= #map.g_lat_le#]]></isNotEmpty>

		<isNotEmpty prepend=" and " property="map.add_date_after"><![CDATA[
			to_char(a.ADD_DATE,'yyyy-MM-dd') >= #map.add_date_after#
		]]></isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			a.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		]]></isNotEmpty>
	    
		<isNotEmpty prepend=" and " property="map.shop_type_in">
			a.SHOP_TYPE in <iterate close=")" open="(" conjunction="," property="map.shop_type_in">#map.shop_type_in[]#</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.brand_name_like">
			a.SHOP_ID in (
				select esb.shop_id from ENTP_SHOP_BRAND esb where esb.brand_id in (
					select bbi.brand_id from BASE_BRAND_INFO bbi where bbi.brand_name like '%' || #map.brand_name_like# || '%' and bbi.is_del = 0
				) and esb.is_del = 0
			)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.pd_name_like">
			a.SHOP_ID in (
				select distinct shop_id from SHOP_PD sp where sp.MD_NAME like '%' || #map.pd_name_like# || '%' or sp.MD_SNAME like '%' || #map.pd_name_like# || '%'
			)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.search_txt_like">
			(
				a.SHOP_NAME like '%' || #map.search_txt_like# || '%'
				or a.STREET_ADDR like '%' || #map.search_txt_like# || '%'
				or a.LINK_USER like '%' || #map.search_txt_like# || '%'
			)
		</isNotEmpty>
        <isNotEmpty prepend=" and " property="map.shop_id_in">
          a.SHOP_ID in (select shop_id from entp_shop_brand where is_del = 0 and brand_id = #map.shop_id_in#)
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.array_shop_id_in">
        a.shop_id in 
        	<iterate close=")" open="(" conjunction="," property="map.array_shop_id_in">
        	 #map.array_shop_id_in[]#
         	</iterate>
        </isNotEmpty>  
           
        <isNotEmpty prepend=" and " property="map.audit_status">
        	a.G_IS_AUDIT in (0,3)
        </isNotEmpty>
        
        <isNotEmpty prepend=" and " property="map.p_index_in">a.p_index in (
			select t.p_index from base_province_list t start with t.p_index in 
			<iterate close=")" open="(" conjunction="," property="map.p_index_in">#map.p_index_in[]#</iterate>
			connect by prior t.p_index= t.par_index
		)
		</isNotEmpty>
		<isEmpty prepend="" property="map.sell_price_min">
			<isNotEmpty prepend=" and " property="map.sell_price_max">
				<![CDATA[a.SELL_PRICE_SUM <= #map.sell_price_max:DECIMAL#]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" and " property="map.sell_price_min">
			<isEmpty prepend="" property="map.sell_price_max">
				<![CDATA[a.SELL_PRICE_SUM >= #map.sell_price_min:DECIMAL#]]>
			</isEmpty>
			<isNotEmpty prepend=" and " property="map.sell_price_max">
				<![CDATA[a.SELL_PRICE_SUM <= #map.sell_price_max:DECIMAL#]]>
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.par_pd_type">
			<isNotEmpty prepend="" property="map.brand_id_in">
				a.shop_id in (select distinct(shop_id)
								from mdas_shop_brand_pdtype
								where par_pd_type = #map.par_pd_type:VARCHAR#
								and brand_id in
									<iterate close=")" open="(" conjunction="," property="map.brand_id_in">#map.brand_id_in[]#</iterate>
				)
			</isNotEmpty>
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.shop_id_eq_by_keySeq">
			a.SHOP_ID = (select ui.SHOP_ID from USER_INFO ui where ui.USER_NAME = (select seu.MMT_USER from STD_ENTP_USER seu where seu.KEY_SEQ = #map.shop_id_eq_by_keySeq#))
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.entp_id">
			a.SHOP_ID in (select shop_id from std_entp_main where entp_id = #map.entp_id#)
		</isNotEmpty>
	
		<!-- 直营网点抽取 * @author Cheng,Bing @version 2011-10-16 -->
        <isNotEmpty prepend=" and " property="map.shop_of_konka">
			a.SHOP_ID in (select MMT_SHOP_ID from KONKA_R3_MMT_MATCH)
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.mmtShopIds">
				a.SHOP_ID in
				<iterate close=")" open="(" conjunction="," property="map.mmtShopIds">#map.mmtShopIds[]#</iterate>
			</isNotEmpty>
	</sql>

	<select id="selectEntpShop" resultMap="entpShopResultForList" parameterClass="entpShop" >
		select a.* from entp_shop a where 1=1  
		<include refid="sf-entpShop" />
	</select>

	<select id="selectEntpShopList" resultMap="entpShopResultForList" parameterClass="entpShop" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select a.* from entp_shop a where 1 = 1
		<include refid="sf-entpShop" />
		order by 
		<isNotEmpty property="map.order_by_is_rec_desc">a.is_commend desc , </isNotEmpty>
		<isNotEmpty property="map.OrderByCommond">shop_type desc, is_auth desc, </isNotEmpty>
		<isNotEmpty property="map.netPointOrder">add_date desc, </isNotEmpty>
		order_value desc 
		<isNotEmpty property="map.orderBy" prepend=" , ">ADD_DATE desc, SHOP_ID desc</isNotEmpty>
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- 进销存使用情况 * @author Wu,Yang @version 2011-09-01 -->
	<resultMap id="entpShopResultListForJxc" class="entpShop">
		<result column="ENTP_ID" property="entp_id" jdbcType="DECIMAL" />
		<result column="SHOP_NAME" property="shop_name" jdbcType="VARCHAR" />
		<result column="LINK_USER" property="link_user" jdbcType="VARCHAR" />
		<result column="LINK_PHONE" property="link_phone" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="selectEntpShopForJxcList" resultMap="entpShopResultListForJxc" parameterClass="entpShop" >
		select (select max(entp_id) from std_entp_main where shop_id = t1.shop_id) ENTP_ID,
		       t1.SHOP_NAME,
		       t1.LINK_USER,
		       t1.LINK_PHONE
		  from entp_shop t1
		 where t1.P_INDEX in
		       (select P_INDEX from BASE_PROVINCE_LIST start with P_INDEX = #map.p_index# connect by prior p_index = par_index)
		   and t1.SHOP_ID in (select SHOP_ID from JXC_SELL_BILL_DETAILS where SELL_SRC = 0)
		order by t1.SHOP_NAME
	</select>

	<select id="selectEntpShopCount" resultClass="long" parameterClass="entpShop" >
		select count(a.SHOP_ID) from entp_shop a where 1 = 1
		<include refid="sf-entpShop" />
	</select>
	
	<!-- MMST网点基本信息页面使用 -->
	<select id="selectEntpShopCountForMMST" resultClass="long" parameterClass="entpShop" >
		select count(a.SHOP_ID) from entp_shop a ,user_info b 
		<isNotEmpty prepend=" ," property="map.wdqbz">
			(select distinct sem.shop_id from std_entp_main sem
				join (select wp.entp_id from wdqbz_pay wp where wp.states >= 1 and wp.pay_type in (12,123,124,1234)
				union
				select wr.entp_id from wdqbz_remit wr where wr.states >= 1 and wr.remit_type in (12,123,124,1234)
				union
				select wcp.entp_id from wdqbz_card_pay wcp where wcp.states >= 1 and wcp.pay_type in (12,123,124,1234)) temp on sem.entp_id = temp.entp_id and sem.own_sys = 1
			) c
		</isNotEmpty>
		where 1 = 1 and a.shop_id = b.shop_id
		<isNotEmpty prepend=" and " property="map.wdqbz">
			a.shop_id = c.shop_id
		</isNotEmpty>
		<include refid="sf-entpShop" />
		<isNotEmpty prepend=" and " property="map.user_state">b.user_state = #map.user_state:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_equals">a.shop_id in (select shop_id from user_info where user_name in(
			select mmt_user from std_entp_user where user_name = #map.user_name_equals:VARCHAR#))</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_user_name_equals">a.shop_id in (select shop_id from user_info where user_name =
			 #map.mmst_user_name_equals:VARCHAR#)</isNotEmpty>
	</select>
	
	<select id="selectEntpShopPaginatedListForMMST" resultMap="entpShopResultForMMST" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*,b.user_name,b.pass_word from entp_shop a ,user_info b
		<isNotEmpty prepend=" ," property="map.wdqbz">
			(select distinct sem.shop_id from std_entp_main sem
				join (select wp.entp_id from wdqbz_pay wp where wp.states >= 1 and wp.pay_type in (12,123,124,1234)
				union
				select wr.entp_id from wdqbz_remit wr where wr.states >= 1 and wr.remit_type in (12,123,124,1234)
				union
				select wcp.entp_id from wdqbz_card_pay wcp where wcp.states >= 1 and wcp.pay_type in (12,123,124,1234)) temp on sem.entp_id = temp.entp_id and sem.own_sys = 1
			) c
		</isNotEmpty>
		where 1 = 1 and a.shop_id = b.shop_id
		<isNotEmpty prepend=" and " property="map.wdqbz">
			a.shop_id = c.shop_id
		</isNotEmpty>
		<include refid="sf-entpShop" />
		<isNotEmpty prepend=" and " property="map.user_state">b.user_state = #map.user_state:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_equals">a.shop_id in (select shop_id from user_info where user_name in(
			select mmt_user from std_entp_user where user_name = #map.user_name_equals:VARCHAR#))</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_user_name_equals">a.shop_id in (select shop_id from user_info where user_name =
			 #map.mmst_user_name_equals:VARCHAR#)</isNotEmpty>
		order by a.ADD_DATE desc, a.SHOP_ID desc 
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- MMST管理员使用 -->
	<select id="selectEntpShopCountForMmstAdmin" resultClass="long" parameterClass="entpShop" >
		select count(*) from entp_shop a
		  left join (select bpl32.p_index as sp_index,
							bpl32.p_name,
							bpl32.par_index,
		                    bpl21.p_name as par_name,
		                    bpl21.par_index as par_par_index,
		                    bpl10.p_name as par_par_name
		               from (select bpl3.*
		                       from base_province_list bpl3
		                       left join base_province_list bpl2 on bpl3.par_index = bpl2.p_index) bpl32
		               left join (select bpl1.p_index, bpl1.p_name, bpl1.par_index
		                           from base_province_list bpl1) bpl21 on bpl32.par_index = bpl21.p_index
		               left join (select bpl0.p_index, bpl0.p_name
		                           from base_province_list bpl0) bpl10 on bpl21.par_index = bpl10.p_index) bpl on bpl.sp_index = a.p_index
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.mmst_province">
        	bpl.par_par_index = #map.mmst_province#
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_city">
        	bpl.par_index = #map.mmst_city#
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_country">
        	a.p_index = #map.mmst_country#
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_st_add_date">
        	<![CDATA[to_char(a.ADD_DATE,'yyyy-MM-dd') >= #map.mmst_st_add_date# ]]>
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_ed_add_date">
        	<![CDATA[to_char(a.ADD_DATE,'yyyy-MM-dd') <= #map.mmst_ed_add_date# ]]>
        </isNotEmpty>
		<include refid="sf-entpShop" />
	</select>
	<select id="selectEntpShopPaginatedListForMmstAdmin" resultMap="entpShopResultForListForMmstAdmin" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from entp_shop a 
			left join (select bpl32.p_index as sp_index,
							bpl32.p_name,
							bpl32.par_index,
		                    bpl21.p_name as par_name,
		                    bpl21.par_index as par_par_index,
		                    bpl10.p_name as par_par_name
		               from (select bpl3.*
		                       from base_province_list bpl3
		                       left join base_province_list bpl2 on bpl3.par_index = bpl2.p_index) bpl32
		               left join (select bpl1.p_index, bpl1.p_name, bpl1.par_index
		                           from base_province_list bpl1) bpl21 on bpl32.par_index = bpl21.p_index
		               left join (select bpl0.p_index, bpl0.p_name
		                           from base_province_list bpl0) bpl10 on bpl21.par_index = bpl10.p_index) bpl on bpl.sp_index = a.p_index
		
		
		
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.mmst_province">
        	bpl.par_par_index = #map.mmst_province#
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_city">
        	bpl.par_index = #map.mmst_city#
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_country">
        	a.p_index = #map.mmst_country#
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.mmst_st_add_date">
        	<![CDATA[to_char(a.ADD_DATE,'yyyy-MM-dd') >= #map.mmst_st_add_date# ]]>
        </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmst_ed_add_date">
        	<![CDATA[to_char(a.ADD_DATE,'yyyy-MM-dd') <= #map.mmst_ed_add_date# ]]>
        </isNotEmpty>
		<include refid="sf-entpShop" />
		order by ADD_DATE desc, SHOP_ID desc 
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	<!-- MMST管理员使用 -->
	
	<!-- 家电终端使用 -->
	<select id="selectEntpShopCountForJDZD" resultClass="long" parameterClass="entpShop" >
		select count(a.shop_id)
		  from entp_shop a
		 where 1=1
        <isNotEmpty prepend=" and " property="map.has_shop_id">
        	a.shop_id in
		       (select distinct shop_id
		          from shop_pd sp
		         where 1=1
		           	<isNotEmpty prepend=" and " property="map.has_pd_type">
		           	  sp.pd_type in
		               (select distinct pd_type
		                  from BASE_PD_TYPE bpt
		                 where 1= 1
		                 	<isNotEmpty prepend=" and " property="map.pd_type_4_jdzd">bpt.pd_type = #map.pd_type_4_jdzd:DECIMAL#</isNotEmpty>
		                 	<isNotEmpty prepend=" and " property="map.pd_type_sign_4_jdzd">bpt.pd_type_sign = #map.pd_type_sign_4_jdzd:VARCHAR#</isNotEmpty>
		                )
		           	</isNotEmpty>
			        <isNotEmpty prepend=" and " property="map.brand_id_4_jdzd">sp.brand_id = #map.brand_id_4_jdzd:DECIMAL#</isNotEmpty>
		         )
        </isNotEmpty>
 		<include refid="sf-entpShop" />
	</select>
	
	<!-- 家电终端使用 -->
	<select id="selectEntpShopPaginatedListForJDZD" resultMap="entpShopResultForList" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.* 
	     from entp_shop a
		 where 1=1
        <isNotEmpty prepend=" and " property="map.has_shop_id">
        	a.shop_id in
		       (select distinct shop_id
		          from shop_pd sp
		         where 1=1
		           	<isNotEmpty prepend=" and " property="map.has_pd_type">
		           	  sp.pd_type in
		               (select distinct pd_type
		                  from BASE_PD_TYPE bpt
		                 where 1= 1
		                 	<isNotEmpty prepend=" and " property="map.pd_type_4_jdzd">bpt.pd_type = #map.pd_type_4_jdzd:DECIMAL#</isNotEmpty>
		                 	<isNotEmpty prepend=" and " property="map.pd_type_sign_4_jdzd">bpt.pd_type_sign = #map.pd_type_sign_4_jdzd:VARCHAR#</isNotEmpty>
		                 	<isNotEmpty prepend=" and " property="map.pd_type_sign_4_jdzd_in">
		                 		bpt.pd_type_sign in 
		                 		<iterate close=")" open="(" conjunction="," property="map.pd_type_sign_4_jdzd_in">#map.pd_type_sign_4_jdzd_in[]#</iterate>
		                 	</isNotEmpty>
		                )
		           	</isNotEmpty>
			        <isNotEmpty prepend=" and " property="map.brand_id_4_jdzd">sp.brand_id = #map.brand_id_4_jdzd:DECIMAL#</isNotEmpty>
		         )
        </isNotEmpty>
		<include refid="sf-entpShop" />
		order by 
		<isNotEmpty property="map.OrderByDefault">a.is_commend desc  ,</isNotEmpty>
		<isNotEmpty property="map.OrderByShopName">a.shop_name desc  ,</isNotEmpty>
		<isNotEmpty property="map.OrderByAddDate">a.add_date desc  ,</isNotEmpty>
		<isNotEmpty property="map.is_commend_desc">a.is_commend desc ,</isNotEmpty>
		a.order_value desc 
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectEntpShopPaginatedList" resultMap="entpShopResultForList" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.* from entp_shop a where 1 = 1
		<include refid="sf-entpShop" />
		<isNotEmpty property="map.isaudit">order by G_RE_COUNT desc , G_IS_AUDIT asc,SHOP_ID desc</isNotEmpty>
		<isEmpty property="map.isaudit">order by 
		<isNotEmpty property="map.orderBy"> order_value desc , </isNotEmpty>
		ADD_DATE desc, SHOP_ID desc </isEmpty>
		
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectEntpShopListOrderByMark" resultMap="entpShopOrderByMarkResult" parameterClass="entpShop" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty><![CDATA[
		select *
	  		from (select t2.shop_id,
	               min(t2.shop_name) as shop_name,
	               min(t2.add_date) as add_date,
	               min(t2.p_index) as p_index,
	               sum(t1.mark) / count(t1.shop_id) as mark
	          from shop_msg t1, entp_shop t2
	         where t1.shop_id = t2.shop_id]]>
	         <isNotEmpty prepend=" and " property="shop_id">t2.SHOP_ID = #shop_id:DECIMAL#</isNotEmpty>
	         <isNotEmpty prepend=" and " property="map.shop_type">t2.shop_type = #map.shop_type:DECIMAL#</isNotEmpty>
	         group by t2.shop_id) t3
 		order by t3.mark desc , t3.add_date asc 
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectEntpShopCountForMap" resultClass="long" parameterClass="entpShop" >
		select count(a.SHOP_ID)
			from entp_shop a
			<isNotEmpty property="map.exists_date">
			 	left join (select shop_id, sum(pd_price) as sumMoney
							from mdas_buyer_info m
							where 1 = 1
									<isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
									<isNotEmpty prepend=" and " property="map.sell_date_ge">
										<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_le">
										<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
										<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
										<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_lt">
										<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
									group by m.shop_id
									having 1 = 1
									<isNotEmpty prepend=" and " property="map.sell_price_total_ge">
										<![CDATA[sum(pd_price) >= #map.sell_price_total_ge:DECIMAL#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_price_total_le">
										<![CDATA[sum(pd_price) <= #map.sell_price_total_le:DECIMAL#]]>
									</isNotEmpty>
									) st
			on a.shop_id = st.shop_id
		</isNotEmpty>
		where a.g_is_audit != 1
		<include refid="sf-entpShop" />
	</select>
	
	<!-- MMT分析系统 网点地图  coding by Du,HongGang 2010-09-03 -->
	<select id="selectEntpShopListForMap" resultMap="entpShopForMapResultForList" parameterClass="entpShop" >
		<isNotEmpty property="map.exists_date">
			select a.*, st.sumMoney
				from entp_shop a
			 	left join (select shop_id, sum(pd_price) as sumMoney
							from mdas_buyer_info m
							where 1 = 1
									<isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
									<isNotEmpty prepend=" and " property="map.sell_date_ge">
										<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_le">
										<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
										<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
										<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_lt">
										<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
									group by m.shop_id
									having 1 = 1
									<isNotEmpty prepend=" and " property="map.sell_price_total_ge">
										<![CDATA[sum(pd_price) >= #map.sell_price_total_ge:DECIMAL#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_price_total_le">
										<![CDATA[sum(pd_price) <= #map.sell_price_total_le:DECIMAL#]]>
									</isNotEmpty>
									) st
			on a.shop_id = st.shop_id
		</isNotEmpty>
		<isEmpty property="map.exists_date">
			select a.*,0 as sumMoney from entp_shop a
		</isEmpty>
		where a.g_is_audit != 1
		<include refid="sf-entpShop" />
	</select>

	<!-- MMT分析系统  网点地图分页coding by Du,HongGang 2010-09-03 -->
	<select id="selectEntpShopPaginatedListForMap" resultMap="entpShopForMapResultForList" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		<isNotEmpty property="map.exists_date">
			select a.*, st.sumMoney
				from entp_shop a
			 	left join (select shop_id, sum(pd_price) as sumMoney
							from mdas_buyer_info m
							where 1 = 1
									<isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
									<isNotEmpty prepend=" and " property="map.sell_date_ge">
										<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_le">
										<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
										<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
										<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_date_lt">
										<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
									group by m.shop_id
									having 1 = 1
									<isNotEmpty prepend=" and " property="map.sell_price_total_ge">
										<![CDATA[sum(pd_price) >= #map.sell_price_total_ge:DECIMAL#]]>
									</isNotEmpty>
							
									<isNotEmpty prepend=" and " property="map.sell_price_total_le">
										<![CDATA[sum(pd_price) <= #map.sell_price_total_le:DECIMAL#]]>
									</isNotEmpty>
									) st
			on a.shop_id = st.shop_id
		</isNotEmpty>
		<isEmpty property="map.exists_date">
			select a.*,0 as sumMoney from entp_shop a
		</isEmpty>
		where a.g_is_audit != 1
		<include refid="sf-entpShop" />
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

    <!-- MMT分析系统  网点地图分页(更新后的)coding by Du,HongGang 2010-09-20 -->
	<select id="selectEntpShopListForMapUpdated" resultMap="entpShopForMapUpdatedResultForList" parameterClass="entpShop" >
		SELECT a.shop_id, a.shop_name, a.g_lat_t, a.g_lng_t
		  from entp_shop a
		 WHERE a.g_is_audit != 1
		 <isNotEmpty prepend=" and " property="map.row_limit">
			<![CDATA[ rownum <= #map.row_limit# ]]>
		 </isNotEmpty>
		 <isNotEmpty prepend=" and " property="map.p_index_in">a.p_index in (
		 	select t.p_index from base_province_list t start with t.p_index in 
			<iterate close=")" open="(" conjunction="," property="map.p_index_in">#map.p_index_in[]#</iterate>
			connect by prior t.p_index= t.par_index
		 )
		 </isNotEmpty>
		 
		 <isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			a.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		]]></isNotEmpty>
		
		
		
		   AND a.shop_id in
		       (select distinct m.shop_id
		          from mdas_buyer_info m
		         WHERE 1 = 1
		            <isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
		            
		            <isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_ge">
						<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
					</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_le">
						<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
					</isNotEmpty>
						
					<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
						<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
					</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
						<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
					</isNotEmpty>
						
					<isNotEmpty prepend=" and " property="map.sell_date_lt">
						<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
				    </isNotEmpty>
		           )and a.shop_id in
		               (SELECT distinct md.shop_id
		                  from mdas_shop_brand_pdtype md
		                 WHERE 1 = 1
		                 <isNotEmpty prepend=" and " property="map.par_pd_type">par_pd_type = #map.par_pd_type:VARCHAR#</isNotEmpty>
		                 <isNotEmpty prepend=" and " property="map.brand_id_in">
							brand_id in
							<iterate close=")" open="(" conjunction="," property="map.brand_id_in">#map.brand_id_in[]#</iterate>
						</isNotEmpty>
						)
	</select>
	
	<select id="selectEntpShopPaginatedListForMapUpdated" resultMap="entpShopForMapUpdatedResultForList" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		SELECT a.shop_id, a.shop_name, a.g_lat_t, a.g_lng_t
		  from entp_shop a
		 WHERE a.g_is_audit != 1
		 <isNotEmpty prepend=" and " property="map.p_index_in">a.p_index in (
		 	select t.p_index from base_province_list t start with t.p_index in 
			<iterate close=")" open="(" conjunction="," property="map.p_index_in">#map.p_index_in[]#</iterate>
			connect by prior t.p_index= t.par_index
		 )
		 </isNotEmpty>
		 
		 <isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			a.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		]]></isNotEmpty>
		
		   AND a.shop_id in
		       (select distinct m.shop_id
		          from mdas_buyer_info m
		         WHERE 1 = 1
		            <isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
		            
		            <isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_ge">
						<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
					</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_le">
						<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
					</isNotEmpty>
						
					<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
						<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
					</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
						<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
					</isNotEmpty>
						
					<isNotEmpty prepend=" and " property="map.sell_date_lt">
						<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
				    </isNotEmpty>
		           )and a.shop_id in
		               (SELECT distinct md.shop_id
		                  from mdas_shop_brand_pdtype md
		                 WHERE 1 = 1
		                 <isNotEmpty prepend=" and " property="map.par_pd_type">par_pd_type = #map.par_pd_type:VARCHAR#</isNotEmpty>
		                 <isNotEmpty prepend=" and " property="map.brand_id_in">
							brand_id in
							<iterate close=")" open="(" conjunction="," property="map.brand_id_in">#map.brand_id_in[]#</iterate>
						</isNotEmpty>
						)
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectEntpShopCountForMapUpdated" resultClass="long" parameterClass="entpShop" >
		select count(a.SHOP_ID)
		  from entp_shop a
		 WHERE a.g_is_audit != 1
		 <isNotEmpty prepend=" and " property="map.p_index_in">a.p_index in (
		 	select t.p_index from base_province_list t start with t.p_index in 
			<iterate close=")" open="(" conjunction="," property="map.p_index_in">#map.p_index_in[]#</iterate>
			connect by prior t.p_index= t.par_index
		 )
		 </isNotEmpty>
		 
		 <isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			a.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		]]></isNotEmpty>
		
		   AND a.shop_id in
		       (select distinct m.shop_id
		          from mdas_buyer_info m
		         WHERE 1 = 1
		            <isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
		            
		            <isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_ge">
						<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
					</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_le">
						<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
					</isNotEmpty>
						
					<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
						<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
					</isNotEmpty>
					
					<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
						<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
					</isNotEmpty>
						
					<isNotEmpty prepend=" and " property="map.sell_date_lt">
						<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
				    </isNotEmpty>
		           )and a.shop_id in
		               (SELECT distinct md.shop_id
		                  from mdas_shop_brand_pdtype md
		                 WHERE 1 = 1
		                 <isNotEmpty prepend=" and " property="map.par_pd_type">par_pd_type = #map.par_pd_type:VARCHAR#</isNotEmpty>
		                 <isNotEmpty prepend=" and " property="map.brand_id_in">
							brand_id in
							<iterate close=")" open="(" conjunction="," property="map.brand_id_in">#map.brand_id_in[]#</iterate>
						</isNotEmpty>
						)
	</select>
	
	<!-- MMT分析系统 网点销售量  Xing,XiuDong@2010-09-07 -->
	<select id="selectEntpShopGMapAuditStaticsList" resultMap="entpShopResultForGMapAuditStatics" parameterClass="entpShop" >
		<![CDATA[
		select province.p_index as p_index,
		       province.p_name as p_name,
		       value(e.g, 0) as g,
		       value(e0.g0, 0) as g0,
		       value(e1.g1, 0) as g1,
		       value(e2.g2, 0) as g2
		  from (select bpl.p_index / 10000 as p_index, p_name
		          from base_province_list bpl
		         where bpl.p_level = 1
		         order by p_index) province
		  left join (select substr(t.p_index, 0, 2) as pcode, count(t.shop_id) as g
		               from entp_shop t
		              group by substr(t.p_index, 0, 2)) e on province.p_index = e.pcode
		  left join (select substr(t.p_index, 0, 2) as pcode, count(t.shop_id) as g0
		               from entp_shop t
		              where t.g_is_audit = 0
		              group by substr(t.p_index, 0, 2)) e0 on province.p_index = e0.pcode
		  left join (select substr(t.p_index, 0, 2) as pcode, count(t.shop_id) as g1
		               from entp_shop t
		              where t.g_is_audit = 1
		              group by substr(t.p_index, 0, 2)) e1 on province.p_index = e1.pcode
		  left join (select substr(t.p_index, 0, 2) as pcode, count(t.shop_id) as g2
		               from entp_shop t
		              where t.g_is_audit = 2
		              group by substr(t.p_index, 0, 2)) e2 on province.p_index = e2.pcode
		]]>
	</select>
	
	<!-- MMT后台->买卖商通客户端超级管理员->数据统计->网点登记数据统计 coding by Zheng,Kun 2011-06-15 -->
	<select id="selectStdEntpMainListForNet" resultMap="entpShopResultForGMapAuditStatics" parameterClass="entpShop" >
			select t3.p_index        as p_index,
			       t3.p_name         as p_name,
			       value(t1.jdxx_count, 0)      as g,
			       value(t2.jdxx_reg_count, 0)   as g0,
			       value(t1.yjhx_count,0)        as g1,
			       value(t2.yjhx_reg_count, 0)   as g2
	 from (<!--select substr(t.p_index, 0, 2) || '0000' p_index,
	              sum(decode(t.own_sys, 1, 1, 0)) jdxx_count,
	              sum(decode(t.own_sys, 2, 1, 0)) yjhx_count
	         from std_entp_main t
	        group by substr(t.p_index, 0, 2)
	        
	        取家电下乡、以旧换新各省网点数 Ren Zhong 2011-7-27  BEGIN-->
		       select substr(p_index, 0, 2) || '0000' p_index, 
	                  sum(decode(own_sys, 1, 1, 0)) jdxx_count,
	                  sum(decode(own_sys, 2, 1, 0)) yjhx_count
	            from (select min(sem.id) as id,
	                         sem.entp_name,
	                         sem.p_index as p_index,
	                         min(seu.add_date) as add_date,
	                         min(seu.own_sys) as own_sys,
	                         min(seu.user_type) as user_type
	                    from std_entp_main sem,
	                         (select t.entp_id,
	                                 min(t.add_date) as add_date,
	                                 min(t.own_sys) as own_sys,
	                                 min(t.user_type) as user_type
	                            from std_entp_user t
	                           where 1 = 1
	                             and t.mmt_user is not null
	                             <!-- and t.own_sys = 1 -->
	                           group by t.entp_id) seu
	                  where seu.entp_id = sem.entp_id
	                  group by sem.entp_name, sem.p_index)
	         	group by substr(p_index, 0, 2) || '0000'
	<!--取家电下乡、以旧换新各省网点数 Ren Zhong 2011-7-27  END-->
	        ) t1
	 left join (select substr(t.p_index, 0, 2) || '0000' p_index,
	                   sum(decode(t.bid_type, 1, 1, 0)) jdxx_reg_count,
	                   sum(decode(t.bid_type, 2, 1, 4, 1, 0)) yjhx_reg_count
	              from entp_user_reg t
	             group by substr(t.p_index, 0, 2)) t2 on t2.p_index = t1.p_index
	 left join base_province_list t3 on t3.p_index = t1.p_index
	order by t3.p_index
	</select>

	<!-- MMT分析系统 网点销售量  coding by Du,HongGang 2010-09-07 -->
	<select id="selectEntpShopListForXsCountTable" resultMap="entpShopForXsCountTableResultForList" parameterClass="entpShop" >
		select r_name, p_name, to_char(listagg(p5, ',')) as countbybrand
		  from (select 'brand_name:' || m.brand_name || '/' || 'countnum:' ||
		               count(*) as p5,
		               b.p_name,
		               mr.r_name
		          from mdas_buyer_info m
		         right join (select shop_id, sum(pd_price)
		                      from mdas_buyer_info
		                     group by shop_id
		                    having 1 = 1
								<isNotEmpty prepend=" and " property="map.sell_price_total_ge">
									<![CDATA[sum(pd_price) >= #map.sell_price_total_ge:DECIMAL#]]>
								</isNotEmpty>
						
								<isNotEmpty prepend=" and " property="map.sell_price_total_le">
									<![CDATA[sum(pd_price) <= #map.sell_price_total_le:DECIMAL#]]>
								</isNotEmpty>
							) m1 on m.shop_id = m1.shop_id
		          left join entp_shop a on m.shop_id = a.shop_id
		          left join base_province_list b on substr(e.p_index, 0, 2) ||
		                                            '0000' = b.p_index
		          left join mdas_regions_province r on r.p_index = b.p_index
		          left join mdas_regions mr on r.regions_id = mr.id
		         where 1 = 1
								<isNotEmpty prepend=" and " property="map.own_sys">m.own_sys = #map.own_sys:VARCHAR#</isNotEmpty>
								<isNotEmpty prepend=" and " property="map.sell_date_ge">
									<![CDATA[m.buyer_buy_date >= #map.sell_date_ge:DATE#]]>
								</isNotEmpty>
						
								<isNotEmpty prepend=" and " property="map.sell_date_le">
									<![CDATA[m.buyer_buy_date <= #map.sell_date_le:DATE#]]>
								</isNotEmpty>
						
								<isNotEmpty prepend=" and " property="map.sell_date_selected_ge">
									<![CDATA[m.buyer_buy_date >= to_date(#map.sell_date_selected_ge#,'yyyy-mm-dd')]]>
								</isNotEmpty>
						
								<isNotEmpty prepend=" and " property="map.sell_date_selected_le">
									<![CDATA[m.buyer_buy_date <= to_date(#map.sell_date_selected_le#,'yyyy-mm-dd')]]>
								</isNotEmpty>
						
								<isNotEmpty prepend=" and " property="map.sell_date_lt">
									<![CDATA[m.buyer_buy_date < to_date(#map.sell_date_lt#,'yyyy-mm-dd')]]>
								</isNotEmpty>
						
								<isNotEmpty prepend=" and " property="map.par_pd_type">m.par_pd_type_id = #map.par_pd_type:VARCHAR#</isNotEmpty>
								<include refid="sf-entpShop" />
		         group by m.brand_name, b.p_name, mr.r_name)
		 group by p_name, r_name
		 order by p_name
	</select>
	
	<select id="selectEntpShopWithName" resultMap = "entpShopForPdTypeList" parameterClass="entpShop" >
	<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
	select e.shop_id, a.shop_name,a.logo_pic,a.link_phone,a.street_addr from  (
		select distinct t.shop_id from mdas_shop_brand_pdtype t 
			where 1=1
	<isNotEmpty prepend=" and " property="map.par_pd_type_in">
		t.par_pd_type in 
		<iterate close=")" open="(" conjunction="," property="map.par_pd_type_in">#map.par_pd_type_in[]#</iterate>
	</isNotEmpty>
	<isNotEmpty prepend=" and " property="map.par_pd_type_not_in">
		t.par_pd_type not in 
		<iterate close=")" open="(" conjunction="," property="map.par_pd_type_not_in">#map.par_pd_type_not_in[]#</iterate>
	</isNotEmpty>
	<isNotEmpty prepend=" and " property="map.pd_type_in">
		t.pd_type in 
		<iterate close=")" open="(" conjunction="," property="map.pd_type_in">#map.pd_type_in[]#</iterate>
	</isNotEmpty>
	<isNotEmpty prepend=" and " property="map.shop_id_not_in">
		t.shop_id not in 
		<iterate close=")" open="(" conjunction="," property="map.shop_id_not_in">#map.shop_id_not_in[]#</iterate>
	</isNotEmpty>
	) e left join entp_shop a on e.shop_id = a.shop_id
	where 1=1
	<include refid="sf-entpShop" />
	order by e.shop_id
	<isNotEmpty prepend=" , " property="map.is_commend_desc">a.is_commend desc </isNotEmpty>
	<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- MMT网点情报站-我的情报-本地区网点上月销售额排行  coding by Du,HongGang 2010-10-23 -->
	<select id="selectEntpShopListForMyInfoOrder" resultMap="entpShopResultForList" parameterClass="entpShop" >
		select e.*
		  from entp_shop e
		  left join mdas_shop_pdtype_sales m on m.shop_id = e.shop_id
		 where m.allsales is not null
		   <isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			   p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		   ]]></isNotEmpty>
		   <isNotEmpty prepend=" and " property="map.shop_id_self">
		   		allSales > (select value(a.allSales, 0)
					          from dual
					          left join (select allSales
					                      from mdas_shop_pdtype_sales
					                     where shop_id = #map.shop_id_self:DECIMAL#) a on 1 = 1)
		   </isNotEmpty>
		 order by allSales desc
	</select>
	
	<!-- MMT诚信档案-交易额-网点上月销售额  coding by Wu,ShangLong 2011-05-27 -->
	<select id="selectEntpShopSellPerMonth" resultMap="entpShopSellPerMonth" parameterClass="entpShop" >
		  <![CDATA[ select shop_id,
           sum(sales) / 10000 as TOTALSALES
        from (
         select s.shop_id, j.pd_price as sales
            from jdxx_entp_sell j
            left join std_entp_main s on j.sell_entp_id = s.entp_id                
            where 1 = 1
              and s.own_sys = 1 
              and j.sell_date > trunc(add_months(sysdate, -1), 'MM') - 1 / 24 / 60 / 60
              and j.sell_date <= trunc(add_months(sysdate, 0), 'MM') - 1 / 24 / 60 / 60
           union all
           select s.shop_id, y.xs_money as sales
            from yjhx_entp_sell y
            left join std_entp_main s on y.xs_entp_id = s.entp_id                   
           where 1 = 1
              and s.own_sys = 2
              and y.xs_date > trunc(add_months(sysdate, -1), 'MM') - 1 / 24 / 60 / 60 
              and y.xs_date <= trunc(add_months(sysdate, 0), 'MM') - 1 / 24 / 60 / 60
            )  
      group by shop_id
      ]]>
	</select>
	
	<!-- MMT诚信档案-信息化评分统计-  coding by Wu,ShangLong 2011-05-27 -->
	<select id="selectEntpInfoScores" resultMap="entpShopInfoScores" parameterClass="entpShop" >
		<![CDATA[select shop_id,sum(scores) scores from(
			select distinct sem.shop_id,5 scores from(
			select entp_id,own_sys from wdqbz_pay  where states > 0 and pay_type in (12,123,124,1234)
			union
			select entp_id,own_sys from wdqbz_remit where states > 0 and remit_type in (12,123,124,1234)
			union
			select entp_id,own_sys from wdqbz_card_pay where states > 0 and pay_type in (12,123,124,1234)) tt
			left join std_entp_main sem on sem.entp_id = tt.entp_id and sem.own_sys = tt.own_sys
			where sem.shop_id is not null
			union all
			select distinct sem.shop_id,7 scores from std_entp_login aa
			left join std_entp_main sem on sem.entp_id = aa.entp_id and sem.own_sys = aa.own_sys
			where aa.client_versions = 3 and sem.shop_id is not null
			union all
			select distinct mse.shop_id,5 scores from mmstv2_sn_entp mse
			left join mmstv2_sn ms on ms.sn = mse.sn
			where (ms.add_user_id > 0 or ms.add_user_id < 0) and ms.is_del = 0)
			group by shop_id
			]]>
	</select>
	
	<!-- 找网点  Wu,ShangLong @2011-05-16 -->
	<select id="selectEntpShopInFindShopCount" resultClass="long" parameterClass="entpShop" >
		select count(temp.shop_id) from 
		(select es.shop_id from entp_shop es where 1 = 1 
		<!-- 5.5w-9000网点抽取 * @author Cheng,Bing @version 2011-10-20 -->		
		<isNotEmpty prepend=" and " property="map.is_konka_shop">			
			es.SHOP_ID in (select SHOP_ID from ENTP_SHOP)
		</isNotEmpty>
        <isNotEmpty prepend=" and " property="map.konka_shop_not_r3">			
            es.SHOP_ID not in (select MMT_SHOP_ID from KONKA_R3_MMT_MATCH)
		</isNotEmpty>	
        <isNotEmpty prepend=" and " property="map.konka_shop_not_dl_and_jx">			
		    es.SHOP_ID not in (select mmt_shop_id
		                            from KONKA_BRANCH_CATEGORY
		                           where category_id in (10, 20)
		                             and mmt_shop_id is not null)
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.is_developed">			
			es.SHOP_ID not in (select SHOP_ID from KONKA_SHOP_DEVELOP where develop_status = 2 )
		</isNotEmpty>
				
		<isNotEmpty prepend=" and " property="map.shop_name_like">es.SHOP_NAME like '%' || #map.shop_name_like# || '%'</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.cls_brand_not_null">
		es.shop_id in (
			select tt.shop_id from mv_shop_pdtype_and_brand tt 
			where 1 = 1 
			<isNotEmpty prepend=" and " property="map.cls_ids">
			  tt.cls_id in 
			  <iterate close=")" open="(" conjunction="," property="map.cls_ids">#map.cls_ids[]#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.brand_ids">
			  tt.brand_id in
			  <iterate close=")" open="(" conjunction="," property="map.brand_ids">#map.brand_ids[]#</iterate>
			</isNotEmpty>)
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.reg_info_not_null">
		es.shop_id in (
			select aa.shop_id from std_entp_main aa join (
				select eur.entp_id from entp_user_reg eur where 1 = 1
				<isNotEmpty prepend=" and " property="map.reg_p_index_par"><![CDATA[
			          eur.p_index in (select bpl.p_index from base_province_list_four bpl where bpl.del_mark=0 start with bpl.p_index = #map.reg_p_index_par# connect by prior bpl.p_index = bpl.par_index)
				]]></isNotEmpty>
				)bb on aa.entp_id = bb.entp_id )
		</isNotEmpty>
		
		<isNotEmpty prepend=" AND " property="map.pd_type_sell_info_not_null">
			es.shop_id in (
				select msb.shop_id from mdas_shop_brandsales_$map.yearMon$ msb where 1 = 1
				<isNotEmpty prepend=" and " property="map.pd_type"> msb.pd_type = #map.pd_type# </isNotEmpty>
			 	group by msb.shop_id,msb.pd_type 
				<isEmpty prepend=" " property="map.busi_proportion1">
					<isNotEmpty prepend=" " property="map.busi_total1"> <![CDATA[having sum(msb.xe)/10000 > #map.busi_total1#]]> </isNotEmpty>
				</isEmpty>
				<isEmpty prepend=" " property="map.busi_total1">
					<isNotEmpty prepend=" " property="map.busi_proportion1"> <![CDATA[having sum(msb.per_xe) > #map.busi_proportion1#]]> </isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend=" " property="map.busi_proportion1">
					<isNotEmpty prepend=" " property="map.busi_total1"> <![CDATA[having  sum(msb.xe)/10000 > #map.busi_total1# and sum(msb.per_xe) > #map.busi_proportion1#]]> </isNotEmpty>
				</isNotEmpty>
			)
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.brand_sell_info_not_null">
		es.shop_id in (
		select shop_id from mdas_shop_brandsales_$map.yearMon$ msb_brand
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.brand_id">
			  msb_brand.brand_id = #map.brand_id#
		</isNotEmpty>
		group by msb_brand.shop_id,msb_brand.brand_id 
		<isEmpty prepend=" " property="map.busi_proportion2">
			<isNotEmpty prepend=" " property="map.busi_total2">
			  <![CDATA[having sum(msb_brand.xe)/10000 > #map.busi_total2#]]>
			</isNotEmpty>
		</isEmpty>
		<isEmpty prepend=" " property="map.busi_total2">
			<isNotEmpty prepend=" " property="map.busi_proportion2">
			  <![CDATA[having sum(msb_brand.per_xe) > #map.busi_proportion2#]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" " property="map.busi_proportion2">
			<isNotEmpty prepend=" " property="map.busi_total2">
			  <![CDATA[having  sum(msb_brand.xe)/10000 > #map.busi_total2# or sum(msb_brand.per_xe) > #map.busi_proportion2#]]>
			</isNotEmpty>
		</isNotEmpty>)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			          es.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.p_indexs_par">
			es.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with 
	        bpl.p_index in 
	        <iterate close=")" open="(" conjunction="," property="map.p_indexs_par">#map.p_indexs_par[]#</iterate>
	        connect by prior bpl.p_index = bpl.par_index)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.m_p_index">
			es.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index in ($map.m_p_index$) connect by prior bpl.p_index = bpl.par_index)
		</isNotEmpty>
		) temp
	</select>
		
	<!-- 找网点  Wu,ShangLong @2011-05-16 -->
	<select id="selectEntpShopInFindShopPaginatedList" resultMap="entpShopResultForList" parameterClass="entpShop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select eshop.* from entp_shop eshop join 
		(select DISTINCT es.shop_id from entp_shop es where 1 = 1
		
		<!-- 5.5w-9000网点抽取 * @author Cheng,Bing @version 2011-10-20 -->
		
		<isNotEmpty prepend=" and " property="map.is_konka_shop">			
			es.SHOP_ID in (select SHOP_ID from ENTP_SHOP)
		</isNotEmpty>
        <isNotEmpty prepend=" and " property="map.konka_shop_not_r3">			
            es.SHOP_ID not in (select MMT_SHOP_ID from KONKA_R3_MMT_MATCH)
		</isNotEmpty>	
        <isNotEmpty prepend=" and " property="map.konka_shop_not_dl_and_jx">			
		    es.SHOP_ID not in (select mmt_shop_id
		                            from KONKA_BRANCH_CATEGORY
		                           where category_id in (10, 20)
		                             and mmt_shop_id is not null)
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.is_developed">			
			es.SHOP_ID not in (select SHOP_ID from KONKA_SHOP_DEVELOP where develop_status = 2 )
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.shop_name_like">es.SHOP_NAME like '%' || #map.shop_name_like# || '%'</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.cls_brand_not_null">
		es.shop_id in(
			select tt.shop_id from mv_shop_pdtype_and_brand tt 
			where 1 = 1 
			<isNotEmpty prepend=" and " property="map.cls_ids">
			  tt.cls_id in 
			  <iterate close=")" open="(" conjunction="," property="map.cls_ids">#map.cls_ids[]#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.brand_ids">
			  tt.brand_id in 
			  <iterate close=")" open="(" conjunction="," property="map.brand_ids">#map.brand_ids[]#</iterate>
			</isNotEmpty>)
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.reg_info_not_null">
		es.shop_id in(
			select aa.shop_id from std_entp_main aa join (
				select eur.entp_id from entp_user_reg eur where 1 = 1
				<isNotEmpty prepend=" and " property="map.reg_p_index_par"><![CDATA[
			          eur.p_index in (select bpl.p_index from base_province_list_four bpl where bpl.del_mark=0 start with bpl.p_index = #map.reg_p_index_par# connect by prior bpl.p_index = bpl.par_index)
				]]></isNotEmpty>
				)bb on aa.entp_id = bb.entp_id )
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.pd_type_sell_info_not_null">
		es.shop_id in(
		select msb.shop_id from mdas_shop_brandsales_$map.yearMon$ msb
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.pd_type">
			  msb.pd_type = #map.pd_type#
		</isNotEmpty>
		 group by msb.shop_id,msb.pd_type 
		 <isEmpty prepend=" " property="map.busi_proportion1">
			<isNotEmpty prepend=" " property="map.busi_total1">
			  <![CDATA[having sum(msb.xe)/10000 > #map.busi_total1#]]>
			</isNotEmpty>
		</isEmpty>
		<isEmpty prepend=" " property="map.busi_total1">
			<isNotEmpty prepend=" " property="map.busi_proportion1">
			  <![CDATA[having sum(msb.per_xe) > #map.busi_proportion1#]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" " property="map.busi_proportion1">
			<isNotEmpty prepend=" " property="map.busi_total1">
			  <![CDATA[having  sum(msb.xe)/10000 > #map.busi_total1# and sum(msb.per_xe) > #map.busi_proportion1#]]>
			</isNotEmpty>
		</isNotEmpty>)
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.brand_sell_info_not_null">
		es.shop_id in(
		select shop_id from mdas_shop_brandsales_$map.yearMon$ msb_brand
		where 1 = 1
		<isNotEmpty prepend=" and " property="map.brand_id">
			  msb_brand.brand_id = #map.brand_id#
		</isNotEmpty>
		group by msb_brand.shop_id,msb_brand.brand_id 
		<isEmpty prepend=" " property="map.busi_proportion2">
			<isNotEmpty prepend=" " property="map.busi_total2">
			  <![CDATA[having sum(msb_brand.xe)/10000 > #map.busi_total2#]]>
			</isNotEmpty>
		</isEmpty>
		<isEmpty prepend=" " property="map.busi_total2">
			<isNotEmpty prepend=" " property="map.busi_proportion2">
			  <![CDATA[having sum(msb_brand.per_xe) > #map.busi_proportion2#]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" " property="map.busi_proportion2">
			<isNotEmpty prepend=" " property="map.busi_total2">
			  <![CDATA[having  sum(msb_brand.xe)/10000 > #map.busi_total2# or sum(msb_brand.per_xe) > #map.busi_proportion2#]]>
			</isNotEmpty>
		</isNotEmpty>)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.p_index_par"><![CDATA[
			          es.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with bpl.p_index = #map.p_index_par# connect by prior bpl.p_index = bpl.par_index)
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.p_indexs_par">
			es.p_index in (select bpl.p_index from base_province_list bpl where bpl.del_mark=0 start with 
	        bpl.p_index in 
	        <iterate close=")" open="(" conjunction="," property="map.p_indexs_par">#map.p_indexs_par[]#</iterate>
	        connect by prior bpl.p_index = bpl.par_index)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.many_p_index">
		<isNotEmpty prepend=" " property="map.many_p_index_city">(</isNotEmpty>
		P_INDEX in ($map.many_p_index$)</isNotEmpty>
		<isNotEmpty prepend=" or" property="map.many_p_index_city"> concat(substr(p_index, 1, 4), '00') in ($map.many_p_index_city$))</isNotEmpty>
		) temp on eshop.shop_id = temp.shop_id
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<insert id="insertEntpShop" parameterClass="entpShop">
		<selectKey resultClass="long" keyProperty="shop_id">select SHOP_SEQUENCE.nextval as shop_id from dual</selectKey>
		<![CDATA[insert into entp_shop (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="shop_id">SHOP_ID</isNotNull>	
			<isNotNull prepend="," property="entp_id">ENTP_ID</isNotNull>	
			<isNotNull prepend="," property="shop_name">SHOP_NAME</isNotNull>	
			<isNotNull prepend="," property="shop_desc">SHOP_DESC</isNotNull>	
			<isNotNull prepend="," property="shop_type">SHOP_TYPE</isNotNull>	
			<isNotNull prepend="," property="logo_pic">LOGO_PIC</isNotNull>	
			<isNotNull prepend="," property="p_index">P_INDEX</isNotNull>	
			<isNotNull prepend="," property="c_index">C_INDEX</isNotNull>	
			<isNotNull prepend="," property="main_pd">MAIN_PD</isNotNull>	
			<isNotNull prepend="," property="is_rural">IS_RURAL</isNotNull>	
			<isNotNull prepend="," property="is_auth">IS_AUTH</isNotNull>	
			<isNotNull prepend="," property="credit">CREDIT</isNotNull>	
			<isNotNull prepend="," property="access_num">ACCESS_NUM</isNotNull>	
			<isNotNull prepend="," property="host_id">HOST_ID</isNotNull>	
			,ADD_DATE	
			<isNotNull prepend="," property="del_man2">DEL_MAN2</isNotNull>	
			<isNotNull prepend="," property="state">STATE</isNotNull>	
			<isNotNull prepend="," property="auditor_id">AUDITOR_ID</isNotNull>	
			<isNotNull prepend="," property="audit_date">AUDIT_DATE</isNotNull>	
			<isNotNull prepend="," property="online_qq">ONLINE_QQ</isNotNull>	
			<isNotNull prepend="," property="alipay_email">ALIPAY_EMAIL</isNotNull>	
			<isNotNull prepend="," property="is_commend">IS_COMMEND</isNotNull>	
			<isNotNull prepend="," property="order_value">ORDER_VALUE</isNotNull>	
			<isNotNull prepend="," property="royalty_rate">ROYALTY_RATE</isNotNull>	
			<isNotNull prepend="," property="key_sequence">KEY_SEQUENCE</isNotNull>	
			<isNotNull prepend="," property="login_settings">LOGIN_SETTINGS</isNotNull>	
			<isNotNull prepend="," property="p_count">P_COUNT</isNotNull>	
			<isNotNull prepend="," property="o_count">O_COUNT</isNotNull>	
			<isNotNull prepend="," property="is_otn">IS_OTN</isNotNull>
			<isNotNull prepend="," property="g_lng">G_LNG</isNotNull>
			<isNotNull prepend="," property="g_lat">G_LAT</isNotNull>
			<isNotNull prepend="," property="link_user">LINK_USER</isNotNull>	
			<isNotNull prepend="," property="link_phone">LINK_PHONE</isNotNull>	
			<isNotNull prepend="," property="street_addr">STREET_ADDR</isNotNull>	
			<isNotNull prepend="," property="post_code">POST_CODE</isNotNull>	
			<isNotNull prepend="," property="main_pd2">MAIN_PD2</isNotNull>	
			<isNotNull prepend="," property="is_sall">IS_SALL</isNotNull>	
			<isNotNull prepend="," property="is_maint">IS_MAINT</isNotNull>	
			<isNotNull prepend="," property="is_callb">IS_CALLB</isNotNull>
			<isNotNull prepend="," property="shop_level">SHOP_LEVEL</isNotNull>
			<isNotNull prepend="," property="g_lat_t">G_LAT_T</isNotNull>	
			<isNotNull prepend="," property="g_lng_t">G_LNG_T</isNotNull>	
			<isNotNull prepend="," property="g_is_audit">G_IS_AUDIT</isNotNull>	
			<isNotNull prepend="," property="g_re_count">G_RE_COUNT</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="shop_id">#shop_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="entp_id">#entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shop_name">#shop_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shop_desc">#shop_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shop_type">#shop_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="logo_pic">#logo_pic:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="p_index">#p_index:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="c_index">#c_index:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="main_pd">#main_pd:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_rural">#is_rural:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_auth">#is_auth:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="credit">#credit:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="access_num">#access_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="host_id">#host_id:DECIMAL#</isNotNull>
			,sysdate
			<isNotNull prepend="," property="del_man2">#del_man2:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="state">#state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="auditor_id">#auditor_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_date">#audit_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="online_qq">#online_qq:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="alipay_email">#alipay_email:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_commend">#is_commend:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="order_value">#order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="royalty_rate">#royalty_rate:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="key_sequence">#key_sequence:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="login_settings">#login_settings:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="p_count">#p_count:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="o_count">#o_count:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_otn">#is_otn:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lng">#g_lng:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lat">#g_lat:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="link_user">#link_user:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_phone">#link_phone:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="street_addr">#street_addr:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="post_code">#post_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="main_pd2">#main_pd2:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="std_entp_main_id">#std_entp_main_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_sall">#is_sall:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_maint">#is_maint:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_callb">#is_callb:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shop_level">#shop_level:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lat_t">#g_lat_t:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lng_t">#g_lng_t:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_is_audit">#g_is_audit:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_re_count">#g_re_count:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateEntpShop" parameterClass="entpShop">
		update ENTP_SHOP
		<dynamic prepend="set">
			<isNotNull prepend="," property="shop_id">SHOP_ID = #shop_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="entp_id">ENTP_ID = #entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shop_name">SHOP_NAME = #shop_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shop_desc">SHOP_DESC = #shop_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="shop_type">SHOP_TYPE = #shop_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="logo_pic">LOGO_PIC = #logo_pic:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="p_index">P_INDEX = #p_index:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="c_index">C_INDEX = #c_index:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="main_pd">MAIN_PD = #main_pd:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_rural">IS_RURAL = #is_rural:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_auth">IS_AUTH = #is_auth:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="credit">CREDIT = #credit:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="access_num">ACCESS_NUM = #access_num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="host_id">HOST_ID = #host_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="del_man2">DEL_MAN2 = #del_man2:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="state">STATE = #state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="auditor_id">AUDITOR_ID = #auditor_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_date">AUDIT_DATE = #audit_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="online_qq">ONLINE_QQ = #online_qq:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="alipay_email">ALIPAY_EMAIL = #alipay_email:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_commend">IS_COMMEND = #is_commend:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="royalty_rate">ROYALTY_RATE = #royalty_rate:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="key_sequence">KEY_SEQUENCE = #key_sequence:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="login_settings">LOGIN_SETTINGS = #login_settings:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="p_count">P_COUNT = #p_count:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="o_count">O_COUNT = #o_count:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_otn">IS_OTN = #is_otn:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lng">G_LNG = #g_lng:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lat">G_LAT = #g_lat:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="link_user">LINK_USER = #link_user:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_phone">LINK_PHONE = #link_phone:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="street_addr">STREET_ADDR = #street_addr:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="post_code">POST_CODE = #post_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="main_pd2">MAIN_PD2 = #main_pd2:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="std_entp_main_id">STD_ENTP_MAIN_ID = #std_entp_main_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_sall">IS_SALL = #is_sall:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_maint">IS_MAINT = #is_maint:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_callb">IS_CALLB = #is_callb:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="shop_level">SHOP_LEVEL = #shop_level:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lat_t">G_LAT_T = #g_lat_t:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_lng_t">G_LNG_T = #g_lng_t:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_is_audit">G_IS_AUDIT = #g_is_audit:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="g_re_count">G_RE_COUNT = #g_re_count:DECIMAL#</isNotNull>
			
			<isNotEmpty property="map.is_clear">
				<isNull prepend="," property="g_lng">G_LNG = ''</isNull>
				<isNull prepend="," property="g_lat">G_LAT = ''</isNull>
				<isNull prepend="," property="g_lat_t">G_LAT_T = ''</isNull>
				<isNull prepend="," property="g_lng_t">G_LNG_T = ''</isNull>
			</isNotEmpty>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="shop_id">SHOP_ID = #shop_id#</isNotEmpty>
		<isEmpty prepend=" " property="shop_id">
			<isNotEmpty prepend=" " property="map.pks">
				SHOP_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteEntpShop" parameterClass="entpShop">
		delete from entp_shop where
		<isNotEmpty prepend=" " property="shop_id">SHOP_ID = #shop_id#</isNotEmpty>
		<isEmpty prepend=" " property="shop_id">
			<isNotEmpty prepend=" " property="map.pks">
				SHOP_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>