package com.ebiz.mmt.service.impl;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Service;
import com.ebiz.mmt.dao.KonkaPeArticleContentDao;
import com.ebiz.mmt.dao.KonkaPeArticleInfoDao;
import com.ebiz.mmt.dao.KonkaPeAttachmentsDao;
import com.ebiz.mmt.dao.KonkaPePublicScopeDao;
import com.ebiz.mmt.domain.KonkaPeArticleContent;
import com.ebiz.mmt.domain.KonkaPeArticleInfo;
import com.ebiz.mmt.domain.KonkaPeAttachments;
import com.ebiz.mmt.domain.KonkaPePublicScope;
import com.ebiz.mmt.service.KonkaPeArticleInfoService;
import com.ebiz.mmt.service.KonkaPePublicScopeService;

/**
 * Code by AutoGenerated Builder AutoGenerated Builder Version 2.1
 * 
 * @author Chen,ShunHua
 * @datetime 2011-09-29 17:05:13
 */
@Service
public class KonkaPeArticleInfoServiceImpl implements KonkaPeArticleInfoService {

	@Resource
	private KonkaPeArticleInfoDao konkaPeArticleInfoDao;

	@Resource
	private KonkaPeArticleContentDao konkaPeArticleContentDao;

	@Resource
	private KonkaPeAttachmentsDao konkaPeAttachmentsDao;

	@Resource
	private KonkaPePublicScopeService konkaPePublicScopeService;

	@Resource
	private KonkaPePublicScopeDao konkaPePublicScopeDao;

	public Long createKonkaPeArticleInfo(KonkaPeArticleInfo t) {
		Long id = this.konkaPeArticleInfoDao.insertEntity(t);

		KonkaPeArticleContent konkaPeArticleContent = new KonkaPeArticleContent();
		konkaPeArticleContent.setId(id);
		konkaPeArticleContent.setContent(t.getContent());
		this.konkaPeArticleContentDao.insertEntity(konkaPeArticleContent);

		List<KonkaPeAttachments> attachmentList = t.getKonkaPeAttachments();
		if (null != attachmentList) {
			for (KonkaPeAttachments attachment : attachmentList) {
				attachment.setLink_id(id);
				attachment.setLink_tab(t.getLink_out_addr());
				attachment.setIs_del((long) 0);
				this.konkaPeAttachmentsDao.insertEntity(attachment);
			}
		}

		List<KonkaPePublicScope> konkaPePublicScopeList = t.getKonkaPePublicScopeList();
		if (null != konkaPePublicScopeList) {
			for (KonkaPePublicScope kps : konkaPePublicScopeList) {
				kps.setArticle_id(id);
				this.konkaPePublicScopeDao.insertEntity(kps);
			}
		}

		return id;
	}

	/*
	 * 用于: 新增加盟信息
	 */
	public Long createKonkaPeArticleInfoForJoinInfo(KonkaPeArticleInfo t) {
		Long id = this.konkaPeArticleInfoDao.insertEntity(t);

		createKonkaPePublicScopeForjoinInfo(t);// 添加加盟发布信息

		return id;
	}

	public KonkaPeArticleInfo getKonkaPeArticleInfo(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectEntity(t);
	}

	public Long getKonkaPeArticleInfoCount(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectEntityCount(t);
	}

	public List<KonkaPeArticleInfo> getKonkaPeArticleInfoList(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectEntityList(t);
	}

	public int modifyKonkaPeArticleInfo(KonkaPeArticleInfo t) {
		int count = this.konkaPeArticleInfoDao.updateEntity(t);

		if (null != t.getContent()) {
			KonkaPeArticleContent KonkaPeArticleContent = new KonkaPeArticleContent();
			KonkaPeArticleContent.setId(t.getId());
			KonkaPeArticleContent.setContent(t.getContent());
			this.konkaPeArticleContentDao.updateEntity(KonkaPeArticleContent);
		}

		List<KonkaPeAttachments> attachmentList = t.getKonkaPeAttachments();
		if (null != attachmentList) {
			for (KonkaPeAttachments attachment : attachmentList) {
				attachment.setLink_id(t.getId());
				attachment.setLink_tab(t.getLink_out_addr());
				attachment.setIs_del((long) 0);
				this.konkaPeAttachmentsDao.insertEntity(attachment);
			}
		}

		KonkaPePublicScope _kps = new KonkaPePublicScope();
		_kps.setArticle_id(t.getId());
		this.konkaPePublicScopeDao.deleteEntity(_kps);

		List<KonkaPePublicScope> konkaPePublicScopeList = t.getKonkaPePublicScopeList();
		if (null != konkaPePublicScopeList) {
			for (KonkaPePublicScope kps : konkaPePublicScopeList) {
				kps.setArticle_id(t.getId());
				this.konkaPePublicScopeDao.insertEntity(kps);
			}
		}

		return count;
	}

	/*
	 * 修改加盟信息
	 */
	public int modifyKonkaPeArticleInfoForJoinInfo(KonkaPeArticleInfo t) {
		int count = this.konkaPeArticleInfoDao.updateEntity(t);

		// 先删除加盟发布表 所有记录
		KonkaPePublicScope konkaPePublicScope_temp = new KonkaPePublicScope();
		konkaPePublicScope_temp.setArticle_id(t.getId()); // 删除该资讯对应的发布信息
		konkaPePublicScopeService.removeKonkaPePublicScope(konkaPePublicScope_temp);

		// 再重新增加一遍
		createKonkaPePublicScopeForjoinInfo(t);

		return count;
	}

	public int removeKonkaPeArticleInfo(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.deleteEntity(t);
	}

	public List<KonkaPeArticleInfo> getKonkaPeArticleInfoPaginatedList(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectEntityPaginatedList(t);
	}

	/*
	 * 添加加盟发布信息
	 */
	public void createKonkaPePublicScopeForjoinInfo(KonkaPeArticleInfo t) {
		String public_type = (String) t.getMap().get("public_type");
		String shop_id = (String) t.getMap().get("shop_id");
		String areas_ids = (String) t.getMap().get("areas_ids");
		String province = (String) t.getMap().get("province");

		// 以下代码用于 存储发布对象 begain
		KonkaPePublicScope konkaPePublicScope = new KonkaPePublicScope();
		konkaPePublicScope.setArticle_id(t.getId());
		if (public_type.equals("1")) {// 非所有网点发布
			if (StringUtils.isNotBlank(shop_id)) { // 选择了网点 就以网点为准
				String[] shop_id_array = shop_id.split(",");
				for (String str : shop_id_array) {
					konkaPePublicScope.setPublic_type(3l); // 指定网点发布
					konkaPePublicScope.setPublic_scope(Long.valueOf(str));
					konkaPePublicScopeService.createKonkaPePublicScope(konkaPePublicScope);
				}
			} else if (StringUtils.isNotBlank(areas_ids)) { // 网点为空，以地区为准
				String[] areas_ids_array = areas_ids.split(",");
				for (String str : areas_ids_array) {
					konkaPePublicScope.setPublic_type(1l); // 按地区发布
					konkaPePublicScope.setPublic_scope(Long.valueOf(str));
					konkaPePublicScopeService.createKonkaPePublicScope(konkaPePublicScope);
				}
			} else if (StringUtils.isNotBlank(province)) { // 网点和地区均为空，则以省为准
				konkaPePublicScope.setPublic_type(2l); // 按省发布
				konkaPePublicScope.setPublic_scope(Long.valueOf(province));
				konkaPePublicScopeService.createKonkaPePublicScope(konkaPePublicScope);
			}
		} else {
			konkaPePublicScope.setPublic_type(0l); // 对所有人发布
			konkaPePublicScopeService.createKonkaPePublicScope(konkaPePublicScope);
		}
		// end
	}

	public Long getKonkaPeArticleInfoCountForReceive(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectKonkaPeArticleInfoCountForReceive(t);
	}

	public List<KonkaPeArticleInfo> getKonkaPeArticleInfoPaginatedListForReceive(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectKonkaPeArticleInfoPaginatedListForReceive(t);
	}

	/**
	 * @author Hu,Hao
	 * @version 2013-05-30
	 */
	public List<KonkaPeArticleInfo> getKonkaPeArticleInfoForMobilePaginatedList(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectKonkaPeArticleInfoForMobilePaginatedList(t);
	}

	/**
	 * @author Hu,Hao
	 * @version 2013-05-30
	 */
	public Long getKonkaPeArticleInfoForMobileCount(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectKonkaPeArticleInfoForMobileCount(t);
	}

	/**
	 * @author Hu,Hao
	 * @version 2013-07-14
	 */
	public List<KonkaPeArticleInfo> getKonkaPeArticleInfoForGroupPaginatedList(KonkaPeArticleInfo t) {
		return this.konkaPeArticleInfoDao.selectKonkaPeArticleInfoForGroupPaginatedList(t);
	}

	/**
	 * @author Hu,Hao
	 * @version 2013-07-14
	 */
	public void createKonkaPeArticleInfoForGroup(KonkaPeArticleInfo t) {
		Long id = this.konkaPeArticleInfoDao.insertEntity(t);

		KonkaPeArticleContent konkaPeArticleContent = new KonkaPeArticleContent();
		konkaPeArticleContent.setId(id);
		konkaPeArticleContent.setContent(t.getContent());
		this.konkaPeArticleContentDao.insertEntity(konkaPeArticleContent);

		List<KonkaPeAttachments> attachmentList = t.getKonkaPeAttachments();
		if (null != attachmentList) {
			for (KonkaPeAttachments attachment : attachmentList) {
				attachment.setLink_id(id);
				attachment.setLink_tab(t.getLink_out_addr());
				attachment.setIs_del((long) 0);
				this.konkaPeAttachmentsDao.insertEntity(attachment);
			}
		}
	}

	/**
	 * @author Hu,Hao
	 * @version 2013-07-14
	 */
	public void modifyKonkaPeArticleInfoForGroup(KonkaPeArticleInfo t) {
		this.konkaPeArticleInfoDao.updateEntity(t);

		if (null != t.getContent()) {
			KonkaPeArticleContent KonkaPeArticleContent = new KonkaPeArticleContent();
			KonkaPeArticleContent.setId(t.getId());
			KonkaPeArticleContent.setContent(t.getContent());
			this.konkaPeArticleContentDao.updateEntity(KonkaPeArticleContent);
		}

		List<KonkaPeAttachments> attachmentList = t.getKonkaPeAttachments();
		if (null != attachmentList) {
			for (KonkaPeAttachments attachment : attachmentList) {
				attachment.setLink_id(t.getId());
				attachment.setLink_tab(t.getLink_out_addr());
				attachment.setIs_del((long) 0);
				this.konkaPeAttachmentsDao.insertEntity(attachment);
			}
		}
	}
}