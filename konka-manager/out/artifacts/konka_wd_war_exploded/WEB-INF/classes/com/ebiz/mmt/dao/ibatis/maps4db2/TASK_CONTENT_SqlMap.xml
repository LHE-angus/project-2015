<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="TASK_CONTENT">
	<typeAlias alias="taskContent" type="com.ebiz.mmt.domain.TaskContent" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertTaskContent" />
		<flushOnExecute statement="updateTaskContent" />
		<flushOnExecute statement="deleteTaskContent" />
	</cacheModel>

	<resultMap id="taskContentResultForList" class="taskContent">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="PARTICIPANT_ID" property="participant_id" jdbcType="DECIMAL" />
		<result column="TASK_P_TYPE" property="task_p_type" jdbcType="VARCHAR" />
		<result column="TASK_XS" property="task_xs" jdbcType="DECIMAL" />
		<result column="TASK_ED" property="task_ed" jdbcType="DECIMAL" />
		<result column="TASK_DESC" property="task_desc" jdbcType="VARCHAR" />
		<result column="TASK_YEAR" property="task_year" jdbcType="INTEGER" />
		<result column="TASK_MONTH" property="task_month" jdbcType="INTEGER" />
		<result column="TASK_DAY" property="task_day" jdbcType="INTEGER" />
	</resultMap>

	<!-- domain 继承了basedomain, basedomain定义有row和map的属性 -->
	<resultMap id="taskContentResult" class="taskContent" extends="taskContentResultForList">
		<result column="TASK_PARTICIPANT_ID" property="map.task_participant_id" jdbcType="VARCHAR" />
		<result column="DEPT_ID" property="map.dept_id" jdbcType="VARCHAR" />
		<result column="DEPT_CODE" property="map.dept_code" jdbcType="VARCHAR" />
		<result column="YWY_ID" property="map.ywy_id" jdbcType="VARCHAR" />
		<result column="YWY_NAME" property="map.ywy_name" jdbcType="VARCHAR" />
		<result column="CUSTOMER_ID" property="map.customer_id" jdbcType="VARCHAR" />
		<result column="CUSTOMER_CODE" property="map.customer_code" jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="map.customer_name" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-taskContent">
		<isNotEmpty prepend=" and " property="id">a.ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="participant_id">a.PARTICIPANT_ID = #participant_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_p_type">a.TASK_P_TYPE = #task_p_type:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_xs">a.TASK_XS = #task_xs:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_ed">a.TASK_ED = #task_ed:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_desc">a.TASK_DESC = #task_desc:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_year">a.TASK_YEAR = #task_year:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_month">a.TASK_MONTH = #task_month:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_day">a.TASK_DAY = #task_day:INTEGER#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.dept_id">b.DEPT_ID = #map.dept_id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_id">b.YWY_ID = #map.ywy_id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_name">b.YWY_NAME = #map.ywy_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.customer_id">b.CUSTOMER_ID = #map.customer_id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.customer_name">b.CUSTOMER_NAME = #map.customer_name:VARCHAR#</isNotEmpty>
		
	</sql>

	<select id="selectTaskContent" resultMap="taskContentResult" parameterClass="taskContent" cacheModel="oneDayCache">
		SELECT a.*,
		       b.ID AS TASK_PARTICIPANT_ID,
		       b.DEPT_ID,
		       b.DEPT_CODE,
		       b.YWY_ID,
		       b.YWY_NAME,
		       b.CUSTOMER_ID,
		       b.CUSTOMER_NAME,
		       c.R3_CODE as CUSTOMER_CODE,
		       d.DEPT_NAME
		  FROM TASK_CONTENT a LEFT JOIN TASK_PARTICIPANT b ON a.PARTICIPANT_ID = b.ID 
		  left join konka_r3_shop c on b.CUSTOMER_ID = c.id left join konka_dept d on b.dept_id = d.dept_id where 1=1  
		<include refid="sf-taskContent" />
	</select>

	<select id="selectTaskContentList" resultMap="taskContentResultForList" parameterClass="taskContent" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		SELECT a.*,
		       b.ID AS TASK_PARTICIPANT_ID,
		       b.DEPT_ID,
		       b.DEPT_CODE,
		       b.YWY_ID,
		       b.YWY_NAME,
		       b.CUSTOMER_ID,
		       b.CUSTOMER_NAME,
		       c.R3_CODE as CUSTOMER_CODE,
		       d.DEPT_NAME
		  FROM TASK_CONTENT a LEFT JOIN TASK_PARTICIPANT b ON a.PARTICIPANT_ID = b.ID 
		  left join konka_r3_shop c on b.CUSTOMER_ID = c.id left join konka_dept d on b.dept_id = d.dept_id where 1=1 
		<include refid="sf-taskContent" />
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectTaskContentCount" resultClass="long" parameterClass="taskContent" cacheModel="oneDayCache">
		select count(*) from TASK_CONTENT a ,TASK_PARTICIPANT b where 1 = 1 and a.PARTICIPANT_ID = b.ID
		<include refid="sf-taskContent" />
	</select>

	<select id="selectTaskContentPaginatedList" resultMap="taskContentResult" parameterClass="taskContent" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		SELECT a.*,
		       b.ID AS TASK_PARTICIPANT_ID,
		       b.DEPT_ID,
		       b.DEPT_CODE,
		       b.YWY_ID,
		       b.YWY_NAME,
		       b.CUSTOMER_ID,
		       b.CUSTOMER_NAME,
		       c.R3_CODE as CUSTOMER_CODE,
		       d.DEPT_NAME
		  FROM TASK_CONTENT a LEFT JOIN TASK_PARTICIPANT b ON a.PARTICIPANT_ID = b.ID 
		  left join konka_r3_shop c on b.CUSTOMER_ID = c.id left join konka_dept d on b.dept_id = d.dept_id where 1=1 
		<include refid="sf-taskContent" />
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	
	
	<!--任务管理业务员报表功能开始  update by wangkl-->
	<resultMap id="taskContentywyreportResult" class="taskContent">
		<result column="DEPT_Name" property="map.dept_name" jdbcType="VARCHAR" />
		<result column="L4_DEPT_NAME" property="map.l4_dept_name" jdbcType="VARCHAR" />
		<result column="L5_DEPT_NAME" property="map.l5_dept_name" jdbcType="VARCHAR" />
		<result column="TASK_XS" property="task_xs" jdbcType="DECIMAL" />
		<result column="TASK_ED" property="task_ed" jdbcType="VARCHAR" />
		<result column="TASK_YEAR" property="task_year" jdbcType="INTEGER" />
		<result column="TASK_MONTH" property="task_month" jdbcType="INTEGER" />
		<result column="YWY_NAME" property="map.ywy_name" jdbcType="VARCHAR" />
		<result column="CUR_CLS_MONEY" property="map.cur_cls_money" jdbcType="DECIMAL" />
		<result column="CUR_BACK_MONEY" property="map.cur_back_money" jdbcType="DECIMAL" />
		<result column="COMPLETE_RATE" property="map.complete_rate" jdbcType="DECIMAL" />
		<result column="YWYPM" property="map.ywypm" jdbcType="DECIMAL" />
	</resultMap>
	
	
	<sql id="sf-taskContent－ywy">
		<isNotEmpty prepend=" and " property="id">a.ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="participant_id">a.PARTICIPANT_ID = #participant_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_p_type">a.TASK_P_TYPE = #task_p_type:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_xs">a.TASK_XS = #task_xs:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_ed">a.TASK_ED = #task_ed:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_desc">a.TASK_DESC = #task_desc:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_year">a.TASK_YEAR = #task_year:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_month">a.TASK_MONTH = #task_month:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="task_day">a.TASK_DAY = #task_day:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_name">b.ywy_name like '%' || #map.ywy_name:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_id">d.dept_id = #map.dept_id:IDECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.l4_dept_id">d.l4_dept_id = #map.l4_dept_id:IDECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.l5_dept_id">d.l5_dept_id = #map.l5_dept_id:IDECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_id_in"> (d.cur_dept_id in (select dept_id from KONKA_DEPT start with dept_id =
			#map.dept_id_in# connect by prior dept_id = par_id))
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.querybycust_userid_eq">
		u.id=#map.querybycust_userid_eq#
		</isNotEmpty>
	</sql>
	
	<select id="selectTaskYwyReportContentCount" resultClass="long" parameterClass="taskContent" cacheModel="oneDayCache">
		select count(*) from  TASK_CONTENT a
			       LEFT JOIN TASK_PARTICIPANT b
			              ON a.PARTICIPANT_ID = b.id
			       LEFT JOIN KONKA_PE_PROD_USER u
			              ON b.YWY_ID = u.JOB_ID
			       LEFT JOIN V_ORG_OF_DEPT d
			              ON u.DEPT_ID = d.CUR_DEPT_ID
			            where 1=1
		<include refid="sf-taskContent－ywy" />
	</select>
	<select id="selectTaskContentYwyReportPaginatedList" resultMap="taskContentywyreportResult" parameterClass="taskContent" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
					SELECT temp.*,(case when cur_cls_money !=0 and TASK_ED !=0 then (cur_cls_money/TASK_ED) else 0 end) as complete_rate,
					 rank () OVER (ORDER BY (case when cur_cls_money !=0 and TASK_ED !=0 then (cur_cls_money/TASK_ED) else 0 end) desc) as ywypm
					 FROM (SELECT d.DEPT_Name,d.L4_DEPT_name,d.L5_DEPT_name,b.YWY_NAME,a.TASK_YEAR,a.TASK_MONTH,a.TASK_XS, a.TASK_ED,
					 
			    <![CDATA[   (SELECT Sum (t.column_14) / 10000]]>
			        FROM   channel_data_import t
			               LEFT JOIN MV_ORG_OF_CUSTOMER_ALL shop
			                      ON t.COLUMN_1 = shop.R3_CODE
			        WHERE  To_char(t.column_7, 'yyyy') = a.TASK_YEAR
			               AND Int(To_char(t.COLUMN_7, 'MM')) = a.TASK_MONTH
			               AND shop.user_id = u.ID) AS cur_cls_money,
			       (SELECT Sum (CASE Int(a.TASK_MONTH)
			                      WHEN 1 THEN t.COLUMN_1
			                      WHEN 2 THEN t.COLUMN_2
			                      WHEN 3 THEN t.COLUMN_3
			                      WHEN 4 THEN t.COLUMN_4
			                      WHEN 5 THEN t.COLUMN_5
			                      WHEN 6 THEN t.COLUMN_6
			                      WHEN 7 THEN t.COLUMN_7
			                      WHEN 8 THEN t.COLUMN_8
			                      WHEN 9 THEN t.COLUMN_9
			                      WHEN 10 THEN t.COLUMN_10
			                      WHEN 11 THEN t.COLUMN_11
			                      WHEN 12 THEN t.COLUMN_12
			                    END) AS cur_back_money
			        FROM   konka_r3_backmoney t
			               LEFT JOIN MV_ORG_OF_CUSTOMER_ALL shop
			                      ON t.r3_code = shop.r3_code
			        WHERE  t.YEAR = a.TASK_YEAR
			               AND shop.user_id = u.ID) AS cur_back_money
			FROM   TASK_CONTENT a
			       LEFT JOIN TASK_PARTICIPANT b
			              ON a.PARTICIPANT_ID = b.id
			       LEFT JOIN KONKA_PE_PROD_USER u
			              ON b.YWY_ID = u.JOB_ID
			       LEFT JOIN V_ORG_OF_DEPT d
			              ON u.DEPT_ID = d.CUR_DEPT_ID
			               where 1=1
		<include refid="sf-taskContent－ywy" />
		<![CDATA[ ) temp order by complete_rate desc ) t_  where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	<!--任务管理业务员报表功能结束  update by wangkl-->
	
	

<!--    按客户统计任务率-->
     <select id="selectTaskReportByCustCount" resultClass="long" parameterClass="taskContent" cacheModel="oneDayCache">
		SELECT count(*)
				  FROM TASK_CONTENT a
				       LEFT JOIN TASK_PARTICIPANT b
				          ON to_char (a.PARTICIPANT_ID) = b.ID
				       LEFT JOIN MV_ORG_OF_CUSTOMER_ALL c
				          ON b.CUSTOMER_ID = c.konka_r3_id
				       LEFT JOIN (SELECT t.column_1 r3_code,
				                         sum (t.column_14) / 10000 cur_cls_money
				                    FROM channel_data_import t
				                   WHERE     1 = 1
				                   <isNotEmpty prepend=" and " property="map.year">to_char (t.column_7, 'yyyy')= #map.year:VARCHAR#</isNotEmpty>
				                   <isNotEmpty prepend=" and " property="map.month">to_char (t.COLUMN_7, 'MM') = #map.month:VARCHAR#</isNotEmpty>
				                  GROUP BY t.column_1) t1
				          ON c.R3_CODE = t1.R3_CODE
				       LEFT JOIN (SELECT t.R3_CODE
				       <isNotEmpty prepend=" , " property="map.month">
	                        CASE #map.month:VARCHAR#
	                            WHEN '01' THEN t.COLUMN_1
	                            WHEN '02' THEN t.COLUMN_2
	                            WHEN '03' THEN t.COLUMN_4
	                            WHEN '05' THEN t.COLUMN_5
	                            WHEN '06' THEN t.COLUMN_6
	                            WHEN '07' THEN t.COLUMN_7
	                            WHEN '08' THEN t.COLUMN_8
	                            WHEN '09' THEN t.COLUMN_9
	                            WHEN '10' THEN t.COLUMN_10
	                            WHEN '11' THEN t.COLUMN_11
	                            WHEN '12' THEN t.COLUMN_12
	                         END
	                            cur_back_money
				       </isNotEmpty>
		                    FROM konka_r3_backmoney t
		                   WHERE 1 = 1 
		                   <isNotEmpty prepend=" and " property="map.year">t.YEAR= #map.year:VARCHAR#</isNotEmpty>) t4
				          ON c.r3_code = t4.r3_code
				 WHERE a.TASK_P_TYPE = 'customer' AND b.CUSTOMER_ID IS NOT NULL
				    <isNotEmpty prepend=" and " property="map.year">a.TASK_YEAR = #map.year:INTEGER#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.month">a.TASK_MONTH = #map.month:INTEGER#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.r3_code_like">c.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.customer_name_like">c.CUSTOMER_NAME like '%' || #map.customer_name_like:VARCHAR# || '%'</isNotEmpty>
				 	<isNotEmpty prepend=" and " property="map.cus_type1">c.PAR_CUSTOMER_TYPE = #map.cus_type1:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.cus_type2">c.CUSTOMER_TYPE = #map.cus_type2:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.fgs_id">c.DEPT_ID = #map.fgs_id:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.dept_id">c.CUR_DEPT_ID = #map.dept_id:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.dept_id_start">
			          c.CUR_DEPT_ID IN
			                 (SELECT dept_id
			                    FROM konka_dept
			                  START WITH dept_id IN
			                                (SELECT DISTINCT (dept_id)
			                                   FROM KONKA_ROLE_DATA_LEVEL
			                                  WHERE role_id IN (SELECT role_id
			                                                      FROM KONKA_PE_ROLE_USER
			                                                     WHERE user_id = #map.session_user_id:DECIMAL#))
			                             OR dept_id = #map.dept_id_start#
			                  CONNECT BY PRIOR dept_id = par_id)
			        </isNotEmpty>
				  <isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
				       <![CDATA[ (c.user_id = #map.filter_by_ywy_id_eq# )]]>
				  </isNotEmpty>
	</select>
<!--    按客户统计任务率-->
	<select id="selectTaskReportByCustPaginatedList" resultClass="HashMap" parameterClass="taskContent" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
				SELECT a.TASK_XS,
				       a.TASK_ED,
				       a.TASK_YEAR,
				       a.TASK_MONTH,
				       a.TASK_P_TYPE,
				       c.R3_CODE,
				       c.CUSTOMER_NAME,
				       c.PAR_CUSTOMER_TYPE,
				       c.PAR_CUSTOMER_TYPE_NAME,
				       c.CUSTOMER_TYPE,
				       c.CUSTOMER_TYPE_NAME,
				       c.DEPT_ID,
				       c.DEPT_NAME,
				       c.CUR_DEPT_ID,
				       c.CUR_DEPT_NAME,
				       t1.cur_cls_money,
				       t4.cur_back_money,
				       (CASE
				           WHEN a.TASK_ED != 0 THEN (t4.cur_back_money / a.TASK_ED)*100
				           ELSE 0
				        END)
				          JS_BFB
				  FROM TASK_CONTENT a
				       LEFT JOIN TASK_PARTICIPANT b
				          ON to_char (a.PARTICIPANT_ID) = b.ID
				       LEFT JOIN MV_ORG_OF_CUSTOMER_ALL c
				          ON b.CUSTOMER_ID = c.konka_r3_id
				       LEFT JOIN (SELECT t.column_1 r3_code,
				                         sum (t.column_14) / 10000 cur_cls_money
				                    FROM channel_data_import t
				                   WHERE     1 = 1
				                   <isNotEmpty prepend=" and " property="map.year">to_char (t.column_7, 'yyyy')= #map.year:VARCHAR#</isNotEmpty>
				                   <isNotEmpty prepend=" and " property="map.month">to_char (t.COLUMN_7, 'MM') = #map.month:VARCHAR#</isNotEmpty>
				                  GROUP BY t.column_1) t1
				          ON c.R3_CODE = t1.R3_CODE
				       LEFT JOIN (SELECT t.R3_CODE
				       <isNotEmpty prepend=" , " property="map.month">
	                        CASE #map.month:VARCHAR#
	                            WHEN '01' THEN t.COLUMN_1
	                            WHEN '02' THEN t.COLUMN_2
	                            WHEN '03' THEN t.COLUMN_4
	                            WHEN '05' THEN t.COLUMN_5
	                            WHEN '06' THEN t.COLUMN_6
	                            WHEN '07' THEN t.COLUMN_7
	                            WHEN '08' THEN t.COLUMN_8
	                            WHEN '09' THEN t.COLUMN_9
	                            WHEN '10' THEN t.COLUMN_10
	                            WHEN '11' THEN t.COLUMN_11
	                            WHEN '12' THEN t.COLUMN_12
	                         END
	                            cur_back_money
				       </isNotEmpty>
		                    FROM konka_r3_backmoney t
		                   WHERE 1 = 1 
		                   <isNotEmpty prepend=" and " property="map.year">t.YEAR= #map.year:VARCHAR#</isNotEmpty>) t4
				          ON c.r3_code = t4.r3_code
				 WHERE a.TASK_P_TYPE = 'customer' AND b.CUSTOMER_ID IS NOT NULL
				    <isNotEmpty prepend=" and " property="map.year">a.TASK_YEAR = #map.year:INTEGER#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.month">a.TASK_MONTH = #map.month:INTEGER#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.r3_code_like">c.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.customer_name_like">c.CUSTOMER_NAME like '%' || #map.customer_name_like:VARCHAR# || '%'</isNotEmpty>
				 	<isNotEmpty prepend=" and " property="map.cus_type1">c.PAR_CUSTOMER_TYPE = #map.cus_type1:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.cus_type2">c.CUSTOMER_TYPE = #map.cus_type2:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.fgs_id">c.DEPT_ID = #map.fgs_id:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.dept_id">c.CUR_DEPT_ID = #map.dept_id:DECIMAL#</isNotEmpty>
		            <isNotEmpty prepend=" and " property="map.dept_id_start">
			          c.CUR_DEPT_ID IN
			                 (SELECT dept_id
			                    FROM konka_dept
			                  START WITH dept_id IN
			                                (SELECT DISTINCT (dept_id)
			                                   FROM KONKA_ROLE_DATA_LEVEL
			                                  WHERE role_id IN (SELECT role_id
			                                                      FROM KONKA_PE_ROLE_USER
			                                                     WHERE user_id = #map.session_user_id:DECIMAL#))
			                             OR dept_id = #map.dept_id_start#
			                  CONNECT BY PRIOR dept_id = par_id)
			        </isNotEmpty>
				  <isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">
				       <![CDATA[ (c.user_id = #map.filter_by_ywy_id_eq# )]]>
				  </isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>


	<insert id="insertTaskContent" parameterClass="taskContent">
		<selectKey resultClass="long" keyProperty="id">select seq_task_content.nextval as id from dual </selectKey>
		<![CDATA[insert into TASK_CONTENT (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="participant_id">PARTICIPANT_ID</isNotNull>	
			<isNotNull prepend="," property="task_p_type">TASK_P_TYPE</isNotNull>	
			<isNotNull prepend="," property="task_xs">TASK_XS</isNotNull>	
			<isNotNull prepend="," property="task_ed">TASK_ED</isNotNull>	
			<isNotNull prepend="," property="task_desc">TASK_DESC</isNotNull>	
			<isNotNull prepend="," property="task_year">TASK_YEAR</isNotNull>	
			<isNotNull prepend="," property="task_month">TASK_MONTH</isNotNull>	
			<isNotNull prepend="," property="task_day">TASK_DAY</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="participant_id">#participant_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="task_p_type">#task_p_type:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="task_xs">#task_xs:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="task_ed">#task_ed:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="task_desc">#task_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="task_year">#task_year:INTEGER#</isNotNull>
			<isNotNull prepend="," property="task_month">#task_month:INTEGER#</isNotNull>
			<isNotNull prepend="," property="task_day">#task_day:INTEGER#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateTaskContent" parameterClass="TaskContent">
		update TASK_CONTENT
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="participant_id">PARTICIPANT_ID = #participant_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="task_p_type">TASK_P_TYPE = #task_p_type:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="task_xs">TASK_XS = #task_xs:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="task_ed">TASK_ED = #task_ed:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="task_desc">TASK_DESC = #task_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="task_year">TASK_YEAR = #task_year:INTEGER#</isNotNull>
			<isNotNull prepend="," property="task_month">TASK_MONTH = #task_month:INTEGER#</isNotNull>
			<isNotNull prepend="," property="task_day">TASK_DAY = #task_day:INTEGER#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteTaskContent" parameterClass="TaskContent">
		delete from TASK_CONTENT a where
		<isNotEmpty prepend=" " property="id">a.ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>