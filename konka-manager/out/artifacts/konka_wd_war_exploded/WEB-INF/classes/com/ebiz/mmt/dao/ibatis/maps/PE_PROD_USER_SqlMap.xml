<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="PE_PROD_USER">

	<typeAlias alias="peProdUser" type="com.ebiz.mmt.domain.PeProdUser" />

	

	<resultMap id="peProdUserResultForList" class="peProdUser">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="PROD_ENTP_ID" property="prod_entp_id" jdbcType="DECIMAL" />
		<result column="USER_TYPE" property="user_type" jdbcType="DECIMAL" />
		<result column="USER_NAME" property="user_name" jdbcType="VARCHAR" />
		<result column="PASS_WORD" property="pass_word" jdbcType="VARCHAR" />
		<result column="REAL_NAME" property="real_name" jdbcType="VARCHAR" />
		<result column="LINK_TEL" property="link_tel" jdbcType="VARCHAR" />
		<result column="LINK_ADDR" property="link_addr" jdbcType="VARCHAR" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATE" />
		<result column="ADD_USER_ID" property="add_user_id" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
		<result column="DEPARTMENT" property="department" jdbcType="VARCHAR" />
		<result column="CHARGEMAN" property="chargeman" jdbcType="VARCHAR" />
		<result column="IS_CHAPTER" property="is_chapter" jdbcType="DECIMAL" />
		<result column="DEPT_ID" property="dept_id" jdbcType="DECIMAL" />
		<result column="PAR_DEPT_ID" property="par_dept_id" jdbcType="DECIMAL" />
		<result column="LEADER_ID" property="leader_id" jdbcType="DECIMAL" />
		<result column="POSITION_ID" property="position_id" jdbcType="DECIMAL" />
		<result column="SEX" property="sex" jdbcType="DECIMAL" />
		<result column="BIRTHDAY" property="birthday" jdbcType="DATE" />
		<result column="P_INDEX" property="p_index" jdbcType="DECIMAL" />
		<result column="LINK_POST" property="link_post" jdbcType="VARCHAR" />
		<result column="LINK_PHONE" property="link_phone" jdbcType="VARCHAR" />
		<result column="LINK_QQ" property="link_qq" jdbcType="VARCHAR" />
		<result column="LINK_MSN" property="link_msn" jdbcType="VARCHAR" />
		<result column="ADD_E_USER_ID" property="add_e_user_id" jdbcType="DECIMAL" />
		<result column="ADD_E_USER_ID" property="add_e_user_id" jdbcType="DECIMAL" />
		<result column="LOGIN_COUNT" property="login_count" jdbcType="DECIMAL" />
		<result column="LAST_LOGIN_IP" property="last_login_ip" jdbcType="VARCHAR" />
		<result column="LAST_LOGIN_TIME" property="last_login_time" jdbcType="DATE" />
		<result column="ORDER_VALUE" property="order_value" jdbcType="DECIMAL" />
		<result column="IS_XX_USER" property="is_xx_user" jdbcType="DECIMAL" />
		<result column="JOB_ID" property="job_id" jdbcType="VARCHAR" />
		<result column="CUST_ID" property="cust_id" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="peProdUserResult" class="peProdUser" extends="peProdUserResultForList">
	</resultMap>

	<resultMap id="peProdUserWithEntpNameResult" class="peProdUser" extends="peProdUserResultForList">
		<result column="ENTP_NAME" property="map.entp_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="peProdUserWithPositionNameAndFullDeptName" class="peProdUser" extends="peProdUserResultForList">
		<result column="ROLE_NAME" property="map.role_name" jdbcType="VARCHAR" />
		<!-- <result column="ROLE_ID" property="map.role_id" jdbcType="DECIMAL" /> -->
		<result column="FULL_DEPT_NAME" property="map.full_dept_name" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="peProdUserWithRoleName" class="peProdUser" extends="peProdUserResultForList">
		<result column="ROLE_NAME" property="map.role_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="peProdUserForGroup" class="peProdUser">
		<result column="USER_ID" property="map.user_id" jdbcType="DECIMAL" />
		<result column="USER_NAMES" property="map.user_names" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="peProdUserResultForShowinfo" class="peProdUser" extends="peProdUserResultForList">
		<result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
		<result column="PAR_DEPT_IDS" property="map.par_dept_ids" jdbcType="DECIMAL" />
		<result column="DEPT_TYPE" property="map.dept_type" jdbcType="DECIMAL" />
		<result column="PAR_ID" property="map.par_id" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="deptIdForSelectUser" class="peProdUser">
		<result column="DEPT_ID" property="dept_id" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="sf-peProdUser">
		<isNotEmpty prepend=" and " property="id">ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prod_entp_id">PROD_ENTP_ID = #prod_entp_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_type">USER_TYPE = #user_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_name">USER_NAME = #user_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_like">USER_NAME like '%' || #map.user_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="pass_word">PASS_WORD = #pass_word:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="real_name">REAL_NAME = #real_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.real_name_like">REAL_NAME like '%' || #map.real_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_tel">LINK_TEL = #link_tel:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_addr">LINK_ADDR = #link_addr:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="email">EMAIL = #email:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">ADD_DATE = #add_date:DATE#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_user_id">ADD_USER_ID = #add_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="department">DEPARTMENT = insertPeProdUser#department:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="chargeman">CHARGEMAN = #chargeman:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_chapter">IS_CHAPTER = #is_chapter:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_id">DEPT_ID = #dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="par_dept_id">PAR_DEPT_ID = #par_dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="leader_id">LEADER_ID = #leader_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="position_id">POSITION_ID = #position_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="sex">SEX = #sex:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="birthday">BIRTHDAY = #birthday:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="p_index">P_INDEX = #p_index:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_post">LINK_POST = #link_post:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_phone">LINK_PHONE = #link_phone:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_qq">LINK_QQ = #link_qq:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="link_msn">LINK_MSN = #link_msn:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_e_user_id">ADD_E_USER_ID = #add_e_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_like">USER_NAME like '%' || #map.user_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">order_value = #order_value:DECIMAL#</isNotEmpty>
		<!-- <isNotEmpty prepend=" and " property="is_xx_user">IS_XX_USER = #is_xx_user:DECIMAL#</isNotEmpty> -->
		<isNotEmpty prepend=" and " property="map.ids">ID in($map.ids$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_del">t.IS_DEL = #map.is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_id">t.dept_id = #map.dept_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="job_id">JOB_ID = #job_id:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cust_id">CUST_ID = #cust_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_type_in">USER_TYPE in ($map.user_type_in$)</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.user_name_is_not_null">USER_NAME is not null</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_this_id">ID not in ($map.not_this_id$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cust_id_not_null">CUST_ID is not null</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.konka_dept_id">
			KONKA_DEPT_ID = #map.konka_dept_id:VARCHAR#
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.role_id">
			t.ID in (select distinct(pru.USER_ID) from KONKA_PE_ROLE_USER pru where pru.role_id = #map.role_id:DECIMAL#)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.id_not_eq">t.id != #map.id_not_eq:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.id_not_in">t.id not in ( $map.id_not_in$ )</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.name_like">(t.USER_NAME like '%' || #map.name_like:VARCHAR# || '%' or REAL_NAME
			like '%' || #map.name_like:VARCHAR# || '%')</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.user_name_like">(UPPER(t.USER_NAME) like '%' || UPPER(#map.user_name_like:VARCHAR#) ||
			'%')</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.is_use">t.id not in (select user_id from KONKA_PE_ROLE_USER where role_id !=
			#map.this_role_id:DECIMAL#)</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.dept_id_in">(t.dept_id in (select dept_id from KONKA_DEPT start with dept_id =
			#map.dept_id_in# connect by prior dept_id = par_id) 
			<isNotEmpty prepend=" or  " property="map.user_id">t.id = #map.user_id#</isNotEmpty>)</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.dept_id_all_prod_user">t.dept_id in (select dept_id from KONKA_DEPT start with dept_id =
			#map.dept_id_all_prod_user# connect by prior dept_id = par_id)</isNotEmpty>
			
			<isNotEmpty prepend=" and  " property="map.only_link_user_ids">t.id in ($map.only_link_user_ids$)</isNotEmpty>
		<!-- 
		<isNotEmpty prepend=" and  " property="map.is_zmd_head">role_id  >= 200 and 400 >= role_id </isNotEmpty>
		<isNotEmpty prepend=" and  " property="map.is_zmd_dept">role_id = 400 </isNotEmpty> -->
		
		<!-- 多个部门下属人员 -->
		<isNotEmpty prepend=" and " property="map.depts_id_all_prod_user">(t.dept_id in (select dept_id from KONKA_DEPT start with dept_id in
			($map.depts_id_all_prod_user$) connect by prior dept_id = par_id)
			<isNotEmpty prepend=" or  " property="map.link_user_ids">t.id in ($map.link_user_ids$)</isNotEmpty>)</isNotEmpty>
			
			<isNotEmpty prepend=" and " property="map.selects">
			a.ID in ($map.selects$)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_selects">
			a.ID not in ($map.not_selects$)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sales_name_like">USER_NAME like '%'|| #map.sales_name_like:VARCHAR# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.job_like">JOB_ID like '%'|| upper(#map.job_like:VARCHAR#) ||'%'</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.in_stroe_ids">t.id in ($map.in_stroe_ids$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.zmd_id_eq">a.id in ( select user_id from konka_xx_zmd_users where zmd_id = #map.zmd_id_eq:DECIMAL# )</isNotEmpty>
	
		<isNotEmpty prepend=" and " property="map.zmd_user_id">
			<isNotEmpty prepend=" and " property="map.user_id_str">
			( id in (
              select distinct (audit_user_id)
                from konka_xx_zmd_audit_user_his
               where zmd_user_id = #map.zmd_user_id:DECIMAL#
              )
              or id in($map.user_id_str$)
			)
			</isNotEmpty>
		</isNotEmpty>
	</sql>
	
	<!-- Ren,zhong 2012-03-16 Begin -->
	<select id="selectPeProdUserResult" resultMap="peProdUserResult" parameterClass="peProdUser" >
		select * from KONKA_PE_PROD_USER where 1 = 1 and IS_XX_USER = 0
		<include refid="sf-peProdUser" />
	</select>
	<!-- Ren,zhong 2012-03-16 End -->
	
	<select id="selectPeProdUser" resultMap="peProdUserResultForShowinfo" parameterClass="peProdUser" >
		select a.*,c.dept_name,c.dept_id as par_dept_ids ,c.dept_type,c.par_id from KONKA_PE_PROD_USER a  left join konka_dept c on c.dept_id = a.dept_id
		 where 1 = 1 and IS_XX_USER = 0
		<include refid="sf-peProdUser" />
	</select>
	
	<select id="selectPeProdUserList" resultMap="peProdUserResultForList" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_PE_PROD_USER t where 1 = 1 and t.IS_XX_USER = 0
		<include refid="sf-peProdUser" />
		order by t.IS_DEL asc, t.ID desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectPeProdUserListForGroup" resultMap="peProdUserForGroup" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select aa.id as user_id ,aa.user_name as user_names from konka_pe_prod_user aa 
       		left join konka_pe_role_user bb on aa.id = bb.user_id
       		where 1 = 1
       	<isNotEmpty prepend=" and " property="map.user_role_is_not_188">bb.role_id != 188 </isNotEmpty>
       	<isNotEmpty prepend=" and " property="map.user_name_is_not_null">aa.USER_NAME is not null</isNotEmpty>
       	<isNotEmpty prepend=" and " property="dept_id">aa.DEPT_ID = #dept_id:DECIMAL#</isNotEmpty>
       	<isNotEmpty prepend=" and " property="map.user_name_like">(UPPER(aa.USER_NAME) like '%' || UPPER(#map.user_name_like:VARCHAR#) || '%')</isNotEmpty>
       	<isNotEmpty prepend=" and " property="map.role_id">bb.ROLE_ID = #map.role_id:VARCHAR#</isNotEmpty>
       	 group by aa.id,aa.user_name 
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- Hu,Hao 2013-07-03 -->
	<select id="selectPeProdUserForUserNameList" resultMap="peProdUserResultForList" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_PE_PROD_USER t where 1 = 1 and is_del = 0
		<isNotEmpty prepend=" and " property="map.role_ids_not_in">
		t.id in (
		select distinct (user_id)
                from konka_pe_role_user t
               where t.role_id in ($map.role_ids_not_in$)
		)</isNotEmpty>
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectPeProdUserListForShowInfo" resultMap="peProdUserResultForList" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
			SELECT a.*
			  from KONKA_PE_PROD_USER a
			 where 1 = 1
			   and a.IS_XX_USER = 0
			   and a.is_del = 0
			   and a.id in (
			   select ri.user_id  from KONKA_PE_ROLE_USER ri 
			   where ri.role_id=1010
			   <isNotEmpty property="map.getOthers">
			    and ri.user_id not in (select rr.user_id
                                         from KONKA_PARAGON_SHOWMANRE rr
                  )
			</isNotEmpty>
			   )
		<include refid="sf-peProdUser" />
		order by a.IS_DEL asc, a.ID desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectPeProdUserCountForShowInfo" resultClass="long" parameterClass="peProdUser" >
		select count(*) from KONKA_PE_PROD_USER a
			  left join KONKA_PE_ROLE_USER ri
			       on a.id=ri.user_id
			          and ri.role_id=60
			       where 1=1
			   and a.IS_XX_USER = 0
			   and a.is_del=0
			     and a.id not in(
				   select t.user_id  from KONKA_PARAGON_SHOWMANRE t
				)   
		<include refid="sf-peProdUser" />
	</select>

	<select id="selectPeProdUserPaginatedListForShowInfo" resultMap="peProdUserResultForList" parameterClass="peProdUser" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
			SELECT a.*
			  from KONKA_PE_PROD_USER a
			  left join KONKA_PE_ROLE_USER ri
			       on a.id=ri.user_id
			          and ri.role_id=60
			       where 1=1
			   and a.IS_XX_USER = 0
			   and a.is_del=0
			     and a.id not in(
				   select t.user_id  from KONKA_PARAGON_SHOWMANRE t
				)   
		<include refid="sf-peProdUser" />
		order by a.IS_DEL asc, a.ID desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- 根据分公司及角色取用户信息及角色 -->
	<select id="selectPeProdUserWithRoleNameList" resultMap="peProdUserWithRoleName" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select r.role_name, t.*
		  from konka_pe_prod_user t
		  left join konka_pe_role_user ru on ru.user_id = t.id
		  left join konka_pe_role_info r on r.role_id = ru.role_id
		 where 1 = 1
		   and t.IS_XX_USER = 0
		   and t.is_del = 0
		   and t.dept_id in (select a.dept_id
		                       from Konka_Dept a
		                      where 1 = 1
		                      start with a.DEPT_ID = #map.dept_id#
		                     connect by prior a.dept_id = a.par_id)
		   <isNotEmpty prepend=" and " property="map.role_ids">
		    r.role_id in  ($map.role_ids$)
		   </isNotEmpty>
		   <isNotEmpty prepend=" and " property="map.select_ids">
		   t.id in ($map.select_ids$)
		   </isNotEmpty>
		order by  r.role_name,t.user_name
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
    <!-- coding by zhengkun 2012-01-16 -->
    <select id="selectPeProdUserWithRoleList" resultMap="peProdUserWithRoleName" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select r.role_name, t.*
		  from konka_pe_prod_user t
		  left join konka_pe_role_user ru on ru.user_id = t.id
		  left join konka_pe_role_info r on r.role_id = ru.role_id
		 where 1 = 1
		   and t.IS_XX_USER = 0
		   and t.is_del = 0
		   and t.dept_id in (select a.dept_id
		                       from Konka_Dept a
		                      where 1 = 1
		                      start with a.DEPT_ID = #map.dept_id#
		                     connect by prior a.dept_id = a.par_id)
		   <isNotEmpty prepend=" and " property="map.role_ids">
		    r.role_id in  ($map.role_ids$)
		   </isNotEmpty>
		   <isNotEmpty prepend=" and " property="map.select_ids">
		   t.id in ($map.select_ids$)
		   </isNotEmpty>
		   and t.id not in (select t2.id                               
             from konka_xx_zmd       t3,
                  konka_xx_zmd_users t1,
                  konka_pe_prod_user t2,
                  konka_pe_role_info t4,
                  konka_pe_role_user t5
            where t1.zmd_id = t3.zmd_id
              and t1.user_id = t2.id
              and t2.id = t5.user_id
              and t5.role_id = t4.role_id
              and t4.role_id in ($map.role_ids$)
              and t3.dept_id = #map.dept_id#
              and t3.arc_state = 20300
              and t3.is_del = 0)
		order by  r.role_name,t.user_name
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectPeProdUserListForSelectUser" resultMap="peProdUserResultForList" parameterClass="peProdUser">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		<isEmpty property="map.role_id_not_null">
		 select * from(
		</isEmpty>
		select * from KONKA_PE_PROD_USER t where 1 = 1 and t.IS_XX_USER = 0
		<include refid="sf-peProdUser" />
		<isEmpty property="map.role_id_not_null"><![CDATA[ 
	        union
	        select bb.*
	          from (select * from konka_pe_role_user t where t.role_id < 30  ) aa
	          left join konka_pe_prod_user bb on aa.user_id = bb.id 
	         where bb.is_del = 0 and bb.IS_XX_USER = 0 and dept_id in (select dept_id from KONKA_DEPT start with dept_id = 1 connect by prior dept_id = par_id)]]>
			<isNotEmpty prepend=" and " property="map.real_name_like">bb.real_name like '%' || #map.real_name_like:VARCHAR# || '%' </isNotEmpty>
		    <isNotEmpty prepend=" and " property="map.ids_not_in">bb.id not in ($map.ids_not_in$)</isNotEmpty>
		) order by order_value desc,id asc
		</isEmpty>
		) where 1=1
		<isNotEmpty property="map.user_name">
			and user_name=#map.user_name#
		</isNotEmpty>
		<isNotEmpty property="map.dept_id">
			and dept_id=#map.dept_id#
		</isNotEmpty>
		<isNotEmpty property="row.count">
			<![CDATA[and  rownum <= #row.count# ]]>
		</isNotEmpty>
		<isNotEmpty property="map.role_id_not_null">order by order_value desc,id asc</isNotEmpty>
	</select>

	<select id="selectPeProdUserCount" resultClass="long" parameterClass="peProdUser" >
		select count(*) from KONKA_PE_PROD_USER t
		
		<isEmpty prepend=" " property="map.leftJoinKonkaMobileUserGps">
			<isNotEmpty prepend=" , " property="map.is_position_dept">
				(select r.user_id, to_char(wm_concat(r1.role_name)) role_name
			          from KONKA_PE_ROLE_USER r
			          left join KONKA_PE_ROLE_INFO r1
			            on r1.role_id = r.role_id
			         group by r.user_id) r,
			       (select d.dept_id, sys_connect_by_path(d.dept_name, '>>') FULL_NAME
			          from KONKA_DEPT d
			         start with d.DEPT_ID = 0
			        connect by prior d.DEPT_ID = d.par_id) a
			 where r.user_id = t.id
			   and a.dept_id = t.dept_id
			   and t.IS_XX_USER = 0
			   <isNotEmpty prepend=" and " property="is_del">t.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
			</isNotEmpty>
				<!-- 
					<isNotEmpty prepend=" " property="map.is_pec_user">
					and ri.role_id between 1000 and 1100
					</isNotEmpty>
				<isEmpty prepend=" " property="map.is_pec_user">
					<isNotEmpty prepend=" " property="map.is_pe_prod_user">
					and ri.role_id not between 200 and 600
					</isNotEmpty>
					<isEmpty prepend=" " property="map.is_pe_prod_user">
					and ri.role_id  between 200 and 600
					</isEmpty>
	         	</isEmpty>
				 -->
			<isEmpty prepend=" " property="map.is_position_dept">
				where 1 = 1 and t.IS_XX_USER = 0
				<isNotEmpty prepend=" and " property="is_del">t.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
			</isEmpty>
		</isEmpty>
		
		<isNotEmpty prepend=" " property="map.leftJoinKonkaMobileUserGps">
			left join Konka_Mobile_User_Gps t1 on t1.mp_sn = t.link_phone
			where t1.mp_sn is not null and t.IS_XX_USER = 0
		</isNotEmpty>
		
		<include refid="sf-peProdUser" />
		
	</select>

	<select id="selectPeProdUserPaginatedList" resultMap="peProdUserResult" parameterClass="peProdUser" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from KONKA_PE_PROD_USER where 1 = 1 and IS_XX_USER = 0 
		<include refid="sf-peProdUser" />
		order by IS_DEL asc, ID desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<select id="selectpeProdUserWithPositionNameAndFullDeptNamePaginatedList" resultMap="peProdUserWithPositionNameAndFullDeptName"
		parameterClass="peProdUser" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
			SELECT t.*, r.role_name, a.FULL_NAME as FULL_DEPT_NAME
			  from KONKA_PE_PROD_USER t,
			       (select r.user_id, to_char(wm_concat(r1.role_name)) role_name
			          from KONKA_PE_ROLE_USER r
			          left join KONKA_PE_ROLE_INFO r1
			            on r1.role_id = r.role_id
			         group by r.user_id) r,
			       (select d.dept_id, sys_connect_by_path(d.dept_name, '>>') FULL_NAME
			          from KONKA_DEPT d
			         start with d.DEPT_ID = 0
			        connect by prior d.DEPT_ID = d.par_id) a
			 where r.user_id = t.id
			   and a.dept_id = t.dept_id
			   and t.IS_XX_USER = 0
			   <isNotEmpty prepend=" and " property="is_del">t.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<!-- 
				<isNotEmpty prepend=" " property="map.is_pec_user">
				and ri.role_id between 1000 and 1100
				</isNotEmpty>
			<isEmpty prepend=" " property="map.is_pec_user">
				<isNotEmpty prepend=" " property="map.is_pe_prod_user">
				and ri.role_id not between 200 and 600
				</isNotEmpty>
				<isEmpty prepend=" " property="map.is_pe_prod_user">
				and ri.role_id  between 200 and 600
				</isEmpty>
         	</isEmpty>
         	 -->
		<include refid="sf-peProdUser" />
		order by t.order_value asc, t.ID desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<select id="selectPeProdUserWithEntpNameCount" resultClass="long" parameterClass="peProdUser" >
		select count(*) from KONKA_PE_PROD_USER ppu left join KONKA_ENTP_PROD sep on ppu.prod_entp_id = sep.entp_id
		where 1 = 1 AND ppu.is_del = 0 and ppu.IS_XX_USER = 0
		<isNotEmpty property="user_type" prepend=" AND ">ppu.USER_TYPE = #user_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_like">ppu.USER_NAME like '%' || #map.user_name_like:VARCHAR# || '%'
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.entp_name_like">sep.ENTP_NAME like '%' || #map.entp_name_like:VARCHAR# || '%'
		</isNotEmpty>
	</select>

	<select id="selectPeProdUserWithEntpNamePaginatedList" resultMap="peProdUserWithEntpNameResult" parameterClass="peProdUser"
		>
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select ppu.*,sep.entp_name from KONKA_PE_PROD_USER ppu left join KONKA_ENTP_PROD sep on ppu.prod_entp_id = sep.entp_id
		where 1 = 1 AND ppu.is_del = 0 and ppu.IS_XX_USER = 0
		<isNotEmpty property="user_type" prepend=" AND ">ppu.USER_TYPE = #user_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_like">ppu.USER_NAME like '%' || #map.user_name_like:VARCHAR# || '%'
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.entp_name_like">sep.ENTP_NAME like '%' || #map.entp_name_like:VARCHAR# || '%'
		</isNotEmpty>
		<!-- order by ID asc -->
		order by t.IS_DEL asc, t.ID desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	<!--coding by zheng,kun  for KonkaXxZmd  2012-01-09 -->
	<select id="selectXxPeProdUserList" resultMap="peProdUserResultForList" parameterClass="peProdUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_PE_PROD_USER t where 1 = 1 
		<include refid="sf-peProdUser" />
		order by t.IS_DEL asc, t.ID desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!--coding by wang,yang  for KonkaMobile  2012-05-17 -->
	<select id="selectDeptListForSelectUser" resultMap="deptIdForSelectUser" parameterClass="peProdUser">
		<isNotEmpty property="row.count">
			<![CDATA[ select dept_id from ( ]]>
		</isNotEmpty>
		select * from KONKA_PE_PROD_USER t where 1 = 1 and t.IS_XX_USER = 0
		<include refid="sf-peProdUser" />
		<isEmpty property="map.role_id_not_null"><![CDATA[ 
	        union
	        select bb.*
	          from (select * from konka_pe_role_user t where t.role_id < 30  ) aa
	          left join konka_pe_prod_user bb on aa.user_id = bb.id 
	         where bb.is_del = 0 and bb.IS_XX_USER = 0 and dept_id in (select dept_id from KONKA_DEPT start with dept_id = 1 connect by prior dept_id = par_id)]]>
			<isNotEmpty prepend=" and " property="map.real_name_like">bb.real_name like '%' || #map.real_name_like:VARCHAR# || '%' </isNotEmpty>
		    <isNotEmpty prepend=" and " property="map.ids_not_in">bb.id not in ($map.ids_not_in$)</isNotEmpty>
		</isEmpty>
		) where 1=1
		<isNotEmpty property="map.user_name">
			and user_name=#map.user_name#
		</isNotEmpty>
		  group by dept_id
  			order by dept_id
	</select>
	

	<insert id="insertPeProdUser" parameterClass="peProdUser">
		<selectKey resultClass="long" keyProperty="id">select KONKA_PROD_SEQUENCE.nextval as id from dual </selectKey>
		<![CDATA[insert into KONKA_PE_PROD_USER (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>
			<isNotNull prepend="," property="prod_entp_id">PROD_ENTP_ID</isNotNull>
			<isNotNull prepend="," property="user_type">USER_TYPE</isNotNull>
			<isNotNull prepend="," property="user_name">USER_NAME</isNotNull>
			<isNotNull prepend="," property="pass_word">PASS_WORD</isNotNull>
			<isNotNull prepend="," property="real_name">REAL_NAME</isNotNull>
			<isNotNull prepend="," property="link_tel">LINK_TEL</isNotNull>
			<isNotNull prepend="," property="link_addr">LINK_ADDR</isNotNull>
			<isNotNull prepend="," property="email">EMAIL</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE</isNotNull>
			<isNotNull prepend="," property="add_user_id">ADD_USER_ID</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>
			<isNotNull prepend="," property="department">DEPARTMENT</isNotNull>
			<isNotNull prepend="," property="chargeman">CHARGEMAN</isNotNull>
			<isNotNull prepend="," property="is_chapter">IS_CHAPTER</isNotNull>
			<isNotNull prepend="," property="dept_id">DEPT_ID</isNotNull>
			<isNotNull prepend="," property="par_dept_id">PAR_DEPT_ID</isNotNull>
			<isNotNull prepend="," property="leader_id">LEADER_ID</isNotNull>
			<isNotNull prepend="," property="position_id">POSITION_ID</isNotNull>
			<isNotNull prepend="," property="sex">SEX</isNotNull>
			<isNotNull prepend="," property="birthday">BIRTHDAY</isNotNull>
			<isNotNull prepend="," property="p_index">P_INDEX</isNotNull>
			<isNotNull prepend="," property="link_post">LINK_POST</isNotNull>
			<isNotNull prepend="," property="link_phone">LINK_PHONE</isNotNull>
			<isNotNull prepend="," property="link_qq">LINK_QQ</isNotNull>
			<isNotNull prepend="," property="link_msn">LINK_MSN</isNotNull>
			<isNotNull prepend="," property="add_e_user_id">ADD_E_USER_ID</isNotNull>
			<isNotNull prepend="," property="login_count">LOGIN_COUNT</isNotNull>
			<isNotNull prepend="," property="last_login_ip">LAST_LOGIN_IP</isNotNull>
			<isNotNull prepend="," property="last_login_time">LAST_LOGIN_TIME</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE</isNotNull>
			<isNotNull prepend="," property="is_xx_user">IS_XX_USER</isNotNull>
			<isNotNull prepend="," property="job_id">JOB_ID</isNotNull>
			<isNotNull prepend="," property="cust_id">CUST_ID</isNotNull>
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prod_entp_id">#prod_entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="user_type">#user_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="user_name">#user_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pass_word">#pass_word:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="real_name">#real_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_tel">#link_tel:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_addr">#link_addr:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="email">#email:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">#add_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="add_user_id">#add_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="department">#department:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="chargeman">#chargeman:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_chapter">#is_chapter:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="dept_id">#dept_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="par_dept_id">#par_dept_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="leader_id">#leader_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="position_id">#position_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="sex">#sex:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="birthday">#birthday:DATETIME#</isNotNull>
			<isNotNull prepend="," property="p_index">#p_index:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="link_post">#link_post:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_phone">#link_phone:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_qq">#link_qq:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_msn">#link_msn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_e_user_id">#add_e_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="login_count">#login_count:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="last_login_ip">#last_login_ip:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="last_login_time">#last_login_time:DATE#</isNotNull>
			<isNotNull prepend="," property="order_value">#order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_xx_user">#is_xx_user:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="job_id">#job_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="cust_id">#cust_id:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updatePeProdUser" parameterClass="PeProdUser">
		update KONKA_PE_PROD_USER
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prod_entp_id">PROD_ENTP_ID = #prod_entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="user_type">USER_TYPE = #user_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="user_name">USER_NAME = #user_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pass_word">PASS_WORD = #pass_word:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="real_name">REAL_NAME = #real_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_tel">LINK_TEL = #link_tel:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_addr">LINK_ADDR = #link_addr:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="email">EMAIL = #email:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:DATETIME#</isNotNull>
			<isNotNull prepend="," property="add_user_id">ADD_USER_ID = #add_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL = #is_del:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="department">DEPARTMENT = #department:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="chargeman">CHARGEMAN = #chargeman:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_chapter">IS_CHAPTER = #is_chapter:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="dept_id">DEPT_ID = #dept_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="par_dept_id">PAR_DEPT_ID = #par_dept_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="leader_id">LEADER_ID = #leader_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="position_id">POSITION_ID = #position_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="sex">SEX = #sex:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="birthday">BIRTHDAY = #birthday:DATE#</isNotNull>
			<isNotNull prepend="," property="p_index">P_INDEX = #p_index:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="link_post">LINK_POST = #link_post:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_phone">LINK_PHONE = #link_phone:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_qq">LINK_QQ = #link_qq:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="link_msn">LINK_MSN = #link_msn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_e_user_id">ADD_E_USER_ID = #add_e_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="login_count">LOGIN_COUNT = #login_count:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="last_login_ip">LAST_LOGIN_IP = #last_login_ip:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="last_login_time">LAST_LOGIN_TIME = #last_login_time:DATE#</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_xx_user">IS_XX_USER = #is_xx_user:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="job_id">JOB_ID = #job_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cust_id">CUST_ID = #cust_id:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deletePeProdUser" parameterClass="PeProdUser">
		update KONKA_PE_PROD_USER set IS_DEL = 1 where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>
	<!-- 部门管理页面查看用户列表 -->
	<resultMap id="konkaUserResultForListWithDeptName" class="PeProdUser" extends="peProdUserResultForList">
		<result column="DEPT_NAME" property="map.k_dept_name" jdbcType="VARCHAR" />
		<result column="DEPT_TYPE" property="map.k_dept_type" jdbcType="DECIMAL" />
		<result column="ROLE_ID" property="map.role_id" jdbcType="VARCHAR" />
		<!-- <result column="LEADER_DEPT" property="map.leader_dept" jdbcType="VARCHAR" /> <result column="IS_LEADER" property="map.is_leader" 
			jdbcType="DECIMAL" /> -->
	</resultMap>

	<select id="selectKonkaUserListWithDeptNameForResultCount" resultClass="long" parameterClass="peProdUser"
		>
		select count(*) from (SELECT a.*,ro.role_id,b.dept_name,b.dept_type
		FROM KONKA_PE_PROD_USER a
		LEFT JOIN (select user_id, to_char(wm_concat(role_id)) role_id from KONKA_PE_ROLE_USER group by user_id) ro ON ro.user_id = a.id
		LEFT JOIN KONKA_DEPT b ON b.dept_id = a.dept_id
		where a.dept_id in (select dept_id from KONKA_DEPT c
		<isNotEmpty prepend=" " property="map.dept_id">START WITH c.DEPT_ID = #map.dept_id#</isNotEmpty>
		CONNECT BY prior c.DEPT_ID = c.par_id) )
		where 1 = 1 and IS_XX_USER = 0 
		<isNotEmpty prepend=" and " property="map.ywy_role_id">
	         role_id =#map.ywy_role_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_name_like">
	         REAL_NAME like '%' || #map.ywy_name_like:VARCHAR# || '%'
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_phone">
	         LINK_PHONE = #map.ywy_phone:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="prod_entp_id">PROD_ENTP_ID = #prod_entp_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		order by dept_type asc, dept_id asc,id asc
	</select>

	<select id="selectKonkaUserListWithDeptNameForResultList" resultMap="konkaUserResultForListWithDeptName"
		parameterClass="PeProdUser" >
		<isEmpty prepend=" " property="map.pager_true">
			<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" " property="map.pager_true">
		  <![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		</isNotEmpty>
		select * from (SELECT a.*,ro.role_id,b.dept_name,b.dept_type
		FROM KONKA_PE_PROD_USER a
		LEFT JOIN (select user_id, to_char(wm_concat(role_id)) role_id from KONKA_PE_ROLE_USER group by user_id) ro ON ro.user_id = a.id
		LEFT JOIN KONKA_DEPT b ON b.dept_id = a.dept_id
		where a.dept_id in (select dept_id from KONKA_DEPT c
		<isNotEmpty prepend=" " property="map.dept_id">START WITH c.DEPT_ID = #map.dept_id#</isNotEmpty>
		CONNECT BY prior c.DEPT_ID = c.par_id) )
		where 1 = 1 and IS_XX_USER = 0
		<isNotEmpty prepend=" and " property="map.ywy_role_id">
	         role_id =#map.ywy_role_id#
		</isNotEmpty> 
		<isNotEmpty prepend=" and " property="map.ywy_name_like">
	         REAL_NAME like '%' || #map.ywy_name_like:VARCHAR# || '%'
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_phone">
	         LINK_PHONE = #map.ywy_phone:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="prod_entp_id">PROD_ENTP_ID = #prod_entp_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		order by dept_type asc, dept_id asc,id asc
		<isEmpty prepend=" " property="map.pager_true">
			<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend=" " property="map.pager_true">
		     <![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
		</isNotEmpty>

	</select>
	<!-- 部门管理页面查看用户列表 -->

	<!-- 修改部门信息页面【部门领导人】下拉列表信息 -->
	<resultMap id="konkaUserListWithDeptNameForLeaderResultList" class="PeProdUser" extends="peProdUserResultForList">
		<result column="USER_NAME_DEPT" property="map.user_name_dept" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectKonkaUserListWithDeptNameForLeaderResultList" resultMap="konkaUserListWithDeptNameForLeaderResultList"
		parameterClass="PeProdUser" >
		select * from (select u.*,
		u.user_name || '【' ||d.dept_name||'】' as user_name_dept,
		d.LEADER_USER_ID,d.dept_id AS konka_dept_id
		from KONKA_PE_PROD_USER u
		left join konka_dept d
		on LEADER_USER_ID = ID
		order by d.dept_id, d.dept_type asc)
		where 1 = 1 and IS_XX_USER = 0
		<include refid="sf-peProdUser" />
		<!-- order by ID asc -->
	</select>
	<!-- 修改部门信息页面【部门领导人】下拉列表信息 -->
</sqlMap>