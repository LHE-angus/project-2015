<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="KonkaMobileSailData">

	<typeAlias alias="konkaMobileSailData" type="com.ebiz.mmt.domain.KonkaMobileSailData" />
	<typeAlias alias="konkaStoreTaskFinishReport"
		type="com.ebiz.mmt.domain.KonkaStoreTaskFinishReport" />

	<resultMap id="konkaStoreTaskFinishReportResult" class="konkaStoreTaskFinishReport">
		<result property="deptId" column="DEPT_ID" jdbcType="VARCHAR" />
		<result property="deptSn" column="DEPT_SN" jdbcType="VARCHAR" />
		<result property="deptName" column="DEPT_NAME" jdbcType="VARCHAR" />
		<result property="storeId" column="STORE_ID" jdbcType="VARCHAR" />
		<result property="storeName" column="STORE_NAME" jdbcType="VARCHAR" />
		<result property="storeType" column="STORE_TYPE" jdbcType="VARCHAR" />
		<result property="nums" column="s_num" jdbcType="VARCHAR" />
		<result property="prices" column="s_price" jdbcType="VARCHAR" />
		<result property="tfp" column="tfp" jdbcType="VARCHAR" />
		<result property="taskMoney" column="TASK_MONEY" jdbcType="VARCHAR" />
		<result property="storerank" column="storerank" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaMobileSailDataResult" class="konkaMobileSailData">
		<result property="id" column="ID" jdbcType="DECIMAL" />
		<result property="pct_code" column="pct_code" jdbcType="VARCHAR" />
		<result property="dept_id" column="DEPT_ID" jdbcType="DECIMAL" />
		<result property="dept_name" column="DEPT_NAME" jdbcType="VARCHAR" />
		<result property="subcomp_id" column="SUBCOMP_ID" jdbcType="DECIMAL" />
		<result property="subcomp_name" column="SUBCOMP_NAME" jdbcType="VARCHAR" />
		<result property="office_id" column="OFFICE_ID" jdbcType="DECIMAL" />
		<result property="office_name" column="OFFICE_NAME" jdbcType="VARCHAR" />
		<result property="measure_id" column="MEASURE_ID" jdbcType="DECIMAL" />
		<result property="measure_name" column="MEASURE_NAME" jdbcType="VARCHAR" />
		<result property="category_id" column="CATEGORY_ID" jdbcType="DECIMAL" />
		<result property="category_name" column="CATEGORY_NAME"
			jdbcType="VARCHAR" />
		<result property="model_id" column="MODEL_ID" jdbcType="DECIMAL" />
		<result property="model_name" column="MODEL_NAME" jdbcType="VARCHAR" />
		<result property="all_price" column="ALL_PRICE" jdbcType="DECIMAL" />
		<result property="single_price" column="SINGLE_PRICE" jdbcType="DECIMAL" />
		<result property="price_ref" column="PRICE_REF" jdbcType="DECIMAL" />
		<result property="num" column="NUM" jdbcType="DECIMAL" />
		<result property="report_id" column="REPORT_ID" jdbcType="DECIMAL" />
		<result property="report_name" column="REPORT_NAME" jdbcType="VARCHAR" />
		<result property="report_date" column="REPORT_DATE" jdbcType="DATETIME" />
		<result property="realname" column="REALNAME" jdbcType="VARCHAR" />
		<result property="phonenum" column="PHONENUM" jdbcType="VARCHAR" />
		<result property="addresss" column="ADDRESSS" jdbcType="VARCHAR" />
		<result property="mastercode" column="MASTERCODE" jdbcType="VARCHAR" />
		<result property="status" column="STATUS" jdbcType="DECIMAL" />
		<result property="memo" column="MEMO" jdbcType="VARCHAR" />
		<result property="sale_date" column="SALE_DATE" jdbcType="DATETIME" />
		<result property="deduct" column="DEDUCT" jdbcType="DECIMAL" />
		<result property="rule_id" column="RULE_ID" jdbcType="DECIMAL" />
		<result property="data_source" column="DATA_SOURCE" jdbcType="DECIMAL" />
		<result property="is_del" column="IS_DEL" jdbcType="DECIMAL" />
		<result property="r_sn" column="R_SN" jdbcType="VARCHAR" />
		<result column="CUST_SUBCOMP_ID" property="cust_subcomp_id"
			jdbcType="DECIMAL" />
		<result column="CUST_SUBCOMP_NAME" property="cust_subcomp_name"
			jdbcType="VARCHAR" />
		<result column="CUST_OFFICE_ID" property="cust_office_id"
			jdbcType="DECIMAL" />
		<result column="CUST_OFFICE_NAME" property="cust_office_name"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_ID" property="customer_id" jdbcType="DECIMAL" />
		<result column="CUSTOMER_R3_CODE" property="customer_r3_code"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="customer_name"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_CATE_ID" property="customer_cate_id"
			jdbcType="DECIMAL" />
		<result column="CUSTOMER_CATE_NAME" property="customer_cate_name"
			jdbcType="VARCHAR" />
		<result column="SDF_R3_CODE" property="sdf_r3_code" jdbcType="VARCHAR" />
		<result column="AUDIT_STATE" property="audit_state" jdbcType="DECIMAL" />
		<result column="AUDIT_DATE" property="audit_date" jdbcType="TIMESTAMP" />
		<result column="SALE_COST" property="sale_cost" jdbcType="DECIMAL" />
		<result column="CHC_NAME" property="chc_name" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="konkaMobileSailDataResult1" class="konkaMobileSailData">
		<result property="id" column="ID" jdbcType="DECIMAL" />
		<result property="pct_code" column="pct_code" jdbcType="VARCHAR" />
		<result property="dept_id" column="DEPT_ID" jdbcType="DECIMAL" />
		<result property="dept_name" column="DEPT_NAME" jdbcType="VARCHAR" />
		<result property="subcomp_id" column="SUBCOMP_ID" jdbcType="DECIMAL" />
		<result property="subcomp_name" column="SUBCOMP_NAME" jdbcType="VARCHAR" />
		<result property="office_id" column="OFFICE_ID" jdbcType="DECIMAL" />
		<result property="office_name" column="OFFICE_NAME" jdbcType="VARCHAR" />
		<result property="measure_id" column="MEASURE_ID" jdbcType="DECIMAL" />
		<result property="measure_name" column="MEASURE_NAME" jdbcType="VARCHAR" />
		<result property="category_id" column="CATEGORY_ID" jdbcType="DECIMAL" />
		<result property="category_name" column="CATEGORY_NAME"
			jdbcType="VARCHAR" />
		<result property="model_id" column="MODEL_ID" jdbcType="DECIMAL" />
		<result property="model_name" column="MODEL_NAME" jdbcType="VARCHAR" />
		<result property="all_price" column="ALL_PRICE" jdbcType="DECIMAL" />
		<result property="single_price" column="SINGLE_PRICE" jdbcType="DECIMAL" />
		<result property="num" column="NUM" jdbcType="DECIMAL" />
		<result property="report_id" column="REPORT_ID" jdbcType="DECIMAL" />
		<result property="report_name" column="REPORT_NAME" jdbcType="VARCHAR" />
		<result property="report_date" column="REPORT_DATE" jdbcType="DATETIME" />
		<result property="realname" column="REALNAME" jdbcType="VARCHAR" />
		<result property="phonenum" column="PHONENUM" jdbcType="VARCHAR" />
		<result property="addresss" column="ADDRESSS" jdbcType="VARCHAR" />
		<result property="mastercode" column="MASTERCODE" jdbcType="VARCHAR" />
		<result property="status" column="STATUS" jdbcType="DECIMAL" />
		<result property="memo" column="MEMO" jdbcType="VARCHAR" />
		<result property="sale_date" column="SALE_DATE" jdbcType="DATETIME" />
		<result property="deduct" column="DEDUCT" jdbcType="DECIMAL" />
		<result property="rule_id" column="RULE_ID" jdbcType="DECIMAL" />
		<result property="data_source" column="DATA_SOURCE" jdbcType="DECIMAL" />
		<result property="is_del" column="IS_DEL" jdbcType="DECIMAL" />
		<result property="r_sn" column="R_SN" jdbcType="VARCHAR" />
		<result column="CUSTOMER_ID" property="customer_id" jdbcType="DECIMAL" />
		<result column="CUSTOMER_R3_CODE" property="customer_r3_code"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="customer_name"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_CATE_ID" property="customer_cate_id"
			jdbcType="DECIMAL" />
		<result column="CUSTOMER_CATE_NAME" property="customer_cate_name"
			jdbcType="VARCHAR" />
		<result column="SDF_R3_CODE" property="sdf_r3_code" jdbcType="VARCHAR" />
		<result column="CHC_NAME" property="chc_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaMobileSailDataForTopResult" class="konkaMobileSailData">
		<result column="MODEL_ID" property="map.model_id" jdbcType="DECIMAL" />
		<result column="SALE_NUM" property="map.sale_num" jdbcType="DECIMAL" />
		<result column="MAIN_PIC" property="map.main_pic" jdbcType="VARCHAR" />
		<result column="MD_NAME" property="map.md_name" jdbcType="VARCHAR" />
		<result column="PD_DESC" property="map.pd_desc" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaMobileSailDataForSaleNumResult" class="konkaMobileSailData">
		<result column="SALE_NUM" property="map.sale_num" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="konkaMobileSailDataResultForPriceRef1" class="konkaMobileSailData"
		extends="konkaMobileSailDataResult">
		<result column="R3_CODE" property="map.r3_code" jdbcType="VARCHAR" />
		<result column="R3_SHSDF_SN" property="map.r3_shsdf_sn"
			jdbcType="VARCHAR" />
		<result column="R3_KH_NAME" property="map.r3_kh_name" jdbcType="VARCHAR" />
		<result column="MF_SN" property="map.r3_shsdf_sn" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
		<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="KonkaMobileSailDataNumAndMoneyCountResult"
		class="konkaMobileSailData">
		<result column="ALLNUM" property="map.allnum" jdbcType="DECIMAL" />
		<result column="ALLPRICE" property="map.allprice" jdbcType="DECIMAL" />
	</resultMap>



	<resultMap id="konkaMobileSailDataInR3InfoResult" class="konkaMobileSailData"
		extends="konkaMobileSailDataResult">
		<result column="C_COMM" property="map.c_comm" jdbcType="VARCHAR" />
		<result column="C_NAME" property="map.c_name" jdbcType="VARCHAR" />
		<result column="NOW_DATE" property="map.now_date" jdbcType="DATETIME" />
		<result column="JB_NAME" property="map.jb_name" jdbcType="VARCHAR" />
		<result column="R3_SDF_SN" property="map.r3_sdf_sn" jdbcType="VARCHAR" />
		<result column="FAPIAOS" property="map.fapiaos" jdbcType="VARCHAR" />
		<result column="CK_NAME" property="map.ck_name" jdbcType="VARCHAR" />
		<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaMobileSailDataForFgsTopResult" class="konkaMobileSailData">
		<result column="All_PRICE" property="map.all_price" jdbcType="DECIMAL" />
		<result column="NUM" property="map.num" jdbcType="DECIMAL" />
	</resultMap>

	<sql id="sf-konkaMobileSailData">
		<isNotEmpty prepend=" and " property="id">a.ID = #id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="pct_code">a.PCT_CODE =
			#pct_code:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_id">a.DEPT_ID =
			#dept_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_name">a.DEPT_NAME =
			#dept_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="subcomp_id">a.SUBCOMP_ID =
			#subcomp_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="subcomp_name">a.SUBCOMP_NAME =
			#subcomp_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="office_id">a.OFFICE_ID =
			#office_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="office_name">a.OFFICE_NAME =
			#office_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="measure_id">a.MEASURE_ID =
			#measure_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="measure_name">a.MEASURE_NAME =
			#measure_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="category_id">a.CATEGORY_ID =
			#category_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="category_name">a.CATEGORY_NAME =
			#category_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="model_id">a.MODEL_ID =
			#model_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="model_name">a.MODEL_NAME =
			#model_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="all_price">a.ALL_PRICE =
			#all_price:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="single_price">a.SINGLE_PRICE =
			#single_price:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="num">a.NUM = #num:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="report_id">a.REPORT_ID =
			#report_id:DATETIME#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="report_name">a.REPORT_NAME =
			#report_name:DATETIME#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="report_date">a.REPORT_DATE =
			#report_date:DATETIME#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="realname">REALNAME =
			#realname:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="phonenum">PHONENUM =
			#phonenum:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="addresss">ADDRESSS =
			#addresss:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="mastercode">MASTERCODE =
			#mastercode:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="status">STATUS =
			#status:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="memo">a.MEMO =
			#memo:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="sale_date">a.SALE_DATE =
			#sale_date:DATETIME#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="deduct">a.DEDUCT =
			#deduct:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="rule_id">a.RULE_ID =
			#rule_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="data_source">a.DATA_SOURCE =
			#data_source:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">a.IS_DEL =
			#is_del:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="r_sn">R_SN = #r_sn:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_id">CUSTOMER_ID =
			#customer_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_r3_code">CUSTOMER_R3_CODE =
			#customer_r3_code:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_name">CUSTOMER_NAME =
			#customer_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_cate_id">CUSTOMER_CATE_ID =
			#customer_cate_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_cate_name">CUSTOMER_CATE_NAME =
			#customer_cate_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="cust_subcomp_id">a.CUST_SUBCOMP_ID =
			#cust_subcomp_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="cust_subcomp_name">a.CUST_SUBCOMP_NAME =
			#cust_subcomp_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="cust_office_id">a.CUST_OFFICE_ID =
			#cust_office_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="cust_office_name">a.CUST_OFFICE_NAME =
			#cust_office_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="sdf_r3_code">a.SDF_R3_CODE =
			#sdf_r3_code:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_state">a.AUDIT_STATE =
			#audit_state:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_date">a.AUDIT_DATE =
			#audit_date:TIMESTAMP#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="sale_cost">a.SALE_COST =
			#sale_cost:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_id">CUSTOMER_R3_CODE =
			#map.r3_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.opr_date_gt"><![CDATA[ REPORT_DATE >= to_date(#map.opr_date_gt# || ' 00:00:00','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.opr_date_lt"><![CDATA[ REPORT_DATE <= to_date(#map.opr_date_lt# || ' 23:59:59','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cust_id"><![CDATA[ 
			a.dept_id in (select t.store_id
                     from KONKA_R3_STORE t
                     left join konka_r3_shop t1
                       on t1.r3_code = t.r3_code
                    where t1.id = #map.cust_id:DECIMAL#)
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_id_start_value"><![CDATA[ 
			a.DEPT_ID in (
					select store_id from konka_r3_store
					where ywy_job_id in (
						select job_id from konka_pe_prod_user u
						where u.dept_id in (
							select dept_id from konka_dept start with dept_id = #map.dept_id_start_value# 
							connect by prior dept_id = par_id 
						)
					)
				)
		]]></isNotEmpty>

		<isNotEmpty prepend=" and " property="map.dept_id_start">
			(
			a.DEPT_ID in (
			select
			store_id from konka_r3_store
			where ywy_job_id in
			(
			select job_id from
			konka_pe_prod_user u
			where u.dept_id in (
			select dept_id from
			konka_dept start with dept_id in (
			SELECT DISTINCT (dept_id)
			FROM
			KONKA_ROLE_DATA_LEVEL
			WHERE role_id IN (SELECT role_id
			FROM
			KONKA_PE_ROLE_USER
			WHERE
			user_id = #map.session_user_id#)
			) or dept_id =
			#map.dept_id_start#
			connect by prior dept_id = par_id
			)
			)
			)
			or
			a.DEPT_ID in
			(
			select store_id from konka_r3_store
			where ywy_job_id =
			#map.filter_by_job_id_eq:VARCHAR#
			or ywzg_job_id =
			#map.filter_by_job_id_eq:VARCHAR#
			or jbjl_job_id =
			#map.filter_by_job_id_eq:VARCHAR#
			)
			or
			a.DEPT_ID in (
			select store_id
			from
			konka_r3_store
			where ywy_job_id in (
			select job_id from
			konka_pe_prod_user u
			where u.dept_id in (
			select dept_id from
			konka_dept start with dept_id = #map.dept_id_start#
			connect by prior
			dept_id = par_id
			)
			)
			)
			)
		</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.filter_by_ywy"><![CDATA[ 
				( a.DEPT_ID in (
				  select store_id from konka_r3_store
					where ywy_job_id = #map.filter_by_job_id_eq:VARCHAR#
					or ywzg_job_id = #map.filter_by_job_id_eq:VARCHAR#
					or jbjl_job_id = #map.filter_by_job_id_eq:VARCHAR#
					) 
					or
					  a.customer_r3_code in (
			            select s.r3_code from konka_r3_shop s
			            left join branch_assign s1 on s1.KONKA_R3_ID = s.ID
			            where s1.USER_ID = #map.session_user_id#
			          )
				)
		]]></isNotEmpty>


		<isNotEmpty prepend=" and " property="map.role_user_id"><![CDATA[ 
			a.SUBCOMP_ID in (SELECT DISTINCT (dept_id)
  							FROM KONKA_ROLE_DATA_LEVEL
 							WHERE role_id IN (SELECT role_id
                     			FROM KONKA_PE_ROLE_USER
                    			WHERE user_id = #map.role_user_id#))
		]]></isNotEmpty>

		<isNotEmpty prepend=" and " property="map.customer_name_like">a.customer_name like
			'%'|| #map.customer_name_like# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_name_like">a.dept_name like '%'||
			#map.dept_name_like# ||'%'</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.report_date_begin"><![CDATA[ a.REPORT_DATE >= to_date(#map.report_date_begin#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.report_date_end"><![CDATA[ a.REPORT_DATE <= to_date(#map.report_date_end#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.channel_a_name_like">a.channel_a_name like
			'%'|| #map.channel_a_name_like# ||'%'
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.subcomp_name_like">a.subcomp_name like
			'%'|| #map.subcomp_name_like# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.office_name_like">a.office_name like
			'%'|| #map.office_name_like# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_name_like">a.category_name like
			'%'|| #map.category_name_like# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_like">a.model_name like
			'%'|| #map.model_name_like# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.report_name_like">a.report_name like
			'%'|| #map.report_name_like# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.num_price_not_null"><![CDATA[ (a.num <> 0 or a.all_price <> 0) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code_is_not_null"><![CDATA[ a.CUSTOMER_r3_code IS NOT NULL ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.num_price_not_0"><![CDATA[ (a.num <> 0 and a.all_price <> 0) ]]></isNotEmpty>

		<isNotEmpty prepend=" and " property="map.date_begin">
		<![CDATA[a.REPORT_DATE >= to_date(#map.date_begin#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_end">
		<![CDATA[a.REPORT_DATE <= to_date(#map.date_end#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.startime">
		<![CDATA[a.SALE_DATE >= to_date(#map.startime#||'00:00:00','yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.endtime">
		<![CDATA[a.SALE_DATE <= to_date(#map.endtime#||'23:59:59','yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>

		<isNotEmpty prepend=" and " property="map.yw_name">
			a.DEPT_ID in (
			select
			aa.store_id
			from konka_r3_store aa left join
			konka_r3_shop bb on
			aa.r3_code = bb.r3_code
			left join konka_pe_prod_user cc on bb.id =
			cc.cust_id
			where cc.real_name =
			#map.yw_name:VARCHAR#
			)
		</isNotEmpty>
		<!-- 用这个包围的这段代码个人认为是没必要要的。因为这个主表中有个字段就是门店的名称，而这里竟然先去门店的表中筛选一下再来比较门店的id，完全是浪费时间浪费效率的，所以我注释了，有问题请找王坤林 
			2014-11-08 -->
		<!-- <isNotEmpty prepend=" and " property="map.store_name_like"> -->
		<!-- a.DEPT_ID in ( -->
		<!-- select aa.store_id -->
		<!-- from konka_r3_store aa where -->
		<!-- aa.store_name like '%'|| #map.store_name_like# ||'%' -->
		<!-- ) -->
		<!-- </isNotEmpty> -->
		<!-- 用这个包围的这段代码个人认为是没必要要的。因为这个主表中有个字段就是门店的名称，而这里竟然先去门店的表中筛选一下再来比较门店的id，完全是浪费时间浪费效率的，所以我注释了，有问题请找王坤林 
			2014-11-08 -->
		<isNotEmpty prepend=" and " property="map.store_name_like"> a.dept_name like
			'%'|| #map.store_name_like# ||'%'</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.c_comm">c.par_index =
			#map.c_comm:VARCHAR#
		</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.dept_id_start_json">
			(
			a.DEPT_ID in (
			select
			store_id from konka_r3_store
			where ywy_job_id in
			(
			select job_id from
			konka_pe_prod_user u
			where u.dept_id in (
			select dept_id from
			konka_dept start with dept_id in (
			SELECT DISTINCT (dept_id)
			FROM
			KONKA_ROLE_DATA_LEVEL
			WHERE role_id IN (SELECT role_id
			FROM
			KONKA_PE_ROLE_USER
			WHERE
			user_id = #map.session_user_id#)
			) or dept_id =
			#map.dept_id_start_json#
			connect by prior dept_id = par_id
			)
			)
			)
			or
			a.DEPT_ID in (
			select store_id from konka_r3_store
			where ywy_job_id =
			#map.filter_by_job_id_eq:VARCHAR#
			or ywzg_job_id =
			#map.filter_by_job_id_eq:VARCHAR#
			or jbjl_job_id =
			#map.filter_by_job_id_eq:VARCHAR#
			)
			or
			a.DEPT_ID in (
			select store_id
			from
			konka_r3_store
			where ywy_job_id in (
			select job_id from
			konka_pe_prod_user u
			where u.dept_id in (
			select dept_id from
			konka_dept start with dept_id = #map.dept_id_start_json#
			connect by
			prior dept_id = par_id
			)
			)
			)
			)
		</isNotEmpty>

		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq_json"><![CDATA[ 
				( a.DEPT_ID in (
				  select store_id from konka_r3_store
					where ywy_job_id = #map.filter_by_ywy_id_eq_json#
					or ywzg_job_id = #map.filter_by_ywy_id_eq_json#
					or jbjl_job_id = #map.filter_by_ywy_id_eq_json#
					) 
					or
					  a.customer_r3_code in (
			            select s.r3_code from konka_r3_shop s
			            left join branch_assign s1 on s1.KONKA_R3_ID = s.ID
			            where s1.USER_ID = #map.session_user_id#
			          )
				)
		]]>
		</isNotEmpty>

	</sql>

	<select id="selectKonkaMobileSailData" resultMap="konkaMobileSailDataResult"
		parameterClass="konkaMobileSailData">
		select a.* from KONKA_MOBILE_SAIL_DATA a where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
	</select>

	<select id="selectKonkaMobileSailDataList" resultMap="konkaMobileSailDataResult"
		parameterClass="konkaMobileSailData">
		<isNotEmpty property="row.count"><![CDATA[ select * from ( ]]></isNotEmpty>
		select a.* from KONKA_MOBILE_SAIL_DATA a where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		order by a.ID desc
		<isNotEmpty property="row.count"><![CDATA[ ) where rownum<=#row.count# ]]></isNotEmpty>
	</select>

	<select id="selectKonkaMobileSailDataForTop10List" resultMap="konkaMobileSailDataForTopResult"
		parameterClass="konkaMobileSailData">
	<![CDATA[	SELECT tt.*, b.MAIN_PIC, b.MD_NAME,b.PD_DESC
  FROM    (SELECT a.MODEL_ID, sum (a.NUM) AS sale_num
             FROM KONKA_MOBILE_SAIL_DATA a ]]>
		WHERE 1=1
		<include refid="sf-konkaMobileSailData" />
         <![CDATA[         AND a.SALE_DATE >= sysdate - 1 YEAR
                  AND a.STATUS = 0
           GROUP BY a.MODEL_ID
           ORDER BY sum (a.NUM) DESC) tt
       LEFT JOIN
          KONKA_PE_PD_MODEL b
       ON tt.MODEL_ID = b.PD_ID
 WHERE rownum <= 10 ]]>
	</select>

	<select id="selectKonkaMobileSailDataForSaleNumList" resultMap="konkaMobileSailDataForSaleNumResult"
		parameterClass="konkaMobileSailData">
	<![CDATA[	SELECT sum (a.NUM) AS sale_num
 		 FROM KONKA_MOBILE_SAIL_DATA a ]]>
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
     <![CDATA[  AND a.SALE_DATE >= sysdate - 1 YEAR
       AND a.STATUS = 0 ]]>
	</select>


	<select id="selectKonkaMobileSailDataForExportList" resultMap="konkaMobileSailDataResultForPriceRef1"
		parameterClass="konkaMobileSailData">
		<isNotEmpty property="row.count"><![CDATA[ select * from ( ]]></isNotEmpty>
		select a.*,d.r3_code,d.kh_name
		r3_kh_name,d.r3_shsdf_sn,d.store_name,d.mf_sn,d.dept_name from
		KONKA_MOBILE_SAIL_DATA a
		left join konka_r3_store d on a.dept_id
		=d.store_id
		where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend="  " property="map.not_Show">
				<![CDATA[$map.not_Show$]]>
		</isNotEmpty>
		order by a.ID desc
		<isNotEmpty property="row.count"><![CDATA[ ) where rownum<=#row.count# ]]></isNotEmpty>
	</select>


	<select id="selectKonkaMobileSailDataToExlList" resultMap="konkaMobileSailDataResult1"
		parameterClass="konkaMobileSailData">
		<isNotEmpty property="row.count"><![CDATA[ select * from ( ]]></isNotEmpty>
		select * from V_KONKA_IMP_SAIL_DATA_NEW where 1=1
		<isNotEmpty property="row.count"><![CDATA[ ) where rownum<=#row.count# ]]></isNotEmpty>
	</select>

	<select id="selectKonkaMobileSailDataCount" resultClass="long"
		parameterClass="konkaMobileSailData">
		SELECT count(1)
		FROM KONKA_MOBILE_SAIL_DATA a
		LEFT JOIN
		konka_pe_pd_model b
		ON a.model_name = b.md_name
		LEFT JOIN
		KONKA_CATEGORY
		c
		ON a.CUSTOMER_CATE_ID = c.C_INDEX
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend="  " property="map.not_Show">
			<![CDATA[$map.not_Show$]]>
		</isNotEmpty>
	</select>

	<select id="selectKonkaMobileSailDataCountForFourWeek"
		resultClass="long" parameterClass="konkaMobileSailData">
		SELECT sum(num)
		FROM KONKA_MOBILE_SAIL_DATA a
		LEFT JOIN
		konka_pe_pd_model b
		ON a.model_name = b.md_name
		LEFT JOIN
		KONKA_CATEGORY
		c
		ON a.CUSTOMER_CATE_ID = c.C_INDEX
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
	</select>

	<select id="selectKonkaMobileSailDataPaginatedList" resultMap="konkaMobileSailDataResultForPriceRef1"
		parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*,d.r3_code,d.kh_name
		r3_kh_name,d.r3_shsdf_sn,d.store_name,d.mf_sn,d.dept_name
		from
		KONKA_MOBILE_SAIL_DATA a
		left join konka_r3_store d on
		a.dept_id
		=d.store_id
		where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend="  " property="map.not_Show">
				<![CDATA[$map.not_Show$]]>
		</isNotEmpty>
		<isNotEmpty prepend="  " property="map.order_by_date_store_price_desc">
			order by
			to_char(a.report_date,'yyyy-mm-dd') desc,all_price desc,
			dept_name
			desc
		</isNotEmpty>
		<isEmpty prepend="  " property="map.order_by_date_store_price_desc">
			<!-- order by a.report_date desc -->
			order by a.ID desc
		</isEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<select id="selectKonkaMobileSailDataInR3InfoPaginatedList"
		resultMap="konkaMobileSailDataInR3InfoResult" parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		SELECT a.*,GET_FAPIAO_BY_LINKID(a.id)
		fapiaos,d.JB_NAME,d.R3_SDF_SN,c.c_comm,c.c_name,d.ck_name,
		(sysdate-2-report_date) as now_date,d.store_name
		FROM
		KONKA_MOBILE_SAIL_DATA a
		LEFT JOIN KONKA_CATEGORY c
		ON
		a.CUSTOMER_CATE_ID = c.C_INDEX
		LEFT JOIN KONKA_R3_STORE d
		ON
		d.STORE_ID=a.DEPT_ID
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend="  " property="map.not_Show">
			<![CDATA[$map.not_Show$]]>
		</isNotEmpty>
		<!-- order by a.report_date desc -->
		order by a.ID desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>



	<select id="selectKonkaMobileSailDataNumAndMoneyCount"
		resultMap="KonkaMobileSailDataNumAndMoneyCountResult" parameterClass="konkaMobileSailData">
		SELECT sum(a.num) as allnum, sum(all_price) as allprice
		FROM
		KONKA_MOBILE_SAIL_DATA a
		LEFT JOIN konka_pe_pd_model b
		ON a.model_name =
		b.md_name
		LEFT JOIN
		KONKA_CATEGORY c
		ON a.CUSTOMER_CATE_ID = c.C_INDEX
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend="  " property="map.not_Show">
			<![CDATA[$map.not_Show$]]>
		</isNotEmpty>

	</select>

	<select id="selectKonkaMobileSailDataForTerminalMap"
		resultClass="java.util.HashMap" parameterClass="konkaMobileSailData">
		select aa.*,b.*,C.* from (
		SELECT
		a.dept_id,sum(a.num) as allnum,
		sum(all_price) as allprice
		FROM
		KONKA_MOBILE_SAIL_DATA a

		where 1=1
		<include refid="sf-konkaMobileSailData" />
		group by a.dept_id
		) aa right join konka_r3_store b on
		aa.dept_id=b.store_id
		left join Konka_Pindex_Area_Gdp c on b.p_index =
		c.p_index


		<isNotEmpty prepend="  " property="dept_id"><![CDATA[ where b.store_id = #dept_id:DECIMAL#]]>
		</isNotEmpty>


	</select>


	<!-- Wang,KunLin 2014-08-27 广州发票审核 开始 -->
	<select id="selectKonkaMobileSailDataBillFileList" resultMap="konkaMobileSailDataResult"
		parameterClass="konkaMobileSailData">
		<isNotEmpty property="row.count"><![CDATA[ select * from ( ]]></isNotEmpty>
		select a.* from (select listagg(bill_no, ',')
		bill_nos,sail_id,sum(nvl(dec_money,0))
		dec_money,sum(nvl(audit_money,0))
		audit_money,sum(nvl(final_audit_money,0)) final_audit_money from
		konka_mobile_sail_data_bill where adjunct_link_id is not null group by
		sail_id) bill
		right join KONKA_MOBILE_SAIL_DATA a on a.id=bill.sail_id
		where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		order by a.ID desc
		<isNotEmpty property="row.count"><![CDATA[ ) where rownum<=#row.count# ]]></isNotEmpty>
	</select>



	<select id="selectKonkaMobileSailDataAndBillCount" resultClass="long"
		parameterClass="konkaMobileSailData">
		SELECT count(1) from
		KONKA_MOBILE_SAIL_DATA a
		<isEmpty prepend="  " property="map.is_for_audit">
			left
		</isEmpty>
		<isNotEmpty prepend="  " property="map.is_for_audit">
			right
		</isNotEmpty>
		join
		(select listagg(bill_no, ',')
		bill_nos,sail_id,sum(nvl(dec_money,0))
		dec_money,sum(nvl(audit_money,0))
		audit_money,sum(nvl(final_audit_money,0)) final_audit_money from
		konka_mobile_sail_data_bill where 1=1
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_0_4"> -->
		<!-- state in (0,4) -->
		<!-- </isNotEmpty> -->
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_2"> -->
		<!-- ( state = 2 or state > 4 ) -->
		<!-- </isNotEmpty> -->
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_6_10"> -->
		<!-- state in (6,10) -->
		<!-- </isNotEmpty> -->
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_8"> -->
		<!-- state = 8 -->
		<!-- </isNotEmpty> -->
		group by sail_id) bill
		on a.id=bill.sail_id
		LEFT JOIN konka_pe_pd_model
		b
		ON a.model_name =
		b.md_name
		LEFT JOIN
		KONKA_CATEGORY c
		ON
		a.CUSTOMER_CATE_ID = c.C_INDEX
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		<!--待初审的包含上传中和初审未通过的 -->
		<isNotEmpty prepend=" and " property="map.ext_audit_state_0_4">
			a.audit_state in (0,4)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ext_audit_state_2">
			(a.audit_state = 2 or
			a.audit_state > 4 )
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ext_audit_state_6_10">
			a.audit_state in
			(6,10)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ext_audit_state_8">
			a.audit_state = 8
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.having_no_bill">
			a.id not in (select
			sail_id from konka_mobile_sail_data_bill)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
	</select>
	<resultMap id="konkaMobileSailDataAndBillResult" class="konkaMobileSailData"
		extends="konkaMobileSailDataResult">
		<result column="C_COMM" property="map.c_comm" jdbcType="VARCHAR" />
		<result column="C_NAME" property="map.c_name" jdbcType="VARCHAR" />
		<result column="NOW_DATE" property="map.now_date" jdbcType="DATETIME" />
		<result column="JB_NAME" property="map.jb_name" jdbcType="VARCHAR" />
		<result column="R3_SDF_SN" property="map.r3_sdf_sn" jdbcType="VARCHAR" />
		<result column="FAPIAOS" property="map.fapiaos" jdbcType="VARCHAR" />
		<result column="CK_NAME" property="map.ck_name" jdbcType="VARCHAR" />
		<result column="BILL_NOS" property="map.bill_nos" jdbcType="VARCHAR" />
		<result column="DEC_MONEY" property="map.dec_money" jdbcType="VARCHAR" />
		<result column="AUDIT_MONEY" property="map.audit_money"
			jdbcType="VARCHAR" />
		<result column="FINAL_AUDIT_MONEY" property="map.final_audit_money"
			jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectKonkaMobileSailDataAndBillPaginatedList"
		resultMap="konkaMobileSailDataAndBillResult" parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
	<![CDATA[	SELECT a.*,GET_FILES_BY_LINKID_TAB_DEL_MARK(a.id,'KONKA_MOBILE_SAIL_DATA',0) fapiaos,bill.bill_nos,bill.dec_money,bill.audit_money,bill.final_audit_money,]]>
		d.JB_NAME,d.R3_SDF_SN,c.c_comm as
		c_comm,c.c_name,d.ck_name,(sysdate-2-report_date) as now_date
		FROM

		KONKA_MOBILE_SAIL_DATA a
		<isEmpty prepend="  " property="map.is_for_audit">
			left
		</isEmpty>
		<isNotEmpty prepend="  " property="map.is_for_audit">
			right
		</isNotEmpty>
		join
		(select listagg(bill_no, ',')
		bill_nos,sail_id,sum(nvl(dec_money,0))
		dec_money,sum(nvl(audit_money,0))
		audit_money,sum(nvl(final_audit_money,0)) final_audit_money from
		konka_mobile_sail_data_bill where 1=1
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_0_4"> -->
		<!-- state in (0,4) -->
		<!-- </isNotEmpty> -->
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_2"> -->
		<!-- (state = 2 or state > 4 ) -->
		<!-- </isNotEmpty> -->
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_6_10"> -->
		<!-- state in (6,10) -->
		<!-- </isNotEmpty> -->
		<!-- <isNotEmpty prepend=" and " property="map.ext_audit_state_8"> -->
		<!-- state = 8 -->
		<!-- </isNotEmpty> -->
		group by sail_id) bill
		on a.id=bill.sail_id
		LEFT JOIN KONKA_CATEGORY c
		ON a.CUSTOMER_CATE_ID =
		c.C_INDEX
		LEFT JOIN KONKA_R3_STORE d
		ON
		d.STORE_ID=a.DEPT_ID
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		<!--待初审的包含上传中和初审未通过的 -->
		<isNotEmpty prepend=" and " property="map.ext_audit_state_0_4">
			a.audit_state in (0,4)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ext_audit_state_2">
			( a.audit_state = 2 or
			a.audit_state > 4 )
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ext_audit_state_6_10">
			a.audit_state in
			(6,10)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ext_audit_state_8">
			a.audit_state = 8
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.having_no_bill">
			a.id not in (select
			sail_id from konka_mobile_sail_data_bill)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		<!-- order by a.report_date desc -->
		order by a.ID desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>


	<resultMap id="konkaMobileSailDataAndBillForSwitchResult"
		class="konkaMobileSailData">
		<result property="subcomp_id" column="SUBCOMP_ID" jdbcType="DECIMAL" />
		<result property="subcomp_name" column="SUBCOMP_NAME" jdbcType="VARCHAR" />
		<result property="dept_id" column="DEPT_ID" jdbcType="DECIMAL" />
		<result property="dept_name" column="DEPT_NAME" jdbcType="VARCHAR" />
		<result property="map.ywy_job_id" column="YWY_JOB_ID" jdbcType="VARCHAR" />
		<result property="report_id" column="REPORT_ID" jdbcType="DECIMAL" />
		<result property="report_name" column="REPORT_NAME" jdbcType="VARCHAR" />
		<result property="all_price" column="ALL_PRICE" jdbcType="DECIMAL" />
		<result property="map.dec_money" column="DEC_MONEY" jdbcType="DECIMAL" />
		<result property="map.audit_money" column="AUDIT_MONEY"
			jdbcType="DECIMAL" />
		<result property="map.final_audit_money" column="FINAL_AUDIT_MONEY"
			jdbcType="DECIMAL" />
		<result property="num" column="NUM" jdbcType="DECIMAL" />
		<result property="map.sail_ids" column="SAIL_IDS" jdbcType="VARCHAR" />
		<result property="map.bill_ids" column="BILL_IDS" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectkonkaMobileSailDataAndBillForSwitchList"
		resultMap="konkaMobileSailDataAndBillForSwitchResult" parameterClass="konkaMobileSailData">
		SELECT
		a.SUBCOMP_ID,
		max(a.SUBCOMP_NAME) subcomp_name,
		a.DEPT_ID,
		max
		(a.dept_name) dept_name,
		a.report_id report_id,
		max(d.YWY_JOB_ID)
		YWY_JOB_ID,
		max(a.REPORT_NAME) REPORT_NAME,
		sum (a.all_price) all_price,
		sum(bill.dec_money) dec_money,
		sum (bill.audit_money) audit_money,
		sum
		(bill.FINAL_AUDIT_MONEY) final_audit_money,
		sum(a.num) num,
		listagg(a.id,',')
		sail_ids,
		max(bill_ids) bill_ids
		FROM
		(SELECT listagg
		(bill_id, ',') bill_ids,
		listagg
		(bill_no, ',') bill_nos,
		sail_id,
		sum
		(nvl (dec_money, 0)) dec_money,
		sum (nvl (audit_money, 0)) audit_money,
		sum (nvl
		(final_audit_money, 0)) final_audit_money
		FROM
		konka_mobile_sail_data_bill
		where adjunct_link_id is not null
		and state=
		2
		GROUP BY sail_id) bill
		LEFT JOIN KONKA_MOBILE_SAIL_DATA a
		ON a.id =
		bill.sail_id
		LEFT JOIN KONKA_CATEGORY c
		ON a.CUSTOMER_CATE_ID =
		c.C_INDEX
		LEFT JOIN
		KONKA_R3_STORE d
		ON d.STORE_ID = a.DEPT_ID
		WHERE 1 = 1
		AND a.audit_state
		= 2
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		<!-- order by a.report_date desc -->
		GROUP BY a.SUBCOMP_ID,a.DEPT_ID, a.report_id

	</select>


	<select id="selectkonkaMobileSailDataAndBillForSalaryCount"
		resultClass="long" parameterClass="konkaMobileSailData">

		select count(*) from( select dept_id from (
		select
		a.dept_id,a.subcomp_id,a.subcomp_name,a.dept_name,a.report_name,a.report_id,a.customer_r3_code,a.customer_name,
		to_char(a.report_date,'yyyy') yyyy,
		to_char(a.report_date,'mm') mm
		from
		konka_mobile_sail_data_bill b left join konka_mobile_sail_data a on
		a.id=b.sail_id
		LEFT JOIN KONKA_R3_STORE d
		ON
		d.STORE_ID = a.DEPT_ID
		where
		1=1

		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="audit_state">b.state =
			#audit_state:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_job_id_like">d.ywy_job_id like
			'%'||#map.ywy_job_id_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		<!-- order by a.report_date desc -->
		) GROUP BY dept_id,subcomp_id,report_id,customer_r3_code,yyyy,mm)
	</select>



	<select id="selectkonkaMobileSailDataAndBillForSalaryList"
		resultClass="java.util.HashMap" parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select dept_id,subcomp_id,max(subcomp_name)
		subcomp_name,max(dept_name) dept_name,max(ywy_job_id)
		ywy_job_id,max(report_name)
		report_name,report_id,customer_r3_code,max(customer_name),yyyy,mm,
		<!-- sum(dec_money_one) -->
		<!-- dec_money_one, -->
		<!-- sum(dec_money_two) dec_money_two, -->
		<!-- sum(dec_money_three) dec_money_three, -->
		<!-- sum(dec_money_four) -->
		<!-- dec_money_four, -->
		<!-- sum(dec_money_five) dec_money_five, -->
		<!-- sum(dec_money_six) dec_money_six, -->
		<!-- sum(dec_money_seven) -->
		<!-- dec_money_seven, -->
		<!-- sum(dec_money_eight) dec_money_eight, -->
		<!-- sum(dec_money_nine) dec_money_nine, -->
		<!-- sum(dec_money_ten) -->
		<!-- dec_money_ten, -->
		<!-- sum(dec_money_eleven) dec_money_eleven, -->
		<!-- sum(dec_money_twelve) dec_money_twelve, -->
		<!-- sum(audit_money_one) -->
		<!-- audit_money_one, -->
		<!-- sum(audit_money_two) audit_money_two, -->
		<!-- sum(audit_money_three) audit_money_three, -->
		<!-- sum(audit_money_four) -->
		<!-- audit_money_four, -->
		<!-- sum(audit_money_five) audit_money_five, -->
		<!-- sum(audit_money_six) audit_money_six, -->
		<!-- sum(audit_money_seven) -->
		<!-- audit_money_seven, -->
		<!-- sum(audit_money_eight) audit_money_eight, -->
		<!-- sum(audit_money_nine) audit_money_nine, -->
		<!-- sum(audit_money_ten) audit_money_ten, -->
		<!-- sum(audit_money_eleven) audit_money_eleven, -->
		<!-- sum(audit_money_twelve) -->
		<!-- audit_money_twelve, -->
		sum(final_audit_money_one) final_audit_money_one,
		sum(final_audit_money_two) final_audit_money_two,
		sum(final_audit_money_three) final_audit_money_three,
		sum(final_audit_money_four) final_audit_money_four,
		sum(final_audit_money_five) final_audit_money_five,
		sum(final_audit_money_six) final_audit_money_six,
		sum(final_audit_money_seven) final_audit_money_seven,
		sum(final_audit_money_eight) final_audit_money_eight,
		sum(final_audit_money_nine) final_audit_money_nine,
		sum(final_audit_money_ten) final_audit_money_ten,
		sum(final_audit_money_eleven) final_audit_money_eleven,
		sum(final_audit_money_twelve) final_audit_money_twelve from(
		select
		a.dept_id,a.subcomp_id,a.subcomp_name,a.dept_name,a.report_name,a.report_id,a.customer_r3_code,a.customer_name,d.ywy_job_id,
		to_char(a.report_date,'yyyy') yyyy,
		to_char(a.report_date,'mm') mm,
		<!-- nvl(decode(to_char(a.report_date,'mm'),'01',b.dec_money),0) dec_money_one, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'02',b.dec_money),0) dec_money_two, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'03',b.dec_money),0) dec_money_three, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'04',b.dec_money),0) dec_money_four, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'05',b.dec_money),0) dec_money_five, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'06',b.dec_money),0) dec_money_six, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'07',b.dec_money),0) dec_money_seven, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'08',b.dec_money),0) dec_money_eight, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'09',b.dec_money),0) dec_money_nine, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'10',b.dec_money),0) dec_money_ten, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'11',b.dec_money),0) dec_money_eleven, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'12',b.dec_money),0) dec_money_twelve, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'01',b.audit_money),0) audit_money_one, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'02',b.audit_money),0) audit_money_two, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'03',b.audit_money),0) audit_money_three, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'04',b.audit_money),0) audit_money_four, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'05',b.audit_money),0) audit_money_five, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'06',b.audit_money),0) audit_money_six, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'07',b.audit_money),0) audit_money_seven, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'08',b.audit_money),0) audit_money_eight, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'09',b.audit_money),0) audit_money_nine, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'10',b.audit_money),0) audit_money_ten, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'11',b.audit_money),0) audit_money_eleven, -->
		<!-- nvl(decode(to_char(a.report_date,'mm'),'12',b.audit_money),0) audit_money_twelve, -->
		nvl(decode(to_char(a.report_date,'mm'),'01',b.final_audit_money),0)
		final_audit_money_one,
		nvl(decode(to_char(a.report_date,'mm'),'02',b.final_audit_money),0)
		final_audit_money_two,
		nvl(decode(to_char(a.report_date,'mm'),'03',b.final_audit_money),0)
		final_audit_money_three,
		nvl(decode(to_char(a.report_date,'mm'),'04',b.final_audit_money),0)
		final_audit_money_four,
		nvl(decode(to_char(a.report_date,'mm'),'05',b.final_audit_money),0)
		final_audit_money_five,
		nvl(decode(to_char(a.report_date,'mm'),'06',b.final_audit_money),0)
		final_audit_money_six,
		nvl(decode(to_char(a.report_date,'mm'),'07',b.final_audit_money),0)
		final_audit_money_seven,
		nvl(decode(to_char(a.report_date,'mm'),'08',b.final_audit_money),0)
		final_audit_money_eight,
		nvl(decode(to_char(a.report_date,'mm'),'09',b.final_audit_money),0)
		final_audit_money_nine,
		nvl(decode(to_char(a.report_date,'mm'),'10',b.final_audit_money),0)
		final_audit_money_ten,
		nvl(decode(to_char(a.report_date,'mm'),'11',b.final_audit_money),0)
		final_audit_money_eleven,
		nvl(decode(to_char(a.report_date,'mm'),'12',b.final_audit_money),0)
		final_audit_money_twelve
		from
		konka_mobile_sail_data_bill b left join
		konka_mobile_sail_data a on a.id=b.sail_id
		LEFT JOIN KONKA_R3_STORE d
		ON
		d.STORE_ID = a.DEPT_ID
		where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="audit_state">b.state =
			#audit_state:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_job_id_like">d.ywy_job_id like
			'%'||#map.ywy_job_id_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		<!-- order by a.report_date desc -->
		) GROUP BY dept_id,subcomp_id,report_id,customer_r3_code,yyyy,mm
       <![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<!-- 转单的保存 -->
	<insert id="insertkonkaMobileSailDataAndBillForSwitchSave-lo"
		parameterClass="konkaMobileSailData">
		insert into KONKA_MOBILE_SAIL_DATA_BILL_LO(audit_id,BILL_ID,
		<isNotEmpty prepend="" property="map.oper_user_id">
			OPER_USER_ID,
		</isNotEmpty>
		OPER_DATE,OPER_MONEY,OPER_MEM,OPER_STATE)
		select
		seq_konka_mobile_sail_date_bill_lo.nextval,bill_id,
		<isNotEmpty prepend="" property="map.oper_user_id">
			#map.oper_user_id#,
		</isNotEmpty>
		sysdate,audit_money,'转单',6 from
		KONKA_MOBILE_SAIL_DATA_BILL
		where
		sail_id in (SELECT
		a.id
		FROM KONKA_MOBILE_SAIL_DATA a
		LEFT JOIN
		KONKA_CATEGORY c
		ON a.CUSTOMER_CATE_ID = c.C_INDEX
		LEFT JOIN
		KONKA_R3_STORE d
		ON d.STORE_ID = a.DEPT_ID
		WHERE 1
		= 1 AND a.audit_state
		= 2
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		)

	</insert>
	<update id="upkonkaMobileSailDataAndBillForSwitchSave_bill"
		parameterClass="konkaMobileSailData">
		update KONKA_MOBILE_SAIL_DATA_BILL set state=6,audit_date=sysdate
		where sail_id in (SELECT
		a.id
		FROM
		KONKA_MOBILE_SAIL_DATA a
		LEFT JOIN
		KONKA_CATEGORY c
		ON a.CUSTOMER_CATE_ID = c.C_INDEX
		LEFT JOIN
		KONKA_R3_STORE d
		ON
		d.STORE_ID = a.DEPT_ID
		WHERE 1 = 1 AND a.audit_state
		= 2
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		)

	</update>
	<update id="upkonkaMobileSailDataAndBillForSwitchSave_sail"
		parameterClass="konkaMobileSailData">
		update KONKA_MOBILE_SAIL_DATA set audit_state=6,audit_date=sysdate
		where id in (SELECT
		a.id
		FROM KONKA_MOBILE_SAIL_DATA
		a
		LEFT JOIN
		KONKA_CATEGORY c
		ON a.CUSTOMER_CATE_ID = c.C_INDEX
		LEFT JOIN
		KONKA_R3_STORE d
		ON d.STORE_ID = a.DEPT_ID

		WHERE 1
		= 1 AND a.audit_state
		= 2
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_like">a.MODEL_NAME like
			'%'||#map.model_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_Show">
			<![CDATA[a.num <> 0]]>
		</isNotEmpty>
		)
	</update>


	<!-- Wang,KunLin 2014-08-27 广州发票审核 结束 -->



	<!-- Hu,Hao 2013-09-14 -->
	<select id="selectKonkaMobileSailDataForFgsTopCount" resultMap="konkaMobileSailDataForFgsTopResult"
		parameterClass="konkaMobileSailData">
		SELECT sum (a.all_price)/10000 AS all_price, sum (a.num) AS num
		FROM
		KONKA_MOBILE_SAIL_DATA a
		where a.ALL_PRICE is not
		null
		and a.NUM is not
		null
		and a.IS_DEL =0
		<isNotEmpty prepend=" and " property="subcomp_id">a.SUBCOMP_ID =
			#subcomp_id:DECIMAL#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.report_date_s"><![CDATA[ a.REPORT_DATE >= #map.report_date_s# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.report_date_e"><![CDATA[ a.REPORT_DATE >= #map.report_date_e# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_id">a.CUSTOMER_ID =
			#customer_id:DECIMAL#
		</isNotEmpty>
	</select>

	<!-- Hu,Hao 2013-11-20 -->
	<select id="selectKonkaMobileSailDataToJsonCount" resultClass="long"
		parameterClass="konkaMobileSailData">
		select count(1) from (
		SELECT sum(num) as sail_num,sum(all_price) as
		sail_price ,dept_name,MODEL_NAME,dept_id as
		store_id
		FROM
		KONKA_MOBILE_SAIL_DATA a
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		group by dept_id,dept_name,MODEL_NAME )
	</select>

	<!-- Hu,Hao 2013-11-21 -->
	<select id="selectKonkaMobileSailDataToJson3Count" resultClass="long"
		parameterClass="konkaMobileSailData">
		select count(1) from (
		SELECT sum(num) as sail_num,sum(all_price) as
		sail_price ,dept_name,dept_id as store_id
		FROM
		KONKA_MOBILE_SAIL_DATA a
		WHERE 1 = 1
		<include refid="sf-konkaMobileSailData" />
		group by dept_id,dept_name )
	</select>

	<!-- Hu,Hao 2013-11-20 -->
	<resultMap id="konkaMobileSailDataResultToJson" class="konkaMobileSailData">
		<result column="SAIL_NUM" property="map.sail_num" jdbcType="DECIMAL" />
		<result column="STORE_ID" property="map.store_id" jdbcType="DECIMAL" />
		<result column="SAIL_PRICE" property="map.sail_price" jdbcType="DECIMAL" />
		<result column="MD_NAME" property="map.md_name" jdbcType="VARCHAR" />
		<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
	</resultMap>

	<!-- Hu,Hao 2013-11-20 -->
	<select id="selectKonkaMobileSailDataToJsonPaginatedList"
		resultMap="konkaMobileSailDataResultToJson" parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from (
		SELECT sum(num) as sail_num,sum(all_price) as
		sail_price , dept_name as store_name , MODEL_NAME as
		md_name,dept_id as
		store_id
		FROM KONKA_MOBILE_SAIL_DATA a
		where 1=1
		<include refid="sf-konkaMobileSailData" />
		group by dept_id,dept_name,MODEL_NAME )
		order by sail_price desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<!-- Hu,Hao 2013-11-20 -->
	<resultMap id="konkaMobileSailDataResultToJson3" class="konkaMobileSailData">
		<result column="SAIL_NUM" property="map.sail_num" jdbcType="DECIMAL" />
		<result column="SAIL_PRICE" property="map.sail_price" jdbcType="DECIMAL" />
		<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
		<result column="STORE_ID" property="map.store_id" jdbcType="DECIMAL" />
	</resultMap>

	<!-- Hu,Hao 2013-11-20 -->
	<select id="selectKonkaMobileSailDataToJson3PaginatedList"
		resultMap="konkaMobileSailDataResultToJson3" parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from (
		SELECT sum (num) AS sail_num,
		sum (all_price) AS
		sail_price,
		dept_name as store_name,
		dept_id as store_id
		FROM
		KONKA_MOBILE_SAIL_DATA a
		where 1=1
		<include refid="sf-konkaMobileSailData" />

		group by dept_id, dept_name
		) order by sail_price desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<!-- Xiao,GuoJian 2014-06-17 -->
	<resultMap id="konkaMobileSailDataResultForTotal" class="konkaMobileSailData">
		<result column="SUM_NUM" property="map.sum_num" jdbcType="DECIMAL" />
		<result column="SUM_ALL_PRICE" property="map.sum_all_price"
			jdbcType="DECIMAL" />
	</resultMap>
	<!-- Xiao,GuoJian 2014-06-17 -->
	<select id="selectKonkaMobileSailDataForTotal" resultMap="konkaMobileSailDataResultForTotal"
		parameterClass="konkaMobileSailData">
		select nvl(sum(a.ALL_PRICE),0) sum_all_price, nvl(sum(a.NUM),0)
		sum_num from KONKA_MOBILE_SAIL_DATA a where 1=1
		<include refid="sf-konkaMobileSailData" />
		<isNotEmpty prepend=" and " property="map.single_price_begin"><![CDATA[decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num) >= #map.single_price_begin# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.single_price_end"><![CDATA[ decode(a.num,null,0,0,0,nvl(a.all_price,0)/a.num)  <= #map.single_price_end# ]]></isNotEmpty>
	</select>

	<select id="selectKonkaMobileSailDataListByR3JobId" resultClass="java.util.HashMap"
		parameterClass="konkaMobileSailData">
		SELECT a.real_name AS REPORT_NAME,
		       b.DEPT_ID AS store_id,
		       b.DEPT_NAME AS store_name,
		       sum (nvl (b.NUM, 0)) all_num,
		       sum (nvl (b.ALL_PRICE, 0)) all_money
		  FROM    konka_pe_prod_user a
		       LEFT JOIN
		          <![CDATA[ 
		          (SELECT x.*
				  FROM konka_mobile_sail_data x
				 WHERE 	1=1 
				 	   AND x.is_del= 0
				 	   AND x.report_date >= to_char (#map.date_begin#, 'YYYY-MM-DD HH24:MI:SS')
				       AND x.report_date <= to_char (#map.date_end#, 'YYYY-MM-DD HH24:MI:SS'))
		           ]]> b
		       ON a.id = b.REPORT_ID
		WHERE 1 = 1 and a.id =#report_id#
		GROUP BY a.real_name,b.DEPT_NAME, b.DEPT_ID
	</select>

	<select id="selectKonkaMobileSailDataListByFgsCode" resultClass="java.util.HashMap"
		parameterClass="java.util.HashMap">
		SELECT sum (nvl (a.NUM, 0)) all_num,
		sum (nvl (a.ALL_PRICE, 0))
		all_money,
		b.DEPT_SN
		FROM konka_mobile_sail_data a , konka_dept b
		WHERE 1 = 1 and a.is_del = 0 and a.SUBCOMP_ID = b.dept_id
		<isNotEmpty prepend=" and " property="fgs_code">
         <![CDATA[b.DEPT_SN= #fgs_code# ]]>
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="date_begin">
			<![CDATA[a.report_date >= to_char(#date_begin#,'YYYY-MM-DD HH24:MI:SS') ]]>
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="date_end">
			<![CDATA[a.report_date <= to_char(#date_end#,'YYYY-MM-DD HH24:MI:SS') ]]>
		</isNotEmpty>
		GROUP BY b.DEPT_SN
	</select>

	<insert id="insertKonkaMobileSailData" parameterClass="konkaMobileSailData">
		<selectKey resultClass="long" keyProperty="id">select
			KONKA_MOBILE_RETAIL_REST_SEQ.nextval as id from dual
		</selectKey>
		<![CDATA[insert into KONKA_MOBILE_SAIL_DATA (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>
			<isNotNull prepend="," property="pct_code">PCT_CODE</isNotNull>
			<isNotNull prepend="," property="dept_id">DEPT_ID</isNotNull>
			<isNotNull prepend="," property="dept_name">DEPT_NAME</isNotNull>
			<isNotNull prepend="," property="subcomp_id">SUBCOMP_ID</isNotNull>
			<isNotNull prepend="," property="subcomp_name">SUBCOMP_NAME</isNotNull>
			<isNotNull prepend="," property="office_id">OFFICE_ID</isNotNull>
			<isNotNull prepend="," property="office_name">OFFICE_NAME</isNotNull>
			<isNotNull prepend="," property="measure_id">MEASURE_ID</isNotNull>
			<isNotNull prepend="," property="measure_name">MEASURE_NAME</isNotNull>
			<isNotNull prepend="," property="prototype_id">PROTOTYPE_ID</isNotNull>
			<isNotNull prepend="," property="prototype_name">PROTOTYPE_NAME</isNotNull>
			<isNotNull prepend="," property="category_id">CATEGORY_ID</isNotNull>
			<isNotNull prepend="," property="category_name">CATEGORY_NAME</isNotNull>
			<isNotNull prepend="," property="model_id">MODEL_ID</isNotNull>
			<isNotNull prepend="," property="model_name">MODEL_NAME</isNotNull>
			<isNotNull prepend="," property="all_price">ALL_PRICE</isNotNull>
			<isNotNull prepend="," property="single_price">SINGLE_PRICE</isNotNull>
			<isNotNull prepend="," property="price_ref">PRICE_REF</isNotNull>
			<isNotNull prepend="," property="num">NUM</isNotNull>
			<isNotNull prepend="," property="report_id">REPORT_ID</isNotNull>
			<isNotNull prepend="," property="report_name">REPORT_NAME</isNotNull>
			<isNotNull prepend="," property="report_date">REPORT_DATE</isNotNull>
			<isNotNull prepend="," property="realname">REALNAME</isNotNull>
			<isNotNull prepend="," property="phonenum">PHONENUM</isNotNull>
			<isNotNull prepend="," property="addresss">ADDRESSS</isNotNull>
			<isNotNull prepend="," property="mastercode">MASTERCODE</isNotNull>
			<isNotNull prepend="," property="status">STATUS</isNotNull>
			<isNotNull prepend="," property="memo">MEMO</isNotNull>
			<isNotNull prepend="," property="sale_date">SALE_DATE</isNotNull>
			<isNotNull prepend="," property="deduct">DEDUCT</isNotNull>
			<isNotNull prepend="," property="rule_id">RULE_ID</isNotNull>
			<isNotNull prepend="," property="data_source">DATA_SOURCE</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>
			<isNotNull prepend="," property="r_sn">R_SN</isNotNull>
			<isNotNull prepend="," property="customer_id">CUSTOMER_ID</isNotNull>
			<isNotNull prepend="," property="customer_r3_code">CUSTOMER_R3_CODE
			</isNotNull>
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME</isNotNull>
			<isNotNull prepend="," property="customer_cate_id">CUSTOMER_CATE_ID
			</isNotNull>
			<isNotNull prepend="," property="customer_cate_name">CUSTOMER_CATE_NAME
			</isNotNull>
			<isNotNull prepend="," property="cust_subcomp_id">CUST_SUBCOMP_ID</isNotNull>
			<isNotNull prepend="," property="cust_subcomp_name">CUST_SUBCOMP_NAME
			</isNotNull>
			<isNotNull prepend="," property="cust_office_id">CUST_OFFICE_ID</isNotNull>
			<isNotNull prepend="," property="cust_office_name">CUST_OFFICE_NAME
			</isNotNull>
			<isNotNull prepend="," property="sdf_r3_code">SDF_R3_CODE</isNotNull>
			<isNotNull prepend="," property="audit_state">AUDIT_STATE</isNotNull>
			<isNotNull prepend="," property="audit_date">AUDIT_DATE</isNotNull>
			<isNotNull prepend="," property="sale_cost">SALE_COST</isNotNull>
			<isNotNull prepend="," property="chc_name">CHC_NAME</isNotNull>
			<!-- <isNotNull prepend="," property="report_type">REPORT_TYPE</isNotNull> -->
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="pct_code">#pct_code:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="dept_id">#dept_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="dept_name">#dept_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="subcomp_id">#subcomp_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="subcomp_name">#subcomp_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="office_id">#office_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="office_name">#office_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="measure_id">#measure_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="measure_name">#measure_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="prototype_id">#prototype_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="prototype_name">#prototype_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="category_id">#category_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="category_name">#category_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="model_id">#model_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="model_name">#model_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="all_price">#all_price:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="single_price">#single_price:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="price_ref">#price_ref:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="num">#num:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="report_id">#report_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="report_name">#report_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="report_date">#report_date:DATETIME#
			</isNotNull>
			<isNotNull prepend="," property="realname">#realname:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="phonenum">#phonenum:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="addresss">#addresss:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="mastercode">#mastercode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="status">#status:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="memo">#memo:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="sale_date">#sale_date:DATETIME#
			</isNotNull>
			<isNotNull prepend="," property="deduct">#deduct:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="rule_id">#rule_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="data_source">#data_source:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="r_sn">#r_sn:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_id">#customer_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="customer_r3_code">#customer_r3_code:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="customer_name">#customer_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="customer_cate_id">#customer_cate_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="customer_cate_name">#customer_cate_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="cust_subcomp_id">#cust_subcomp_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="cust_subcomp_name">#cust_subcomp_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="cust_office_id">#cust_office_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="cust_office_name">#cust_office_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="sdf_r3_code">#sdf_r3_code:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="audit_state">#audit_state:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="audit_date">#audit_date:TIMESTAMP#
			</isNotNull>
			<isNotNull prepend="," property="sale_cost">#sale_cost:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="chc_name">#chc_name:VARCHAR#
			</isNotNull>
			<!-- <isNotNull prepend="," property="report_type">#report_type:DECIMAL#</isNotNull> -->
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateKonkaMobileSailData" parameterClass="konkaMobileSailData">
		update KONKA_MOBILE_SAIL_DATA
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="pct_code">PCT_CODE =
				#pct_code:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="dept_id">DEPT_ID = #dept_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="dept_name">DEPT_NAME =
				#dept_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="subcomp_id">SUBCOMP_ID =
				#subcomp_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="subcomp_name">SUBCOMP_NAME =
				#subcomp_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="office_id">OFFICE_ID =
				#office_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="office_name">OFFICE_NAME =
				#office_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="measure_id">MEASURE_ID =
				#measure_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="measure_name">MEASURE_NAME =
				#measure_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="prototype_id">PROTOTYPE_ID =
				#prototype_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="prototype_name">PROTOTYPE_NAME =
				#prototype_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="category_id">CATEGORY_ID =
				#category_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="category_name">CATEGORY_NAME =
				#category_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="model_id">MODEL_ID =
				#model_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="model_name">MODEL_NAME =
				#model_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="all_price">ALL_PRICE =
				#all_price:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="single_price">SINGLE_PRICE =
				#single_price:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="price_ref">PRICE_REF =
				#price_ref:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="num">NUM = #num:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="report_id">REPORT_ID =
				#report_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="report_name">REPORT_NAME =
				#report_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="report_date">REPORT_DATE =
				#report_date:DATETIME#
			</isNotNull>
			<isNotNull prepend="," property="realname">REALNAME =
				#realname:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="phonenum">PHONENUM =
				#phonenum:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="addresss">ADDRESSS =
				#addresss:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="mastercode">MASTERCODE =
				#mastercode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="status">STATUS = #status:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="memo">MEMO = #memo:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="sale_date">SALE_DATE =
				#sale_date:DATETIME#
			</isNotNull>
			<isNotNull prepend="," property="deduct">DEDUCT = #deduct:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="rule_id">RULE_ID = #rule_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="data_source">DATA_SOURCE =
				#data_source:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL = #is_del:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="r_sn">R_SN = #r_sn:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="customer_id">CUSTOMER_ID =
				#customer_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="customer_r3_code">CUSTOMER_R3_CODE =
				#customer_r3_code:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME =
				#customer_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="customer_cate_id">CUSTOMER_CATE_ID =
				#customer_cate_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="customer_cate_name">CUSTOMER_CATE_NAME =
				#customer_cate_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="cust_subcomp_id">CUST_SUBCOMP_ID =
				#cust_subcomp_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="cust_subcomp_name">CUST_SUBCOMP_NAME =
				#cust_subcomp_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="cust_office_id">CUST_OFFICE_ID =
				#cust_office_id:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="cust_office_name">CUST_OFFICE_NAME =
				#cust_office_name:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="sdf_r3_code">SDF_R3_CODE =
				#sdf_r3_code:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="audit_state">AUDIT_STATE =
				#audit_state:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="audit_date">AUDIT_DATE =
				#audit_date:TIMESTAMP#
			</isNotNull>
			<isNotNull prepend="," property="sale_cost">SALE_COST =
				#sale_cost:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="chc_name">CHC_NAME =
				#chc_name:VARCHAR#
			</isNotNull>
			<!-- <isNotNull prepend="," property="report_type">REPORT_TYPE=#report_type:DECIMAL#</isNotNull> -->
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#
				</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteKonkaMobileSailData" parameterClass="konkaMobileSailData">
		delete from KONKA_MOBILE_SAIL_DATA where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#
				</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

	<!-- 门店零售排名 -->
	<resultMap id="konkaMobileSailDataStarOfBan" class="konkaMobileSailData">
		<result property="dept_id" column="DEPT_ID" jdbcType="DECIMAL" />
		<result property="dept_name" column="DEPT_NAME" jdbcType="VARCHAR" />
		<result property="subcomp_name" column="SUBCOMP_NAME" jdbcType="VARCHAR" />
		<result property="all_price" column="ALL_PRICE" jdbcType="DECIMAL" />
		<result property="num" column="NUM" jdbcType="DECIMAL" />
		<result column="STORE_RANK" property="map.store_rank" jdbcType="DECIMAL" />
		<result column="STORE_TYPE" property="map.store_type" jdbcType="VARCHAR" />
		<result column="PROVINCE" property="map.province" jdbcType="VARCHAR" />
		<result column="CITY" property="map.city" jdbcType="VARCHAR" />
		<result column="COUNTRY" property="map.country" jdbcType="VARCHAR" />
		<result column="TOWN" property="map.town" jdbcType="VARCHAR" />
		<result column="CXY_NAME" property="map.cxy_name" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectStarOfBanCount" resultClass="long"
		parameterClass="konkaMobileSailData">
		select count(1) from (
		SELECT DENSE_RANK() OVER(ORDER BY nums desc) AS
		store_rank
		FROM(select m.dept_id, sum(m.num) as
		nums, sum(m.ALL_PRICE)
		as prices from KONKA_MOBILE_SAIL_DATA m
		where 1=1 and m.IS_DEL=0
		<isNotEmpty prepend=" and " property="dept_id">m.dept_id = #dept_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="model_name">m.model_name like '%'
			|| #model_name# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.data_type"><![CDATA[m.MEASURE_ID >= #map.data_type:DECIMAL#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_begin"><![CDATA[ m.SALE_DATE >= to_date(#map.date_begin# || '00:00:00','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_end"><![CDATA[ m.SALE_DATE <= to_date(#map.date_end# || '23:59:59','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_in">
			exists (select IS_YTV
			from KONKA_PE_PD_MODEL mod where
			mod.MD_NAME=m.MODEL_NAME and
			mod.PD_ID=m.MODEL_ID and mod.IS_YTV=1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_4K">
			exists (select is_4k
			from KONKA_PE_PD_MODEL mod where
			mod.MD_NAME=m.MODEL_NAME and
			mod.PD_ID=m.MODEL_ID and mod.is_4k=1)
		</isNotEmpty>
		group by m.dept_id) a
		left join konka_r3_store b on
		a.dept_id=b.store_id
		left join KONKA_DEPT c on b.dept_id=c.dept_id
		left
		join (SELECT bb.SHOP_ID, to_char(listagg(cc.user_name, ',')) AS
		cxy_name, to_char(listagg(cc.job_id, ',')) as
		cxy_id
		FROM
		Konka_Mobile_Sp_Relation bb LEFT JOIN konka_pe_prod_user cc ON
		bb.SELLER_ID = cc.ID
		where cc.IS_DEL = 0 and
		bb.SHOP_ID is not null
		GROUP BY bb.SHOP_ID) d on a.dept_id=d.shop_id
		<isNotEmpty property="map.filter_by_ywy_id_eq">
			left join MV_ORG_OF_CUSTOMER_ALL all
			on all.R3_CODE = b.R3_CODE
		</isNotEmpty>
		where 1=1 and b.store_id is not null and c.dept_id is not null
		<isNotEmpty prepend=" and " property="map.dept_id_start">
			(b.dept_id is not null
			and b.dept_id in (
			select dept_id from
			konka_dept start with dept_id in
			(
			SELECT DISTINCT (dept_id)
			FROM KONKA_ROLE_DATA_LEVEL
			WHERE role_id IN
			(SELECT role_id
			FROM KONKA_PE_ROLE_USER
			WHERE user_id =
			#map.session_user_id#)
			) or dept_id = #map.dept_id_start#
			connect by
			prior
			dept_id = par_id
			)
			)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">all.user_id =
			#map.filter_by_ywy_id_eq#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="subcomp_id">c.dept_id =
			#subcomp_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_name">b.STORE_NAME like
			'%'|| #dept_name# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">b.store_type =
			#map.store_type:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cxy_name_like">d.cxy_name like '%'||
			#map.cxy_name_like# ||'%'</isNotEmpty>
		)
	</select>
	<select id="selectStarOfBanList" resultClass="java.util.HashMap"
		parameterClass="konkaMobileSailData">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		SELECT DENSE_RANK() OVER(ORDER BY nums desc) AS store_rank,c.dept_name
		as subcomp_name,
		b.store_name as
		dept_name,b.store_id as
		dept_id,b.store_type,nums as num,prices as all_price,
		b.PROVINCE,b.CITY,b.COUNTRY,b.TOWN,cxy_name
		FROM(select m.dept_id,
		sum(m.num) as nums, sum(m.ALL_PRICE) as prices from
		KONKA_MOBILE_SAIL_DATA m
		where 1=1 and m.IS_DEL=0
		<isNotEmpty prepend=" and " property="dept_id">m.dept_id = #dept_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="model_name">m.model_name like '%'
			|| #model_name# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.data_type"><![CDATA[m.MEASURE_ID >= #map.data_type:DECIMAL#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_begin"><![CDATA[ m.SALE_DATE >= to_date(#map.date_begin# || '00:00:00','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_end"><![CDATA[ m.SALE_DATE <= to_date(#map.date_end# || '23:59:59','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_in">
			exists (select IS_YTV
			from KONKA_PE_PD_MODEL mod where
			mod.MD_NAME=m.MODEL_NAME and
			mod.PD_ID=m.MODEL_ID and mod.IS_YTV=1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_4K">
			exists (select is_4k
			from KONKA_PE_PD_MODEL mod where
			mod.MD_NAME=m.MODEL_NAME and
			mod.PD_ID=m.MODEL_ID and mod.is_4k=1)
		</isNotEmpty>
		group by m.dept_id) a
		left join konka_r3_store b on
		a.dept_id=b.store_id
		left join KONKA_DEPT c on b.dept_id=c.dept_id
		left
		join (SELECT bb.SHOP_ID, to_char(listagg(cc.user_name, ',')) AS
		cxy_name, to_char(listagg(cc.job_id, ',')) as
		cxy_id
		FROM
		Konka_Mobile_Sp_Relation bb LEFT JOIN konka_pe_prod_user cc ON
		bb.SELLER_ID = cc.ID
		where cc.IS_DEL = 0 and
		bb.SHOP_ID is not null
		GROUP BY bb.SHOP_ID) d on a.dept_id=d.shop_id
		<isNotEmpty property="map.filter_by_ywy_id_eq">
			left join MV_ORG_OF_CUSTOMER_ALL all
			on all.R3_CODE = b.R3_CODE
		</isNotEmpty>
		where 1=1 and b.store_id is not null and c.dept_id is not null
		<isNotEmpty prepend=" and " property="map.dept_id_start">
			(b.dept_id is not null
			and b.dept_id in (
			select dept_id from
			konka_dept start with dept_id in
			(
			SELECT DISTINCT (dept_id)
			FROM KONKA_ROLE_DATA_LEVEL
			WHERE role_id IN
			(SELECT role_id
			FROM KONKA_PE_ROLE_USER
			WHERE user_id =
			#map.session_user_id#)
			) or dept_id = #map.dept_id_start#
			connect by
			prior
			dept_id = par_id
			)
			)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">all.user_id =
			#map.filter_by_ywy_id_eq#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="subcomp_id">c.dept_id =
			#subcomp_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_name">b.STORE_NAME like
			'%'|| #dept_name# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">b.store_type =
			#map.store_type:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cxy_name_like">d.cxy_name like '%'||
			#map.cxy_name_like# ||'%'</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<!-- 门店零售总额、金额查询 -->
	<select id="selectAllmoneyAndNum" resultClass="java.util.HashMap"
		parameterClass="konkaMobileSailData" cacheModel="oneDayCache">
		SELECT nvl(sum(nums),0) as allnum,nvl(sum(prices),0) as allmoney
		FROM(select m.dept_id, sum(m.num) as nums,
		sum(m.ALL_PRICE) as prices
		from KONKA_MOBILE_SAIL_DATA m
		where 1=1 and m.IS_DEL=0
		<isNotEmpty prepend=" and " property="dept_id">m.dept_id = #dept_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="model_name">m.model_name like '%'
			|| #model_name# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.data_type"><![CDATA[m.MEASURE_ID >= #map.data_type:DECIMAL#]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_begin"><![CDATA[ m.SALE_DATE >= to_date(#map.date_begin# || '00:00:00','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.date_end"><![CDATA[ m.SALE_DATE <= to_date(#map.date_end# || '23:59:59','yyyy-mm-dd hh24:mi:ss' ) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_in">
			exists (select IS_YTV
			from KONKA_PE_PD_MODEL mod where
			mod.MD_NAME=m.MODEL_NAME and
			mod.PD_ID=m.MODEL_ID and mod.IS_YTV=1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_4K">
			exists (select is_4k
			from KONKA_PE_PD_MODEL mod where
			mod.MD_NAME=m.MODEL_NAME and
			mod.PD_ID=m.MODEL_ID and mod.is_4k=1)
		</isNotEmpty>
		group by m.dept_id) a
		left join konka_r3_store b on
		a.dept_id=b.store_id
		left join KONKA_DEPT c on b.dept_id=c.dept_id
		left
		join (SELECT bb.SHOP_ID, to_char(listagg(cc.user_name, ',')) AS
		cxy_name, to_char(listagg(cc.job_id, ',')) as
		cxy_id
		FROM
		Konka_Mobile_Sp_Relation bb LEFT JOIN konka_pe_prod_user cc ON
		bb.SELLER_ID = cc.ID
		where cc.IS_DEL = 0 and
		bb.SHOP_ID is not null
		GROUP BY bb.SHOP_ID) d on a.dept_id=d.shop_id
		<isNotEmpty property="map.filter_by_ywy_id_eq">
			left join MV_ORG_OF_CUSTOMER_ALL all
			on all.R3_CODE = b.R3_CODE
		</isNotEmpty>
		where 1=1 and b.store_id is not null and c.dept_id is not null
		<isNotEmpty prepend=" and " property="map.dept_id_start">
			(b.dept_id is not null
			and b.dept_id in (
			select dept_id from
			konka_dept start with dept_id in
			(
			SELECT DISTINCT (dept_id)
			FROM KONKA_ROLE_DATA_LEVEL
			WHERE role_id IN
			(SELECT role_id
			FROM KONKA_PE_ROLE_USER
			WHERE user_id =
			#map.session_user_id#)
			) or dept_id = #map.dept_id_start#
			connect by
			prior
			dept_id = par_id
			)
			)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.filter_by_ywy_id_eq">all.user_id =
			#map.filter_by_ywy_id_eq#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="subcomp_id">c.dept_id =
			#subcomp_id#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_name">b.STORE_NAME like
			'%'|| #dept_name# ||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">b.store_type =
			#map.store_type:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cxy_name_like">d.cxy_name like '%'||
			#map.cxy_name_like# ||'%'</isNotEmpty>
	</select>

	<!-- 门店销售任务完成率排名ZHOU -->
	<select id="selectAllStoreTaskFinish" resultMap="konkaStoreTaskFinishReportResult"
		parameterClass="konkaMobileSailData" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		SELECT t.*
		FROM (SELECT c.DEPT_ID,
		c.DEPT_SN,
		c.DEPT_NAME,
		a.STORE_ID,
		a.STORE_NAME,
		nvl(a.STORE_TYPE,'X')STORE_TYPE,
		b.s_num,
		b.s_price,
		nvl
		(d.TASK_MONEY, 0) TASK_MONEY,
		round (decode (nvl (d.task_money, 0), 0,
		1, nvl (b.s_price, 0) /
		d.task_money), 2) tfp,
		dense_rank () OVER (ORDER
		BY s_num DESC) storerank
		FROM (SELECT t1.DEPT_ID,
		t1.STORE_ID,
		t1.STORE_NAME,
		t1.STORE_TYPE
		FROM KONKA_R3_STORE t1
		WHERE t1.is_del = 0)
		a
		LEFT JOIN
		(SELECT m.dept_id,
		sum (m.num) AS
		s_num,
		sum (m.ALL_PRICE) AS
		s_price
		FROM KONKA_MOBILE_SAIL_DATA m
		WHERE 1 = 1
		AND m.IS_DEL = 0
		<isNotEmpty prepend=" AND " property="map.date_begin"><![CDATA[ to_char (m.SALE_DATE, 'YYYYMM') >= to_char (#map.date_begin#, 'YYYYMM')]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.date_end"><![CDATA[ to_char (m.SALE_DATE, 'YYYYMM') <= to_char (#map.date_end#, 'YYYYMM')]]></isNotEmpty>
		GROUP BY m.dept_id) b
		ON a.STORE_ID = b.DEPT_ID
		LEFT JOIN KONKA_DEPT c
		ON a.DEPT_ID = c.DEPT_ID
		LEFT JOIN
		(SELECT
		t2.STORE_ID, sum
		(t2.TASK_MONEY) TASK_MONEY
		FROM KONKA_R3_STORE_TASK t2
		WHERE 1=1
		<isNotEmpty prepend=" AND " property="map.year1"><![CDATA[ t2.YEAR >= #map.year1#]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.month1"><![CDATA[ t2.MONTH >= #map.month1#]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.year2"><![CDATA[ t2.YEAR <= #map.year2#]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.month2"><![CDATA[ t2.MONTH <= #map.month2#]]></isNotEmpty>
		GROUP BY t2.STORE_ID) d
		ON a.STORE_ID = d.STORE_ID) t
		WHERE 1 = 1
		<isNotEmpty prepend=" and " property="map.dept_id">t.DEPT_ID =
			#map.dept_id:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_name">t.STORE_NAME =
			#map.store_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">t.STORE_TYPE =
			#map.store_type:VARCHAR#
		</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<!-- 门店销售任务完成率排名求总数 -->
	<select id="selectAllStoreTaskFinish4count" resultClass="long"
		parameterClass="konkaMobileSailData" cacheModel="oneDayCache">
		<![CDATA[ select count(1) from ( ]]>
		SELECT t.*
		FROM (SELECT c.DEPT_ID,
		c.DEPT_SN,
		c.DEPT_NAME,
		a.STORE_ID,
		a.STORE_NAME,
		nvl(a.STORE_TYPE,'X')STORE_TYPE,
		b.s_num,
		b.s_price,
		nvl
		(d.TASK_MONEY, 0) TASK_MONEY,
		round (decode (nvl (d.task_money, 0), 0,
		1, nvl (b.s_price, 0) /
		d.task_money), 2) tfp,
		dense_rank () OVER (ORDER
		BY s_num DESC) storerank
		FROM (SELECT t1.DEPT_ID,
		t1.STORE_ID,
		t1.STORE_NAME,
		t1.STORE_TYPE
		FROM KONKA_R3_STORE t1
		WHERE t1.is_del = 0)
		a
		LEFT JOIN
		(SELECT m.dept_id,
		sum (m.num) AS
		s_num,
		sum (m.ALL_PRICE) AS
		s_price
		FROM KONKA_MOBILE_SAIL_DATA m
		WHERE 1 = 1
		AND m.IS_DEL = 0
		<isNotEmpty prepend=" AND " property="map.date_begin"><![CDATA[ to_char (m.SALE_DATE, 'YYYYMM') >= to_char (#map.date_begin#, 'YYYYMM')]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.date_end"><![CDATA[ to_char (m.SALE_DATE, 'YYYYMM') <= to_char (#map.date_end#, 'YYYYMM')]]></isNotEmpty>
		GROUP BY m.dept_id) b
		ON a.STORE_ID = b.DEPT_ID
		LEFT JOIN KONKA_DEPT c
		ON a.DEPT_ID = c.DEPT_ID
		LEFT JOIN
		(SELECT
		t2.STORE_ID, sum
		(t2.TASK_MONEY) TASK_MONEY
		FROM KONKA_R3_STORE_TASK t2
		WHERE 1=1
		<isNotEmpty prepend=" AND " property="map.year1"><![CDATA[ t2.YEAR >= #map.year1#]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.month1"><![CDATA[ t2.MONTH >= #map.month1#]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.year2"><![CDATA[ t2.YEAR <= #map.year2#]]></isNotEmpty>
		<isNotEmpty prepend=" AND " property="map.month2"><![CDATA[ t2.MONTH <= #map.month2#]]></isNotEmpty>
		GROUP BY t2.STORE_ID) d
		ON a.STORE_ID = d.STORE_ID) t
		WHERE 1 = 1
		<isNotEmpty prepend=" and " property="map.dept_id">t.DEPT_ID =
			#map.dept_id:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_name">t.STORE_NAME =
			#map.store_name:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">t.STORE_TYPE =
			#map.store_type:VARCHAR#
		</isNotEmpty>
		<![CDATA[ ) t_  ]]>
	</select>

	<!--零售畅销机型查询 add by Liang Houen on 2015-08-19 -->
	<select id="selectCxModelList" resultClass="java.util.HashMap" parameterClass="konkaMobileSailData" cacheModel="oneDayCache">
		select * from (select * from (
		SELECT a.model_name, e.TYPE_NAME, value(SUM(a.all_price), 0) AS all_price, value(SUM(a.num), 0) AS all_num,
		DECODE(value(SUM(a.num), 0),0,0,ROUND(value(SUM(a.all_price), 0)/value(SUM(a.num), 0),2)) AS price
		FROM konka_mobile_sail_data a
		left join (select C_INDEX,PAR_INDEX from KONKA_CATEGORY where c_type=10) b on a.CUSTOMER_CATE_ID=b.C_INDEX
		left join konka_r3_store c on a.dept_id=c.store_id
		LEFT JOIN KONKA_PE_PD_MODEL d ON d.MD_NAME = a.MODEL_NAME
		LEFT JOIN (SELECT TYPE_NAME,FIELD1 FROM KONKA_BASE_TYPE_DATA WHERE PAR_TYPE_ID = 100023) e ON d.SIZE_SEC=e.FIELD1
		<![CDATA[WHERE a.IS_DEL = 0 AND a.num <> 0 AND a.all_price <> 0 and a.model_name IS NOT NULL]]>
		<isNotEmpty prepend=" and " property="map.sell_date_start">
			<![CDATA[a.REPORT_DATE >= to_date(#map.sell_date_start#,'yyyy-MM-dd hh24:mi:ss')]]>
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sell_date_end">
			<![CDATA[a.REPORT_DATE <= to_date(#map.sell_date_end#,'yyyy-MM-dd hh24:mi:ss')]]>
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="subcomp_id">c.dept_id = #subcomp_id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.model_name_like">a.model_name like '%' || #map.model_name_like# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_user_name_like">c.YWY_NAME like '%' ||#map.ywy_user_name_like#|| '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.md_size">d.md_size=#map.md_size#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.size_sec">d.size_sec=#map.size_sec#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.kh_name_like">a.CUSTOMER_NAME like '%'||#map.kh_name_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code_like">c.r3_code like '%'||#map.r3_code_like#||'%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.v_customer_type1">b.par_index=#map.v_customer_type1#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.v_customer_type2">b.c_index=#map.v_customer_type2#</isNotEmpty>
		GROUP BY a.model_name, e.TYPE_NAME)
		<isNotEmpty prepend=" " property="map.price_desc">order by ALL_PRICE desc</isNotEmpty>
		<isNotEmpty prepend=" " property="map.num_desc">order by ALL_NUM desc</isNotEmpty>
		) where 1=1
		<isNotEmpty prepend=" and " property="map.show_top"><![CDATA[rownum<=#map.show_top#]]></isNotEmpty>
	</select>

	<!--零售排名分析  add by Liang Houen on 2015-08-20 -->
	<select id="selectPMForDeptList" resultClass="java.util.HashMap" parameterClass="konkaMobileSailData" cacheModel="oneDayCache">
		<!-- 分公司排名 -->
		<isNotEmpty property="map.tab1" prepend="">
			select * from (select * from (
			select d.dept_name,'' l4_dept_name,'' l5_dept_name,value(a.all_money,0) all_money,value(a.all_num,0) all_num,value(a.price,0) price
				from (select dept_id,dept_name from konka_dept where is_del=0 and dept_type=3 and PAR_ID=0 and dept_id not in (673)) d
				left join (select t.SUBCOMP_ID,value(sum(t.num),0) all_num,value(sum(t.all_price),0) all_money,
				DECODE(value(SUM(t.num), 0),0,0,ROUND(value(SUM(t.all_price), 0)/value(SUM(t.num), 0),2)) AS price
			FROM konka_mobile_sail_data t
			left join (select C_INDEX,PAR_INDEX from KONKA_CATEGORY where c_type=10) b on t.CUSTOMER_CATE_ID=b.C_INDEX
			<![CDATA[ WHERE t.IS_DEL = 0 AND t.num <> 0 AND t.all_price <> 0]]>
			<isNotEmpty prepend=" and " property="map.sell_date_start">
				<![CDATA[t.sale_date >= to_date(#map.sell_date_start#,'yyyy-MM-dd hh24:mi:ss')]]>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.sell_date_end">
				<![CDATA[t.sale_date <= to_date(#map.sell_date_end#,'yyyy-MM-dd hh24:mi:ss')]]>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.customer_type1">b.par_index=#map.customer_type1#</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.customer_type2">b.c_index=#map.customer_type2#</isNotEmpty>
			group by SUBCOMP_ID) a on d.dept_id=a.SUBCOMP_ID)
			<isNotEmpty prepend=" " property="map.price_desc">order by all_money desc</isNotEmpty>
			<isNotEmpty prepend=" " property="map.num_desc">order by ALL_NUM desc</isNotEmpty>
			) where 1=1
			<isNotEmpty prepend=" and " property="map.show_top"><![CDATA[rownum<=#map.show_top#]]></isNotEmpty>
		</isNotEmpty>

		<!-- 经办排名 -->
		<isNotEmpty prepend="" property="map.tab2">
			SELECT * FROM ( SELECT * FROM (
				SELECT value(aa.all_money, 0) AS all_money,value(aa.all_num, 0) AS all_num,
				DECODE(value(aa.all_num, 0),0,0,ROUND(value(aa.all_money, 0)/value(aa.all_num, 0),2)) AS price,
			<isNotEmpty prepend=" " property="map.l4_dept">
				k.DEPT_NAME,k.L4_DEPT_NAME,'' l5_dept_name
			FROM V_DEPT_L4_JB k LEFT JOIN
			</isNotEmpty>
			<isNotEmpty prepend=" " property="map.l5_dept">
				k.DEPT_NAME,k.L4_DEPT_NAME,k.L5_DEPT_NAME
			FROM V_DEPT_L5_JB k LEFT JOIN
			</isNotEmpty>
			(SELECT
			<isNotEmpty prepend=" " property="map.l4_dept">
				t.L4_DEPT_ID,
			</isNotEmpty>
			<isNotEmpty prepend=" " property="map.l5_dept">
				t.l5_dept_id,
			</isNotEmpty>
			value(SUM(t.money), 0) AS all_money, value(SUM(t.num), 0) AS all_num
			FROM V_A_DETAILS_OF_SALES_ALL_USER t WHERE 1 = 1 AND t.l4_dept_id IS NOT NULL
			<isNotEmpty prepend=" and " property="map.sell_date_start">
				<![CDATA[t.sale_date >= to_date(#map.sell_date_start#,'yyyy-MM-dd hh24:mi:ss')]]>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.sell_date_end">
				<![CDATA[t.sale_date <= to_date(#map.sell_date_end#,'yyyy-MM-dd hh24:mi:ss')]]>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.customer_type1">
				t.PAR_CUSTOMER_TYPE = #map.customer_type1#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.customer_type2">
				t.CUSTOMER_TYPE = #map.customer_type2#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.l4_dept_id">
				t.l4_dept_id = #map.l4_dept_id#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.l5_dept_id">
				t.l5_dept_id = #map.l5_dept_id#
			</isNotEmpty>
			<isNotEmpty prepend=" " property="map.l4_dept">
				GROUP BY t.L4_DEPT_ID) aa ON k.l4_dept_id = aa.L4_DEPT_ID
			</isNotEmpty>
			<isNotEmpty prepend=" " property="map.l5_dept">
				GROUP BY t.l5_dept_id) aa ON k.l5_dept_id = aa.L5_DEPT_ID
			</isNotEmpty>
			WHERE 1 = 1
			<isNotEmpty prepend=" and " property="map.dept_id">
				k.dept_id = #map.dept_id#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.l4_dept_id">
				k.l4_dept_id = #map.l4_dept_id#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.l5_dept_id">
				k.l5_dept_id = #map.l5_dept_id#
			</isNotEmpty>
			<![CDATA[) where all_money<>0 and all_num<>0]]>
			<isNotEmpty prepend=" " property="map.price_desc">order by all_money desc</isNotEmpty>
			<isNotEmpty prepend=" " property="map.num_desc">order by ALL_NUM desc</isNotEmpty>
			)WHERE 1 = 1
			<isNotEmpty prepend=" and " property="map.show_top"><![CDATA[rownum<=#map.show_top#]]></isNotEmpty>
		</isNotEmpty>

		<!-- 客户排名 -->
		<isNotEmpty prepend="" property="map.tab3">
			SELECT * FROM ( SELECT * FROM (
				select shop.customer_name dept_name,c.c_name l4_dept_name,u.real_name l5_dept_name,value(m.all_money,0) all_money,value(m.all_num,0) all_num,
				DECODE(value(m.all_num, 0),0,0,ROUND(value(m.all_money, 0)/value(m.all_num,0),2)) AS price
				from konka_r3_shop shop left join BRANCH_ASSIGN b on shop.id=b.KONKA_R3_ID
				left join (select CUSTOMER_ID, value(SUM(t.all_price), 0) AS all_money,value(SUM(t.num), 0)   AS all_num
			    from KONKA_MOBILE_SAIL_DATA t where 1=1 and t.is_del=0
			<isNotEmpty prepend=" and " property="map.sell_date_start">
				<![CDATA[t.sale_date >= to_date(#map.sell_date_start#,'yyyy-MM-dd hh24:mi:ss')]]>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.sell_date_end">
				<![CDATA[t.sale_date <= to_date(#map.sell_date_end#,'yyyy-MM-dd hh24:mi:ss')]]>
			</isNotEmpty>
			GROUP BY CUSTOMER_ID) m on shop.id=m.customer_id
			left join KONKA_CATEGORY c on shop.CUSTOMER_TYPE = c.C_INDEX AND c.C_TYPE = 10
			left join konka_pe_prod_user u on b.USER_ID=u.id
			left join v_org_of_dept d on d.cur_dept_id=u.dept_id
			where shop.is_del=0 and shop.is_konka=1 and shop.BRANCH_AREA_NAME_2 not in ('KFDFD001','KF001','KFSF001')
			<isNotEmpty prepend=" and " property="map.customer_type1">
				c.PAR_INDEX = #map.customer_type1#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.customer_type2">
				shop.CUSTOMER_TYPE = #map.customer_type2#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.l4_dept_id">
				d.l4_dept_id = #map.l4_dept_id#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.l5_dept_id">
				d.l5_dept_id = #map.l5_dept_id#
			</isNotEmpty>
			<![CDATA[) where all_money<>0 and all_num<>0]]>
			<isNotEmpty prepend=" " property="map.price_desc">order by all_money desc</isNotEmpty>
			<isNotEmpty prepend=" " property="map.num_desc">order by ALL_NUM desc</isNotEmpty>
			)WHERE 1 = 1
			<isNotEmpty prepend=" and " property="map.show_top"><![CDATA[rownum<=#map.show_top#]]></isNotEmpty>
		</isNotEmpty>

		<!--&lt;!&ndash; 促销员排名 &ndash;&gt;-->
		<!--<isNotEmpty prepend="" property="map.tab4">-->
			<!--select * from konka_mobile_sail_data-->
		<!--</isNotEmpty>-->
	</select>

</sqlMap>
