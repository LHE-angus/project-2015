<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BASE_PD_TYPE">

	<typeAlias alias="basePdType" type="com.ebiz.mmt.domain.BasePdType" />
	
	<!-- add by Jiang,Jiayong 2010-08-13 -->
	<typeAlias alias="baseBrandInfo" type="com.ebiz.mmt.domain.BaseBrandInfo" />

	


	<resultMap id="basePdTypeResultForList" class="basePdType">
		<result column="PD_TYPE" property="pd_type" jdbcType="DECIMAL" />
		<result column="PD_NAME" property="pd_name" jdbcType="VARCHAR" />
		<result column="PD_TYPE_SIGN" property="pd_type_sign" jdbcType="VARCHAR" />
		<result column="ORDER_SORT" property="order_sort" jdbcType="DECIMAL" />
		<result column="DEL_MARK" property="del_mark" jdbcType="DECIMAL" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATE" />
		<result column="DEL_DATE" property="del_date" jdbcType="DATE" />
		<result column="IS_MODEL" property="is_model" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="basePdTypeListForMmt" class="basePdType">
		<result column="PD_TYPE" property="pd_type" jdbcType="DECIMAL" />
		<result column="PD_NAME" property="pd_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="pdTypeSignForMmt" class="basePdType">
		<result column="PD_TYPE" property="pd_type" jdbcType="DECIMAL" />
		<result column="PD_NAME" property="pd_name" jdbcType="VARCHAR" />
		<result column="PD_TYPE_SIGN" property="pd_type_sign" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- add by Jiang,Jiayong 2010-08-13 -->
	<resultMap id="basePdTypeWithBrandInfoForEntpShop" class="basePdType" extends="basePdTypeResultForList">
		<result property="baseBrandInfoList" select="selectBrandInfoWithStr" column="str"/>
	</resultMap>
	
	<!-- add by Jiang,Jiayong 2010-08-13 -->
	<resultMap id="baseBrandInfoResultForList" class="baseBrandInfo">
		<result column="BRAND_ID" property="brand_id" jdbcType="DECIMAL" />
		<result column="BRAND_NAME" property="brand_name" jdbcType="VARCHAR" />
		<result column="BRAND_LOGO" property="brand_logo" jdbcType="VARCHAR" />
		<result column="BRAND_NAME_CN" property="brand_name_cn" jdbcType="VARCHAR" />
		<result column="BRAND_NAME_EN" property="brand_name_en" jdbcType="VARCHAR" />
		<result column="ORDER_SORT" property="order_sort" jdbcType="DECIMAL" />
		<result column="IS_LOCK" property="is_lock" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
		<result column="BIRTHDAY" property="birthday" jdbcType="DATE" />
		<result column="SUM_HAVE" property="sum_have" jdbcType="DECIMAL" />
		<result column="SUM_WANT" property="sum_want" jdbcType="DECIMAL" />
		<result column="SUM_SCAN" property="sum_scan" jdbcType="DECIMAL" />
	</resultMap>
	
	<!-- add by Du,HongGang 2010-11-16 -->
	<resultMap id="basePdTypeResultForPop" class="basePdType">
		<result column="PD_NAME" property="pd_name" jdbcType="VARCHAR" />
		<result column="PD_TYPE_SIGN" property="pd_type_sign" jdbcType="VARCHAR" />
		<result column="NUM" property="map.num" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="sf-basePdType">
		<isNotEmpty prepend=" and " property="pd_type">PD_TYPE = #pd_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pd_name">PD_NAME like '%' || #pd_name:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="pd_type_sign">PD_TYPE_SIGN = #pd_type_sign:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="del_mark">DEL_MARK = #del_mark:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_sort">ORDER_SORT = #order_sort:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_model">IS_MODEL = #is_model:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.have_product_pd_type">PD_TYPE not in ($map.have_product_pd_type$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.isOldToNew_V2">PD_TYPE in ($map.isOldToNew_V2$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.shop_id_V2">PD_TYPE in (select distinct pd_type
			from shop_pd
			where state = 0 
			and PRICE_AUDIT_STATE = 1
			and shop_id = #map.shop_id_V2#)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.key_word_for_pd_type">PD_TYPE in 
		(
			select distinct a.PD_TYPE from SHOP_PD a where 1 = 1 and a.state = 0
			<isNotEmpty prepend=" and " property="map.key_word">
				a.MD_SNAME like '%' || #map.key_word:VARCHAR# || '%'
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.up">
				<![CDATA[a.SELL_END_DATE >= sysdate and a.SELL_START_DATE < sysdate]]>
			</isNotEmpty>
		)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.big_pd_type_sign">
			PD_TYPE_SIGN in ($map.big_pd_type_sign$)
		</isNotEmpty>
        <isNotEmpty prepend=" and " property="map.pd_type_in">PD_TYPE in 
          ( select pd_type from BASE_BRAND where brand_id = #map.pd_type_in:DECIMAL# )
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.main_pd">PD_TYPE in 
          <iterate close=")" open="(" conjunction="," property="map.main_pd">#map.main_pd[]#</iterate>
        </isNotEmpty>
	</sql>

	<select id="selectBasePdType" resultMap="basePdTypeResultForList" parameterClass="basePdType"
		>
		select * from BASE_PD_TYPE where 1 = 1
		<include refid="sf-basePdType" />
	</select>

	<select id="selectBasePdTypeList" resultMap="basePdTypeResultForList" parameterClass="basePdType"
		>
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from BASE_PD_TYPE where 1 = 1
		<include refid="sf-basePdType" />
		order by order_sort asc, pd_type asc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectPdTypeSignForMmt" resultMap="pdTypeSignForMmt" parameterClass="basePdType"
		>
		select distinct t.pd_type_sign, t2.pd_type, t2.pd_name from BASE_PD_TYPE t,base_pd_type t2
		where t.is_model = 0 and t.del_mark = 0 and t2.is_model = 1 and t2.pd_type_sign = t.pd_type_sign and t.pd_type in 
		(
			select distinct t3.pd_type from shop_pd t3
		    where t3.state = 0
		    <isNotEmpty prepend=" and " property="map.is_oldtonew">t3.is_oldtonew = 1</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.is_low_energy">t3.is_low_energy = 1</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.is_country">t3.is_country = 1</isNotEmpty>
		)
		order by t.pd_type_sign
	</select>
	<!-- add by Jiang,Jiayong 2010-08-13 str= pdtype:shop_id-->
	<select id="selectBasePdTypeListWithBrandInfoForEntpShop" resultMap="basePdTypeWithBrandInfoForEntpShop" parameterClass="basePdType" 
		>
		<![CDATA[
		select concat(concat(to_char(bpt2.pd_type),':'),to_char(t2.shop_id)) as str,bpt2.*
		  from base_pd_type bpt2,
		       (select distinct bpt1.pd_type_sign, pt.shop_id
		          from BASE_PD_TYPE bpt1,
		               (select distinct sp.pd_type, sp.shop_id
		                  from shop_pd sp
		                 where sp.shop_id = #map.shop_id#) pt
		         where bpt1.pd_type = pt.pd_type) t2
		 where bpt2.is_model = 1
		   and bpt2.pd_type_sign = t2.pd_type_sign
		]]>
	</select>
	<!-- add by Jiang,Jiayong 2010-08-13   str= pdtype:shop_id-->
	<select id="selectBrandInfoWithStr" resultMap="baseBrandInfoResultForList" parameterClass="string" 
		>
		<![CDATA[
		select distinct bbi.*
		  from shop_pd sp, BASE_PD_TYPE bpt, base_brand_info bbi
		 where sp.shop_id = substr(#value#,instr(#value#,':',1,1)+1,length(#value#))
		   and sp.pd_type in (select bpt2.pd_type
		                        from BASE_PD_TYPE bpt2,
		                             (select bpt1.pd_type_sign
		                                from BASE_PD_TYPE bpt1
		                               where bpt1.pd_type = substr(#value#,1,instr(#value#,':',1,1)-1)) tt1
		                       where bpt2.pd_type_sign = tt1.pd_type_sign
		                         and bpt2.is_model = 0)
		   and sp.brand_id = bbi.brand_id
		]]>
	</select>
	
	<select id="selectBasePdTypeListForMmt" resultMap="basePdTypeListForMmt" parameterClass="basePdType"
		>
		select distinct t.pd_type,t2.pd_name from shop_pd t,base_pd_type t2
 		where t.state = 0
	    <isNotEmpty prepend=" and " property="map.is_oldtonew">t.is_oldtonew = 1</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_low_energy">t.is_low_energy = 1</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_country">t.is_country = 1</isNotEmpty> 
 		and t.pd_type = t2.pd_type and t2.del_mark = 0 and t.pd_type in 
 		(
 			select t3.pd_type from BASE_PD_TYPE t3 
 			where t3.is_model = 0 
 			<isNotEmpty prepend=" and " property="map.pd_type_sign">t3.pd_type_sign = #map.pd_type_sign:VARCHAR#</isNotEmpty>
 		)
	</select>
	
	<select id="selectBasePdTypeListByBrandName" resultMap="basePdTypeResultForList" parameterClass="basePdType"
		>
		select * from BASE_PD_TYPE b where b.pd_type in (select
		t.pd_type from base_brand t where t.del_mark = 0 
		<isNotEmpty prepend=" and " property="brand_name">t.brand_name = #brand_name:VARCHAR#</isNotEmpty>)
		and b.del_mark = 0
		order by b.pd_type_sign,b.order_sort desc, b.pd_type desc
	</select>

	<select id="selectBasePdTypeCount" resultClass="long" parameterClass="basePdType" >
		select count(*) from BASE_PD_TYPE where 1 = 1
		<include refid="sf-basePdType" />
	</select>

	<select id="selectBasePdTypePaginatedList" resultMap="basePdTypeResultForList" parameterClass="basePdType"
		>
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from BASE_PD_TYPE where 1 = 1
		<include refid="sf-basePdType" />
		order by pd_type_sign,order_sort desc, pd_type desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- MMT分析系统 排行榜分类导航  coding by Du,HongGang 2010-11-16 -->
	<select id="selectBasePdTypeListForPop" resultMap="basePdTypeResultForPop" parameterClass="basePdType" >
		select bp.pd_type_sign, bp.pd_name, t.num
		  from BASE_PD_TYPE bp
		 right join (select b.pd_type_sign, count(1) as num
		               from pd_model p
		               left join base_pd_type b on b.pd_type = p.pd_type
		              group by pd_type_sign) t on t.pd_type_sign = bp.pd_type_sign
		                                      and bp.is_model = 1
		                                      and bp.del_mark = 0
		 where t.pd_type_sign is not null
		 order by pd_type
	</select>
	
	

	<insert id="insertBasePdType" parameterClass="basePdType">
		<selectKey resultClass="long" keyProperty="pd_type">select pd_sequence.nextval as pd_type from dual</selectKey>
		insert into BASE_PD_TYPE ( PD_TYPE, PD_NAME, PD_TYPE_SIGN, ORDER_SORT, DEL_MARK, ADD_DATE, DEL_DATE, IS_MODEL )
		values ( #pd_type:DECIMAL#, #pd_name:VARCHAR#, #pd_type_sign:VARCHAR#, #order_sort:DECIMAL#, #del_mark:DECIMAL#,
		#add_date:DATE#, #del_date:DATE#, #is_model:DECIMAL# )
	</insert>

	<update id="updateBasePdType" parameterClass="basePdType">
		update BASE_PD_TYPE
		<dynamic prepend="set">
			<isNotNull prepend="," property="pd_name">PD_NAME = #pd_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pd_type_sign">PD_TYPE_SIGN = #pd_type_sign:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="order_sort">ORDER_SORT = #order_sort:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="del_mark">DEL_MARK = #del_mark:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE = #add_date:DATE#</isNotNull>
			<isNotNull prepend="," property="del_date">DEL_DATE = #del_date:DATE#</isNotNull>
			<isNotNull prepend="," property="is_model">IS_MODEL = #is_model:DECIMAL#</isNotNull>
		</dynamic>
		where PD_TYPE = #pd_type:DECIMAL#
	</update>

	<delete id="deleteBasePdType" parameterClass="basePdType">
		update BASE_PD_TYPE set DEL_MARK = 1
		<isNotNull prepend="," property="del_date">DEL_DATE = #del_date:DATE#</isNotNull>
		where
		<isNotEmpty prepend=" " property="pd_type">PD_TYPE = #pd_type#</isNotEmpty>
		<isEmpty prepend=" " property="pd_type">
			<isNotEmpty prepend=" " property="map.pks">
				pd_type in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>