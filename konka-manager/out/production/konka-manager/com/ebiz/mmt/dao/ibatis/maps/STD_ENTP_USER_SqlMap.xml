<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="STD_ENTP_USER">

	<typeAlias alias="stdEntpUser" type="com.ebiz.mmt.domain.StdEntpUser" />

	

	<resultMap id="stdEntpUserResultForList" class="stdEntpUser">
		<result column="USER_ID" property="user_id" jdbcType="DECIMAL" />
		<result column="USER_NAME" property="user_name" jdbcType="VARCHAR" />
		<result column="PASS_WORD" property="pass_word" jdbcType="VARCHAR" />
		<result column="USER_TYPE" property="user_type" jdbcType="DECIMAL" />
		<result column="ENTP_ID" property="entp_id" jdbcType="DECIMAL" />
		<result column="REALNAME" property="realname" jdbcType="VARCHAR" />
		<result column="USER_STATE" property="user_state" jdbcType="DECIMAL" />
		<result column="OWN_SYS" property="own_sys" jdbcType="DECIMAL" />
		<result column="KEY_SEQ" property="key_seq" jdbcType="VARCHAR" />
		<result column="MMT_USER" property="mmt_user" jdbcType="VARCHAR" />
	
	</resultMap>
	<resultMap id="stdEntpUserOrUserInfoResultForList" class="stdEntpUser">
		<result column="USER_ID" property="user_id" jdbcType="DECIMAL" />
		<result column="USER_NAME" property="user_name" jdbcType="VARCHAR" />
		<result column="USER_TYPE" property="user_type" jdbcType="DECIMAL" />
		<result column="ENTP_ID" property="entp_id" jdbcType="DECIMAL" />
		<result column="SHOP_ID" property="map.shop_id" jdbcType="DECIMAL" />
	</resultMap>
	
	<!-- 买卖商通页面访问统计 begin-->
<!--	<resultMap id="stdEntpUserID" class="Long">-->
<!--		<result column="USER_ID" property="user_id" jdbcType="DECIMAL" />-->
<!--	</resultMap>-->
<!--	<select id="selectStdEntpUserID" resultMap="stdEntpUserID" parameterClass="stdEntpUser" >-->
<!--			select * from STD_ENTP_USER where 1 = 1-->
<!--		<isNotEmpty prepend=" and " property="key_seq">-->
<!--			KEY_SEQ = #key_seq:VARCHAR#-->
<!--		</isNotEmpty>-->
<!--	</select>-->
	<!--买卖商通页面访问统计 end-->
	<resultMap id="stdEntpUserResult" class="stdEntpUser" extends="stdEntpUserResultForList">
		<result column="ENTP_NAME" property="map.entp_name" jdbcType="VARCHAR" />
		<result column="ADD_DATE" property="map.add_date" jdbcType="DATE" />
	</resultMap>
	

	<sql id="sf-stdEntpUser">
		<isNotEmpty prepend=" and " property="user_id">USER_ID = #user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_name">USER_NAME = #user_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="pass_word">PASS_WORD = #pass_word:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_type">USER_TYPE = #user_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="entp_id">ENTP_ID = #entp_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="realname">REALNAME = #realname:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_state">USER_STATE = #user_state:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="own_sys">OWN_SYS = #own_sys:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="key_seq">KEY_SEQ = #key_seq:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="mmt_user">MMT_USER = #mmt_user:VARCHAR#</isNotEmpty>
		
		<!-- 买卖商通统计使用 -->
		<isNotEmpty prepend=" and " property="map.p_index_par">mmt_user in (
			select user_name from CHEA_FILL.USER_INFO where p_index in (select t.p_index from CHEA_FILL.BASE_PROVINCE_LIST t start with t.p_index=#map.p_index_par:VARCHAR# connect by prior t.p_index= t.par_index)
		)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mmt_user_is_not_null">MMT_USER is not null</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.add_date_ge"><![CDATA[ to_char(ADD_DATE, 'yyyy-mm-dd hh24:mi:ss') >= #map.add_date_ge:VARCHAR# ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.add_date_le"><![CDATA[ to_char(ADD_DATE, 'yyyy-mm-dd hh24:mi:ss') <= #map.add_date_le:VARCHAR# ]]></isNotEmpty>
	</sql>
	
	<!--@author:Wu,Yang 2011-10-13 康佳进销存，用户登录时，取用户对应企业所绑定的所有密钥-->
	<select id="selectStdEntpUserListWithOwnStdEntpMain" resultMap="stdEntpUserResultForList" parameterClass="stdEntpUser" >
		select *
		  from CHEA_FILL.STD_ENTP_USER 
		 where mmt_user = (select a.mmt_user
		                       from CHEA_FILL.STD_ENTP_USER a
		                      where 1 = 1
		                      <isNotEmpty prepend=" and " property="user_state">USER_STATE = #user_state:DECIMAL#</isNotEmpty>
		                      <isNotEmpty prepend=" and " property="key_seq">a.KEY_SEQ = #key_seq:VARCHAR#</isNotEmpty>
		                      )
	</select>
	
	<select id="selectStdEntpUser" resultMap="stdEntpUserResultForList" parameterClass="stdEntpUser" >
		select * from CHEA_FILL.STD_ENTP_USER where 1 = 1
		<include refid="sf-stdEntpUser" />
	</select>

	<select id="selectStdEntpUserList" resultMap="stdEntpUserResultForList" parameterClass="stdEntpUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from CHEA_FILL.STD_ENTP_USER where 1 = 1
		<include refid="sf-stdEntpUser" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!-- Li,Ka 2012-3-15  有密钥登录时查询登录网点信息和企业信息，需要合并买卖提用户和官网用户的所有数据，防止查询不到 -->
	<select id="selectStdEntpUserOrUserInfoList" resultMap="stdEntpUserOrUserInfoResultForList" parameterClass="stdEntpUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select a.user_id,a.user_name,a.user_type,a.entp_id, null as shop_id from CHEA_FILL.STD_ENTP_USER a 
			where 1 = 1 and a.KEY_SEQ = #key_seq:VARCHAR#
		union 
		select u.id,u.user_name,u.user_type,u.entp_id,u.shop_id from chea_fill.user_info u left join chea_fill.shop_keys k on u.shop_id = k.shop_id 
			where 1 = 1 and k.key_seq = #key_seq:VARCHAR#
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	
	<!-- Jiang,JiaYong 2011-05-19 -->
	<select id="selectStdEntpUserWithShopIdRandomOrderList" resultMap="stdEntpUserResultForList" parameterClass="stdEntpUser" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select *
          from CHEA_FILL.STD_ENTP_USER
         where entp_id in (select sem.entp_id
                             from CHEA_FILL.STD_ENTP_MAIN sem
                            where sem.shop_id = #map.shop_id:DECIMAL#)
         order by dbms_random.random
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectStdEntpUserCount" resultClass="long" parameterClass="stdEntpUser" >
		select count(user_id) from CHEA_FILL.STD_ENTP_USER where 1 = 1
		<include refid="sf-stdEntpUser" />
	</select>

	<!-- 2010.07.05@Du,HongGang -->
	<select id="selectDistinctMmtUserStdEntpUserCount" resultClass="long" parameterClass="stdEntpUser" >
		select count (t1.entp_name)
		  from (select sem.entp_name,
		               sem.p_index
		          from CHEA_FILL.STD_ENTP_MAIN sem,
		               (select t.entp_id
		                  from CHEA_FILL.STD_ENTP_USER t
		                 where 1 = 1
		                   <isNotEmpty prepend=" and " property="map.mmt_user_is_not_null">t.MMT_USER is not null</isNotEmpty>
		                   <isNotEmpty prepend=" and " property="map.add_date_ge"><![CDATA[ #map.add_date_ge:VARCHAR# <= to_char(t.ADD_DATE, 'yyyy-mm-dd hh24:mi:ss')]]></isNotEmpty>
				 		   <isNotEmpty prepend=" and " property="map.add_date_le"><![CDATA[ #map.add_date_le:VARCHAR# >= to_char(t.ADD_DATE, 'yyyy-mm-dd hh24:mi:ss')]]></isNotEmpty>
				 		   <isNotEmpty prepend=" and " property="map.p_index_par">t.mmt_user in (
									select user_name from CHEA_FILL.USER_INFO where p_index in (select seu.p_index from CHEA_FILL.BASE_PROVINCE_LIST seu start with seu.p_index=#map.p_index_par:VARCHAR# connect by prior seu.p_index= seu.par_index)
								)
						  </isNotEmpty>
		                 group by t.entp_id) seu
		         where seu.entp_id = sem.entp_id
		         group by sem.entp_name, sem.p_index) t1
	</select>
	
	<!-- 2010.07.05@Du,HongGang -->
	<select id="selectDistinctEntpIdStdEntpUserCount" resultClass="long" parameterClass="stdEntpUser" >
		select count(*)
		  from (select sem.entp_name, sem.p_index
		          from CHEA_FILL.STD_ENTP_USER seu, std_entp_main sem
		         where seu.entp_id = sem.entp_id
		         	<isNotEmpty prepend=" and " property="map.p_index_par">seu.mmt_user in (
						select user_name from CHEA_FILL.USER_INFO where p_index in (select t.p_index from CHEA_FILL.BASE_PROVINCE_LIST t start with t.p_index=#map.p_index_par:VARCHAR# connect by prior t.p_index= t.par_index)
						)
					</isNotEmpty>
		           	<isNotEmpty prepend=" and " property="map.mmt_user_is_not_null">seu.MMT_USER is not null</isNotEmpty>
					<isNotEmpty prepend=" and " property="map.add_date_ge"><![CDATA[ #map.add_date_ge:VARCHAR# <= to_char(seu.ADD_DATE, 'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
					<isNotEmpty prepend=" and " property="map.add_date_le"><![CDATA[ #map.add_date_le:VARCHAR# >= to_char(seu.ADD_DATE, 'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
		         group by sem.entp_name, sem.p_index
		        )
	</select>

	<select id="selectStdEntpUserPaginatedList" resultMap="stdEntpUserResult" parameterClass="stdEntpUser"
		>
		 select a.*,b.ENTP_NAME from (
			<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
			select * from CHEA_FILL.STD_ENTP_USER where 1 = 1
			<include refid="sf-stdEntpUser" />
			<!-- order by ID asc -->
			<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
			 ) a  
		 left join CHEA_FILL.STD_ENTP_MAIN b on a.entp_id = b.entp_id and a.own_sys = b.own_sys and b.entp_name=null
	</select>
	
	<!--  coding by Zheng,Kun 2011-07-15 -->
	<select id="selectKeyEntpShopInfoMatching" resultMap="stdEntpUserResult" parameterClass="stdEntpUser" >
		 select a.*,b.ENTP_NAME from (
			<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
			select * from CHEA_FILL.STD_ENTP_USER where 1 = 1
			<isNotEmpty prepend=" and " property="own_sys">OWN_SYS = #own_sys:DECIMAL#</isNotEmpty>
			<!-- order by ID asc -->
			<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
			 ) a  
		 left join CHEA_FILL.STD_ENTP_MAIN b on a.entp_id = b.entp_id and a.own_sys = b.own_sys
	</select>
	
	<!-- 买卖提端密钥注销 Ren, zhong 2011-08-17 BEGIN-->
	<resultMap id="keyEntpUserInfoForLogoutResultList" class="stdEntpUser" extends="stdEntpUserResultForList">
		<result column="ADD_DATE" property="map.add_date" jdbcType="DATETIME" />
	</resultMap>
	
	<select id="selectKeyEntpUserInfoForLogoutResultList" resultMap="keyEntpUserInfoForLogoutResultList" parameterClass="stdEntpUser" >
		select * from CHEA_FILL.STD_ENTP_USER  where entp_id = #map.entp_id#
	</select>
	
	<insert id="insertStdEntpUser" parameterClass="stdEntpUser">
		<selectKey resultClass="long" keyProperty="user_id">select CHEA_FILL.MMT_SEQUENCE.nextval as user_id from dual </selectKey>
		<![CDATA[insert into CHEA_FILL.STD_ENTP_USER (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="user_id">USER_ID</isNotNull>
			<isNotNull prepend="," property="user_name">USER_NAME</isNotNull>
			<isNotNull prepend="," property="pass_word">PASS_WORD</isNotNull>
			<isNotNull prepend="," property="user_type">USER_TYPE</isNotNull>
			<isNotNull prepend="," property="entp_id">ENTP_ID</isNotNull>
			<isNotNull prepend="," property="realname">REALNAME</isNotNull>
			<isNotNull prepend="," property="user_state">USER_STATE</isNotNull>
			<isNotNull prepend="," property="own_sys">OWN_SYS</isNotNull>
			<isNotNull prepend="," property="key_seq">KEY_SEQ</isNotNull>
			<isNotNull prepend="," property="mmt_user">MMT_USER</isNotNull>
			<isNotNull prepend="," property="add_date">ADD_DATE</isNotNull>
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="user_id">#user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="user_name">#user_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pass_word">#pass_word:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="user_type">#user_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="entp_id">#entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="realname">#realname:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="user_state">#user_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="own_sys">#own_sys:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="key_seq">#key_seq:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="mmt_user">#mmt_user:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="add_date">#add_date:DATE#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateStdEntpUserWithKeySeq" parameterClass="StdEntpUser">
		update CHEA_FILL.STD_ENTP_USER
		<dynamic prepend="set">
			<isNotNull prepend="," property="user_name">USER_NAME = #user_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pass_word">PASS_WORD = #pass_word:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="user_type">USER_TYPE = #user_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="entp_id">ENTP_ID = #entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="realname">REALNAME = #realname:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="user_state">USER_STATE = #user_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="own_sys">OWN_SYS = #own_sys:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="mmt_user">MMT_USER = #mmt_user:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="map.mmt_user_is_null">MMT_USER = ''</isNotNull>
		</dynamic>
		where KEY_SEQ = #key_seq#
	</update>

	<update id="updateStdEntpUser" parameterClass="StdEntpUser">
		update CHEA_FILL.STD_ENTP_USER
		<dynamic prepend="set">
			<isNotNull prepend="," property="user_id">USER_ID = #user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="user_name">USER_NAME = #user_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="pass_word">PASS_WORD = #pass_word:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="user_type">USER_TYPE = #user_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="entp_id">ENTP_ID = #entp_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="realname">REALNAME = #realname:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="user_state">USER_STATE = #user_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="own_sys">OWN_SYS = #own_sys:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="key_seq">KEY_SEQ = #key_seq:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="mmt_user">MMT_USER = #mmt_user:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="map.set_mmt_user_null">MMT_USER = ''</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="user_id">USER_ID = #user_id#</isNotEmpty>
		<isEmpty prepend=" " property="user_id">
			<isNotEmpty prepend=" " property="map.pks">
				USER_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteStdEntpUser" parameterClass="StdEntpUser">
		delete from CHEA_FILL.STD_ENTP_USER where
		<isNotEmpty prepend=" " property="user_id">USER_ID = #user_id#</isNotEmpty>
		<isEmpty prepend=" " property="user_id">
			<isNotEmpty prepend=" " property="map.pks">
				USER_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>
	
	<delete id="deleteStdEntpUserForMmst" parameterClass="StdEntpUser">
		delete from CHEA_FILL.STD_ENTP_USER t where t.ENTP_ID = #entp_id:DECIMAL# and t.OWN_SYS = #own_sys:DECIMAL#
	</delete>
	
</sqlMap>