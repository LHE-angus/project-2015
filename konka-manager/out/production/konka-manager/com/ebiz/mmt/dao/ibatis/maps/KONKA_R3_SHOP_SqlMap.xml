<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

	<!-- Code by AutoGenerated Builder -->
	<!-- AutoGenerated Builder Version 2.1 -->
	<!-- @author Hui,Gang -->
	<!-- @datetime 2011-09-24 14:50:49 -->
<sqlMap namespace="KONKA_R3_SHOP">
	
	<typeAlias alias="konkaR3Shop" type="com.ebiz.mmt.domain.KonkaR3Shop" />

	

	<resultMap id="konkaR3ShopResult" class="konkaR3Shop">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="AREA_CODE" property="area_code" jdbcType="DECIMAL" />
		<result column="AREA_NAME" property="area_name" jdbcType="VARCHAR" />
		<result column="BRANCH_AREA_CODE" property="branch_area_code" jdbcType="DECIMAL" />
		<result column="BRANCH_AREA_NAME" property="branch_area_name" jdbcType="VARCHAR" />
		<result column="CUSTOMER_TYPE" property="customer_type" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="DECIMAL" />
		<result column="R3_CODE" property="r3_code" jdbcType="VARCHAR" />
		<result column="HANDLE_NAME" property="handle_name" jdbcType="VARCHAR" />
		<result column="BRANCH_AREA_CODE_2" property="branch_area_code_2" jdbcType="DECIMAL" />
		<result column="BRANCH_AREA_NAME_2" property="branch_area_name_2" jdbcType="VARCHAR" />
		<result column="CUSTOMER_CODE" property="customer_code" jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="customer_name" jdbcType="VARCHAR" />
		<result column="R3_DESC" property="r3_desc" jdbcType="VARCHAR" />
		<result column="MERGE_CODE_2010" property="merge_code_2010" jdbcType="VARCHAR" />
		<result column="IMPORT_DATE" property="import_date" jdbcType="DATE" />
		<result column="IMPORT_USER_ID" property="import_user_id" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
		<result column="IS_MATCH" property="is_match" jdbcType="DECIMAL" />
		<result column="B_LNG" property="b_lng" jdbcType="VARCHAR" />
		<result column="B_LAT" property="b_lat" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaR3ShopHandleNameResult" class="konkaR3Shop">
		<result column="ID" property="id" jdbcType="DECIMAL" />
		<result column="HANDLE_NAME" property="handle_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaR3ShopHandleNameResult2" class="konkaR3Shop">
		<result column="HANDLE_NAME" property="handle_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaR3ShopCustomerNameResult" class="konkaR3Shop">
		<result column="R3_CODE" property="r3_code" jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="customer_name" jdbcType="VARCHAR" />
	</resultMap>
	
	
	<resultMap id="konkaR3ShopBranchAreaNameResult" class="konkaR3Shop">
		<result column="BRANCH_AREA_NAME" property="branch_area_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaR3ShopResultForList" class="konkaR3Shop" extends="konkaR3ShopResult">
	    <result column="IMPORT_USER_NAME" property="map.import_user_name" jdbcType="VARCHAR" />
	    <result column="MMT_SHOP_ID" property="map.mmt_shop_id" jdbcType="VARCHAR" />
	    <result column="MMT_SHOP_NAME" property="map.mmt_shop_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaR3ShopResultForMMTShopList" class="konkaR3Shop" extends="konkaR3ShopResult">
	    <result column="IMPORT_USER_NAME" property="map.import_user_name" jdbcType="VARCHAR" />
	    <result column="MMT_SHOP_ID" property="map.mmt_shop_id" jdbcType="VARCHAR" />
	    <result column="MMT_SHOP_NAME" property="map.mmt_shop_name" jdbcType="VARCHAR" />
	    
	    <result column="SHOP_ID" property="map.shop_id" jdbcType="DECIMAL" />
		<result column="SHOP_NAME" property="map.shop_name" jdbcType="VARCHAR" />
		<result column="P_INDEX" property="map.p_index" jdbcType="DECIMAL" />
		<result column="IS_RURAL" property="map.is_rural" jdbcType="DECIMAL" />
		<result column="IS_AUTH" property="map.is_auth" jdbcType="DECIMAL" />
		<result column="MAIN_PD" property="map.main_pd" jdbcType="VARCHAR" />
		<result column="LINK_USER" property="map.link_user" jdbcType="VARCHAR" />
		<result column="LINK_PHONE" property="map.link_phone" jdbcType="VARCHAR" />
		<result column="STREET_ADDR" property="map.street_addr" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaR3ShopResultForStaticGroupByFGS" class="konkaR3Shop">
	    <result column="DEPT_ID" property="map.dept_id" jdbcType="DECIMAL" />
	    <result column="DEPT_SN" property="map.dept_sn" jdbcType="VARCHAR" />
	    <result column="DEPT_NAME" property="map.dept_name" jdbcType="VARCHAR" />
	    <result column="TOTAL_COUNT" property="map.total_count" jdbcType="DECIMAL" />
	    <result column="UNASSIGN_COUNT" property="map.unassign_count" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="konkaR3ShopResultForMMTShopYwyList" class="konkaR3Shop" extends="konkaR3ShopResult">
	    <result column="IMPORT_USER_NAME" property="map.import_user_name" jdbcType="VARCHAR" />
	    <result column="MMT_SHOP_ID" property="map.mmt_shop_id" jdbcType="VARCHAR" />
	    <result column="MMT_SHOP_NAME" property="map.mmt_shop_name" jdbcType="VARCHAR" />
	    
	    <result column="SHOP_ID" property="map.shop_id" jdbcType="DECIMAL" />
		<result column="SHOP_NAME" property="map.shop_name" jdbcType="VARCHAR" />
		<result column="P_INDEX" property="map.p_index" jdbcType="DECIMAL" />
		<result column="IS_RURAL" property="map.is_rural" jdbcType="DECIMAL" />
		<result column="IS_AUTH" property="map.is_auth" jdbcType="DECIMAL" />
		<result column="MAIN_PD" property="map.main_pd" jdbcType="VARCHAR" />
		<result column="LINK_USER" property="map.link_user" jdbcType="VARCHAR" />
		<result column="LINK_PHONE" property="map.link_phone" jdbcType="VARCHAR" />
		<result column="STREET_ADDR" property="map.street_addr" jdbcType="VARCHAR" />
		
		 <result column="USER_NAME" property="map.user_name" jdbcType="VARCHAR" />
		 <result column="C_NAME" property="map.c_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="sf-konkaR3Shop">
		<isNotEmpty prepend=" and " property="id">a.ID = #id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="area_code">a.AREA_CODE = #area_code:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="area_name">a.AREA_NAME = #area_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="branch_area_code">a.BRANCH_AREA_CODE = #branch_area_code:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="branch_area_name">a.BRANCH_AREA_NAME = #branch_area_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_type">a.CUSTOMER_TYPE = #customer_type:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="status">a.STATUS = #status:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="r3_code">a.R3_CODE = #r3_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code">a.R3_CODE = #map.r3_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="handle_name">a.HANDLE_NAME = #handle_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="branch_area_code_2">a.BRANCH_AREA_CODE_2 = #branch_area_code_2:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="branch_area_name_2">a.BRANCH_AREA_NAME_2 = #branch_area_name_2:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_code">a.CUSTOMER_CODE = #customer_code:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="customer_name">a.CUSTOMER_NAME = #customer_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="r3_desc">a.R3_DESC = #r3_desc:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="merge_code_2010">a.MERGE_CODE_2010 = #merge_code_2010:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="import_date">a.IMPORT_DATE = #import_date:DATE#</isNotEmpty>
		<isNotEmpty prepend=" and " property="import_user_id">a.IMPORT_USER_ID = #import_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">a.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_match">a.IS_MATCH = #is_match:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="b_lng">a.B_LNG = #b_lng:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="b_lat">a.B_LAT = #b_lat:VARCHAR#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.branch_name_like">#map.branch_name_like# like '%' || a.BRANCH_AREA_NAME || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.branch_area_name_like">a.BRANCH_AREA_NAME  like '%' || #map.branch_area_name_like# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.handle_name_like">a.HANDLE_NAME  like '%' || #map.handle_name_like:VARCHAR# || '%'</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.keyword">((a.CUSTOMER_NAME like '%' || #map.keyword:VARCHAR# || '%') or (a.AREA_NAME like '%' || #map.keyword:VARCHAR# || '%') or(a.BRANCH_AREA_NAME  like '%' || #map.keyword# || '%'))</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.code_like">((a.CUSTOMER_CODE like '%' || #map.code_like:VARCHAR# || '%') or (a.R3_CODE like '%' || #map.code_like:VARCHAR# || '%'))</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.keyword_like">((a.CUSTOMER_NAME like '%' || #map.keyword_like:VARCHAR# || '%') or (a.R3_CODE like '%' || #map.keyword_like:VARCHAR# || '%'))</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.customer_name_like">a.CUSTOMER_NAME like '%' || #map.customer_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.selects">a.id in ($map.selects$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_not_selects">a.id not in ($map.r3_not_selects$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.not_selects">b.mmt_shop_id not in ($map.not_selects$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.id_not_selects">a.id not in ($map.id_not_selects$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.branch_is_assign_ywy"><![CDATA[a.id in (select konka_r3_id from branch_assign where user_id is not null group by konka_r3_id) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.branch_is_not_assign_ywy"><![CDATA[a.id not in (select konka_r3_id from branch_assign where user_id is not null group by konka_r3_id) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cxy_id_eq"><![CDATA[
			id in (select shop_id from KONKA_MOBILE_SP_RELATION where SELLER_ID = #map.cxy_id_eq:DECIMAL#)
		]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sell_ids">
			a.r3_code in ($map.sell_ids$)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sell_not_ids">
			a.r3_code not in ($map.sell_not_ids$)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sell_type_0">a.s_id =0 </isNotEmpty>
		<isNotEmpty prepend=" and " property="map.sell_type_1"><![CDATA[a.s_id <> 0 ]]></isNotEmpty>
		
		
		<isNotEmpty prepend=" and " property="map.stock_is_report"><![CDATA[a.r3_code in (select r3_code from konka_stock_details group by r3_code) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.stock_is_not_report"><![CDATA[a.r3_code not in (select r3_code from konka_stock_details group by r3_code) ]]></isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.konka_dept_id">a.id in (select konka_r3_id from BRANCH_ASSIGN t where syb_id=#map.konka_dept_id# or fgs_id=#map.konka_dept_id# or jyb_id=#map.konka_dept_id# or bsc_id=#map.konka_dept_id#)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.ywy_user_id">a.id in (select konka_r3_id from BRANCH_ASSIGN t where user_id=#map.ywy_user_id#)</isNotEmpty>
		<!-- dept_id user_id 这两个参数要连起来一起用,单用一个会出错 -->
		<isNotEmpty prepend=" and " property="map.dept_id">a.id in (select konka_r3_id from BRANCH_ASSIGN t where syb_id=#map.dept_id# or fgs_id=#map.dept_id# or jyb_id=#map.dept_id# or bsc_id=#map.dept_id# or user_id=#map.user_id#)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code_like">a.r3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'</isNotEmpty>
    	<isNotEmpty prepend=" and " property="map.customer_code_like">a.CUSTOMER_CODE like '%' ||  #map.customer_code_like:VARCHAR# || '%'</isNotEmpty>
    	
    	<isNotEmpty prepend=" and " property="map.r3_code_and_customer_code_is_not_eq">
    		a.r3_code != a.customer_code
		</isNotEmpty>
		
		<!-- 下面的条件不维护了,如果有使用的还在下面放着,请大家在使用的时候如果发现了,就搬到上面来然后把下面的删除掉,谢谢 -->
		<isNotEmpty prepend=" and " property="map.area_name_like">a.AREA_NAME like '%' || #map.area_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.area_like"> #map.area_like:VARCHAR# like '%' || a.AREA_NAME|| '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.merge_code_like">a.MERGE_CODE_2010 like '%' || #map.merge_code_like:VARCHAR# || '%'</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.not_null_mmt_shop_id">b.mmt_shop_id is not null</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.mmt_shop_name">b.mmt_shop_name like '%' || #map.mmt_shop_name:VARCHAR# || '%'</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.is_agents"> a.id in (select konka_r3_id from KONKA_BRANCH_CATEGORY where category_id = 10)</isNotEmpty>
        <isNotEmpty prepend=" and " property="map.mmt_shop_id"> b.mmt_shop_id = #map.mmt_shop_id#</isNotEmpty>

		
		<isNotEmpty prepend=" and " property="map.mmt_shop_id_selects">
			b.mmt_shop_id in ($map.mmt_shop_id_selects$)
		</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.p_name_String">
		    a.branch_area_name in ($map.p_name_String$) 
         </isNotEmpty>
		
		
		<isNotEmpty prepend=" and " property="map.branch_is_assign"><![CDATA[a.id in (select konka_r3_id from konka_branch_assign  group by konka_r3_id) ]]></isNotEmpty>
		<isNotEmpty prepend=" and " property="map.branch_is_not_assign"><![CDATA[a.id not in (select konka_r3_id from konka_branch_assign  group by konka_r3_id) ]]></isNotEmpty>
	
	    <!-- 业务员拜访记录.Chengbing 2011.12.14  START-->
	    <isNotEmpty prepend=" and " property="map.ywy_not_null">
		    a.id in (select ba.konka_r3_id from BRANCH_ASSIGN ba where ba.user_id is not null
		    <isNotEmpty prepend=" and " property="map.ywy_name_like">
		      ba.user_id in(select c.id from konka_pe_prod_user c
	          where c.real_name like '%' || #map.ywy_name_like# || '%')
		    </isNotEmpty>)
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.ywy_id">
		      a.id in (select ba.konka_r3_id from BRANCH_ASSIGN ba where ba.user_id =#map.ywy_id#)
		</isNotEmpty>
	    <isNotEmpty prepend=" and " property="map.visit_status_0">
		   <![CDATA[ (select count(v.id) from KONKA_SHOP_VISIT v where v.SHOP_ID = a.id) = 0]]>
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.visit_status_1">
		    <![CDATA[ (SELECT MAX(vi.VISIT_COUNT) FROM KONKA_SHOP_VISIT vi WHERE vi.SHOP_ID = a.id and vi.VISIT_STATUS=#map.visit_status_1# GROUP BY vi.shop_id) > 0]]> 
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.visit_status_2">
		    <![CDATA[ (SELECT MAX(vi.VISIT_COUNT) FROM KONKA_SHOP_VISIT vi WHERE vi.SHOP_ID = a.id and vi.VISIT_STATUS=#map.visit_status_2# GROUP BY vi.shop_id) > 0]]>    
        </isNotEmpty>
        <!-- 业务员拜访记录.Chengbing 2011.12.14  END-->
        
        <isNotEmpty prepend=" and " property="map.now_id">a.id != #map.now_id#</isNotEmpty>
         
        <isNotEmpty prepend=" and " property="map.unAssignYWY">t1.user_id is null</isNotEmpty>
        
	</sql>
	
	<sql id="sf-konkaR3ShopByAddDate1">
		select a.*, b.s_id
          from KONKA_R3_SHOP a
			left join $map.tablename$ b on a.r3_code = b.cus_sn
         where 1 = 1
           and b.s_id in (select s_id
                            from (select cus_sn, max(s_id) as s_id
                                    from (select cus_sn,s_id 
                                    	from $map.tablename$ 
                                    	where 1=1 
                                    	and is_del = 0
                                    	   <isNotEmpty prepend=" and " property="map.add_date_start"><![CDATA[ADD_DATE >= to_date(#map.add_date_start#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
										   <isNotEmpty prepend=" and " property="map.add_date_end"><![CDATA[ADD_DATE <= to_date(#map.add_date_end#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
                                     <isNotEmpty prepend=" and " property="map.s_state">state = #map.s_state#</isNotEmpty>
                                    	) c
                                   where 1 = 1
                                   group by cus_sn))
		<isEmpty prepend=" " property="map.is_serach_sbsj">
          union
        select d.*, 0 as s_id
          from KONKA_R3_SHOP d
         where d.id not in
               (select a.id
                  from KONKA_R3_SHOP a
					left join $map.tablename$ b on a.r3_code = b.cus_sn
                 where 1 = 1
                   and b.s_id in (select s_id
                                    from (select cus_sn, max(s_id) as s_id
                                            from (select cus_sn,s_id 
		                                    	from $map.tablename$ 
		                                    	where 1=1 
		                                    	and is_del = 0
	                                    	   <isNotEmpty prepend=" and " property="map.add_date_start"><![CDATA[ADD_DATE >= to_date(#map.add_date_start#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
											   <isNotEmpty prepend=" and " property="map.add_date_end"><![CDATA[ADD_DATE <= to_date(#map.add_date_end#,'yyyy-MM-dd hh24:mi:ss')]]></isNotEmpty>
                                             <isNotEmpty prepend=" and " property="map.s_state">state = #map.s_state#</isNotEmpty>
                                    			) c
                                           where 1 = 1
                                           group by cus_sn))
                                           )
           and d.is_del = 0
         </isEmpty>
	</sql>
	
	
	<select id="selectKonkaR3ShopForResult" resultMap="konkaR3ShopResultForList" parameterClass="konkaR3Shop" >
	select a.*,
	       (select real_name
	          from konka_pe_prod_user c
	         where c.id = a.import_user_id) as import_user_name 
	  <isEmpty property="map.is_assign">,0 as mmt_shop_id, 0 as mmt_shop_name</isEmpty>
	  from KONKA_R3_SHOP a
	 where 1 = 1
		<include refid="sf-konkaR3Shop" />
	</select>

	<select id="selectKonkaR3Shop" resultMap="konkaR3ShopResultForMMTShopList" parameterClass="konkaR3Shop" >
	select a.*,
	       (select real_name
	          from konka_pe_prod_user c
	         where c.id = a.import_user_id) as import_user_name
	 <isNotEmpty property="map.key">,b.shop_id,b.shop_name,b.is_rural,b.is_auth,b.p_index,b.main_pd,b.link_user,b.link_phone,b.street_addr</isNotEmpty>
	 <isEmpty property="map.key">,0 as shop_id, 0 as shop_name, 0 as is_rural,0 as is_auth, 0 as p_index, 0 as main_pd, 0 as link_user, 0 as link_phone, 0 as street_addr</isEmpty>
	 <isNotEmpty property="map.is_assign">,b.mmt_shop_id, b.mmt_shop_name</isNotEmpty>
	 <isEmpty property="map.is_assign">,0 as mmt_shop_id, 0 as mmt_shop_name</isEmpty>
	  from KONKA_R3_SHOP a
	 <isNotEmpty property="map.is_assign"> left join konka_r3_mmt_match b on a.id = b.r3_shop_id</isNotEmpty>
	 where 1 = 1
	     <isNotEmpty prepend=" and " property="map.is_assign">b.id is not null</isNotEmpty>
		<include refid="sf-konkaR3Shop" />
	</select>

	<!--@Zhang,Xufeng 查询已分配(不一定匹配）的 R3 网点-->
	<select id="selectKonkaR3ShopMatchAndAssignList" resultMap="konkaR3ShopResult" parameterClass="konkaR3Shop" >
	<isNotEmpty property="row.count">
		<![CDATA[ select * from ( ]]>
	</isNotEmpty>
		 select a.*
	 	 from KONKA_R3_SHOP a
		 where 1 = 1
	 	 and a.is_del = 0
	 	<isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<!--@Zhang,Xufeng 2011-11-17 查询已分配(不一定匹配）的 R3 网点数量-->
	<select id="selectKonkaR3ShopMatchAndAssignCount" resultClass="long" parameterClass="konkaR3Shop" >
	 <isNotEmpty prepend=" " property="map.by_shop"><!-- 按网点统计  zhang，xufeng-->
	 	select count(*)
		 from KONKA_R3_SHOP a
		 where 1 = 1
		 <isNotEmpty prepend=" and " property="map.konka_jxc_dept_id"> 
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_agent">
			<!--代理商		-->
			a.id in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isNotEmpty>
		<isEmpty prepend=" and " property="map.is_agent">
			<!--经销商		-->
			a.id not in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isEmpty>
	 </isNotEmpty>
	 <isNotEmpty prepend=" " property="map.by_area"><!-- 按区域统计  du，zhiming-->
	 	select count(*)
		 from KONKA_R3_SHOP a
		 where 1 = 1  and a.is_del = 0
		 <isNotEmpty prepend=" and " property="map.area_code_search">
		  a.ID in 
         (select b.r3_shop_id from konka_r3_mmt_match b where b.mmt_shop_id in(
                 select t.shop_id
                 from entp_shop t
                 where t.p_index in (select t.p_index
                       from KONKA_BASE_PROVINCE_LIST_FOUR t
                      start with t.P_INDEX = #map.area_code_search#
                     connect by prior t.p_index = t.par_index)
         ))
		 
		 </isNotEmpty>
		  <isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_agent">
			<!--代理商		-->
			a.id in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isNotEmpty>
		<isEmpty prepend=" and " property="map.is_agent">
			<!--经销商		-->
			a.id not in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isEmpty>
		 <isNotEmpty prepend=" and " property="map.r3_code_like">
		  a.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'
        </isNotEmpty>
        </isNotEmpty>
        
        <isNotEmpty prepend=" " property="map.by_time"><!-- 按时间统计（目前与按区域逻辑一致添加此sql便于维护）  du，zhiming-->
	 	select count(*)
		 from KONKA_R3_SHOP a
		 where 1 = 1  and a.is_del = 0
		 <isNotEmpty prepend=" and " property="map.area_code_search">
		  a.ID in 
         (select b.r3_shop_id from konka_r3_mmt_match b where b.mmt_shop_id in(
                 select t.shop_id
                 from entp_shop t
                 where t.p_index in (select t.p_index
                       from KONKA_BASE_PROVINCE_LIST_FOUR t
                      start with t.P_INDEX = #map.area_code_search#
                     connect by prior t.p_index = t.par_index)
         ))
		 
		 </isNotEmpty>
		 <isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_agent">
			<!--代理商		-->
			a.id in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isNotEmpty>
		<isEmpty prepend=" and " property="map.is_agent">
			<!--经销商		-->
			a.id not in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isEmpty>
		 <isNotEmpty prepend=" and " property="map.r3_code_like">
		  a.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'
        </isNotEmpty>
        </isNotEmpty>
	 <include refid="sf-konkaR3Shop" />
	</select>
	
	<!--@Zhang,Xufeng 2011-11-17 查询已分配(不一定匹配）的 R3 网点 带分页-->
	<select id="selectKonkaR3ShopMatchAndAssignPaginatedList" resultMap="konkaR3ShopResult" parameterClass="konkaR3Shop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		 <isNotEmpty  prepend=" " property="map.by_shop"><!-- 按网点统计  zhang，xufeng-->
		  select a.*
	 	 from KONKA_R3_SHOP a
		 where 1 = 1
	 	 and a.is_del = 0
	 	<isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_agent">
			<!--代理商		-->
			a.id in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isNotEmpty>
		<isEmpty prepend=" and " property="map.is_agent">
			<!--经销商		-->
			a.id not in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isEmpty>
	 <include refid="sf-konkaR3Shop" />
	  </isNotEmpty>
	  <isNotEmpty prepend=" "  property="map.by_area"><!-- 按区域统计  du，zhiming-->
      		select a.*
		 from KONKA_R3_SHOP a
		 where 1 = 1  and a.is_del = 0
		 <isNotEmpty prepend=" and " property="map.area_code_search">
		  a.id in 
         (select b.r3_shop_id from konka_r3_mmt_match b where b.mmt_shop_id in(
                 select t.shop_id
                 from entp_shop t
                 where t.p_index in (select t.p_index
                       from KONKA_BASE_PROVINCE_LIST_FOUR t
                      start with t.P_INDEX = #map.area_code_search#
                     connect by prior t.p_index = t.par_index)
         ))
		</isNotEmpty>
		 <isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_agent">
			<!--代理商		-->
			a.id in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isNotEmpty>
		<isEmpty prepend=" and " property="map.is_agent">
			<!--经销商		-->
			a.id not in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code_like">
		  a.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'
        </isNotEmpty>
        <include refid="sf-konkaR3Shop" />
      </isNotEmpty>
      
       <isNotEmpty prepend=" "  property="map.by_time"><!-- 按时间统计（目前与按区域逻辑一致添加此sql便于维护）  du，zhiming-->
      		select a.*
		 from KONKA_R3_SHOP a
		 where 1 = 1  and a.is_del = 0
		 <isNotEmpty prepend=" and " property="map.area_code_search">
		  a.id in 
         (select b.r3_shop_id from konka_r3_mmt_match b where b.mmt_shop_id in(
                 select t.shop_id
                 from entp_shop t
                 where t.p_index in (select t.p_index
                       from KONKA_BASE_PROVINCE_LIST_FOUR t
                      start with t.P_INDEX = #map.area_code_search#
                     connect by prior t.p_index = t.par_index)
         ))
		</isNotEmpty>
		 <isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.is_agent">
			<!--代理商		-->
			a.id in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isNotEmpty>
		<isEmpty prepend=" and " property="map.is_agent">
			<!--经销商		-->
			a.id not in (select kbc.konka_r3_id
                  from konka_branch_category kbc
                 where kbc.category_id = 10
                   and kbc.mmt_shop_id is null)
		</isEmpty>
		<isNotEmpty prepend=" and " property="map.r3_code_like">
		  a.R3_CODE like '%' || #map.r3_code_like:VARCHAR# || '%'
        </isNotEmpty>
        <include refid="sf-konkaR3Shop" />
      </isNotEmpty>
	 <![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectKonkaR3ShopList" resultMap="konkaR3ShopResultForList" parameterClass="konkaR3Shop" >
	<isNotEmpty property="row.count">
		<![CDATA[ select * from ( ]]>
	</isNotEmpty>
	select a.*,
	       (select real_name
	          from konka_pe_prod_user c
	         where c.id = a.import_user_id) as import_user_name
	 <isNotEmpty property="map.is_assign">,b.mmt_shop_id, b.mmt_shop_name</isNotEmpty>
	 <isEmpty property="map.is_assign">,0 as mmt_shop_id, 0 as mmt_shop_name</isEmpty>
	  from KONKA_R3_SHOP a
	 <isNotEmpty property="map.is_assign"> left join konka_r3_mmt_match b on a.id = b.r3_shop_id</isNotEmpty>
	 where 1 = 1
		<include refid="sf-konkaR3Shop" />
		<!-- order by ID asc -->
		<isNotEmpty prepend=" and " property="map.Konka_r3_id">
			a.ID in ($map.Konka_r3_id$)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.pks">
				a.ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.konka_jxc_dept_id">
			a.ID in (select t1.konka_r3_id
                  	 from BRANCH_ASSIGN t1
					 where (t1.syb_id = #map.konka_jxc_dept_id# or t1.fgs_id = #map.konka_jxc_dept_id# or
					       t1.jyb_id = #map.konka_jxc_dept_id# or t1.bsc_id = #map.konka_jxc_dept_id#)
					   and t1.konka_r3_id != -1)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_r3">
			a.ID in (select t2.konka_r3_id
                  	 from konka_branch_category t2
					 where t2.category_id=10)
		</isNotEmpty>
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectKonkaR3ShopCount" resultClass="long" parameterClass="konkaR3Shop" >
		select count(*)
		 from KONKA_R3_SHOP a
		<isNotEmpty property="map.is_assign"> left join konka_r3_mmt_match b on a.id = b.r3_shop_id</isNotEmpty>
		<isNotEmpty property="map.unAssignYWY">
		 	 left join branch_assign t1 on t1.konka_r3_id = a.id and t1.branch_type = 1
		</isNotEmpty>
		<isNotEmpty property="map.leftYWY">
		 	 left join branch_assign t1 on t1.konka_r3_id = a.id and t1.branch_type = 1
		 	<isNotEmpty prepend=" " property="map.YWY">
			 left join konka_pe_prod_user e on e.id=t1.user_id
		 	</isNotEmpty>
		 </isNotEmpty>
		
		 where 1 = 1
		 <isNotEmpty prepend=" and " property="map.user_name_like">
		 	e.user_name like '%' || #map.user_name_like:VARCHAR# || '%' 
		 </isNotEmpty>
		   <isNotEmpty prepend=" and" property="map.is_in">
		  		a.r3_code in (select distinct column_1 from CHANNEL_DATA_IMPORT)
		   </isNotEmpty>
		<include refid="sf-konkaR3Shop" />
	</select>

	<select id="selectKonkaR3ShopStaticsGroupByFGS" resultMap="konkaR3ShopResultForStaticGroupByFGS" parameterClass="konkaR3Shop" >
		select d1.dept_id,
		       d1.dept_sn,
		       dept_name,
		       nvl(d2.total, 0) total_count,
		       nvl(d2.unassign_count, 0) unassign_count
		  from (select * from konka_dept d where d.dept_type = 3) d1
		  left join (select s1.*, s2.unassign_count
		               from (select t.branch_area_name_2, count(1) total
		                       from konka_r3_shop t
		                      group by t.branch_area_name_2) s1
		               left join (select t.branch_area_name_2,
		                                count(1) unassign_count
		                           from konka_r3_shop t
		                           left join branch_assign t1
		                             on t1.konka_r3_id = t.id
		                            and t1.branch_type = 1
		                          where t1.user_id is null
		                          group by t.branch_area_name_2) s2
		                 on s2.branch_area_name_2 = s1.branch_area_name_2) d2
		    on d2.branch_area_name_2 = d1.dept_sn
		 where 1=1
		 <isNotEmpty prepend=" and " property="map.dept_id_eq">d1.dept_id = #map.dept_id_eq:DECIMAL#</isNotEmpty>
		 order by d1.dept_name
	</select>
	
	
	<select id="selectKonkaR3ShopCountForHandle" resultClass="long" parameterClass="konkaR3Shop" >
		select count(*)
		  from
		  <isNotEmpty  property="map.is_in">
		 (
         select  DISTINCT  customer_name
        FROM KONKA_R3_SHOP 
       WHERE 1   = 1
        AND r3_code IN
        (SELECT DISTINCT column_1 FROM CHANNEL_DATA_IMPORT)
         <isNotEmpty prepend=" and " property="map.r3_code">R3_CODE = #map.r3_code:VARCHAR#</isNotEmpty>
          )
          </isNotEmpty>
		  <isNotEmpty  property="map.is_jyb">
		  ( select distinct  handle_name  from konka_r3_shop  where 1=1 
		   <isNotEmpty prepend=" and " property="map.handle_name">
		    handle_name=#map.handle_name#
		  </isNotEmpty>) 
		  </isNotEmpty>
		  
	</select>

	<select id="selectKonkaR3ShopForYwyPaginatedList" resultMap="konkaR3ShopResultForMMTShopYwyList" parameterClass="konkaR3Shop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*, e.user_name,f.c_name,
		      (select real_name
		         from konka_pe_prod_user c
		        where c.id = a.import_user_id) as import_user_name
		 <isNotEmpty property="map.key">,b.shop_id,b.shop_name,b.is_rural,b.is_auth,b.p_index,b.main_pd,b.link_user,b.link_phone,b.street_addr</isNotEmpty>
	     <isEmpty property="map.key">,0 as shop_id, 0 as shop_name, 0 as is_rural,0 as is_auth, 0 as p_index, 0 as main_pd, 0 as link_user, 0 as link_phone, 0 as street_addr</isEmpty>
		 <isNotEmpty property="map.is_assign">,b.mmt_shop_id, b.mmt_shop_name</isNotEmpty>
		 <isEmpty property="map.is_assign">,0 as mmt_shop_id, 0 as mmt_shop_name</isEmpty>
		   from KONKA_R3_SHOP a
		  
		<isNotEmpty property="map.is_assign">
		    <!-- @author Hui,Gang -->
		    <!-- @desc 当关联地区查询时处理 -->
			<isNotEmpty prepend=" " property="map.areas_ids">
				left join (select t1.*,t2.p_index from konka_r3_mmt_match t1 left join entp_shop t2 on t1.mmt_shop_id = t2.shop_id) d on a.id = d.r3_shop_id
				left join konka_base_province_list_four c on d.p_index = c.p_index 
			</isNotEmpty>
			<isEmpty prepend=" " property="map.key">left join konka_r3_mmt_match b on a.id = b.r3_shop_id </isEmpty>
			<!--@desc 取得匹配的网点信息时处理 -->
			<isNotEmpty prepend=" " property="map.key">
				left join (select t1.*,c.* from konka_r3_mmt_match t1 left join entp_shop c on t1.mmt_shop_id = c.shop_id) b on a.id = b.r3_shop_id
		    </isNotEmpty>
		    <isNotEmpty prepend=" " property="map.areas_ids">where c.par_index in ($map.areas_ids$)</isNotEmpty>
		 </isNotEmpty>
		 
		 <isNotEmpty property="map.unAssignYWY">
		 	 left join branch_assign t1 on t1.konka_r3_id = a.id and t1.branch_type = 1
		 </isNotEmpty>
		 
		 <isNotEmpty property="map.leftYWY">
		 	 left join branch_assign t1 on t1.konka_r3_id = a.id and t1.branch_type = 1
		 	<isNotEmpty prepend=" " property="map.YWY">
			 left join konka_pe_prod_user e on e.id=t1.user_id
			 left join konka_category f on f.c_index=a.customer_type
		 	</isNotEmpty>
		 </isNotEmpty>
		 
		 
		 <isEmpty prepend=" " property="map.areas_ids">where 1 = 1</isEmpty>
		 <isNotEmpty prepend=" and " property="map.user_name_like">
		 	e.user_name like '%' || #map.user_name_like:VARCHAR# || '%' 
		 </isNotEmpty>
		 <include refid="sf-konkaR3Shop" />
		 <isNotEmpty prepend=" " property="map.OrderByHandle">order by handle_name</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectKonkaR3ShopPaginatedList" resultMap="konkaR3ShopResultForMMTShopList" parameterClass="konkaR3Shop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select a.*,
		      (select real_name
		         from konka_pe_prod_user c
		        where c.id = a.import_user_id) as import_user_name
		 <isNotEmpty property="map.key">,b.shop_id,b.shop_name,b.is_rural,b.is_auth,b.p_index,b.main_pd,b.link_user,b.link_phone,b.street_addr</isNotEmpty>
	     <isEmpty property="map.key">,0 as shop_id, 0 as shop_name, 0 as is_rural,0 as is_auth, 0 as p_index, 0 as main_pd, 0 as link_user, 0 as link_phone, 0 as street_addr</isEmpty>
		 <isNotEmpty property="map.is_assign">,b.mmt_shop_id, b.mmt_shop_name</isNotEmpty>
		 <isEmpty property="map.is_assign">,0 as mmt_shop_id, 0 as mmt_shop_name</isEmpty>
		   from KONKA_R3_SHOP a
		  
		<isNotEmpty property="map.is_assign">
		    <!-- @author Hui,Gang -->
		    <!-- @desc 当关联地区查询时处理 -->
			<isNotEmpty prepend=" " property="map.areas_ids">
				left join (select t1.*,t2.p_index from konka_r3_mmt_match t1 left join entp_shop t2 on t1.mmt_shop_id = t2.shop_id) d on a.id = d.r3_shop_id
				left join konka_base_province_list_four c on d.p_index = c.p_index 
			</isNotEmpty>
			<isEmpty prepend=" " property="map.key">left join konka_r3_mmt_match b on a.id = b.r3_shop_id </isEmpty>
			<!--@desc 取得匹配的网点信息时处理 -->
			<isNotEmpty prepend=" " property="map.key">
				left join (select t1.*,c.* from konka_r3_mmt_match t1 left join entp_shop c on t1.mmt_shop_id = c.shop_id) b on a.id = b.r3_shop_id
		    </isNotEmpty>
		    <isNotEmpty prepend=" " property="map.areas_ids">where c.par_index in ($map.areas_ids$)</isNotEmpty>
		 </isNotEmpty>
		 
		 <isNotEmpty property="map.unAssignYWY">
		 	 left join branch_assign t1 on t1.konka_r3_id = a.id and t1.branch_type = 1
		 </isNotEmpty>
		 <isEmpty prepend=" " property="map.areas_ids">where 1 = 1</isEmpty>
		 <include refid="sf-konkaR3Shop" />
		 <isNotEmpty prepend=" " property="map.OrderByHandle">order by handle_name</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- 取经办处 -->
	<select id="selectKonkaR3ShopPaginatedListForStat" resultMap="konkaR3ShopHandleNameResult" parameterClass="konkaR3Shop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		
		  select distinct  handle_name ,id from konka_r3_shop  where 1=1
		 
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- 根据分公司取得该分公司下面的所有经办 -->
	<select id="selectJBDataBydeptName" resultMap="konkaR3ShopHandleNameResult2" parameterClass="konkaR3Shop" >
		 select distinct a.handle_name
			  from konka_r3_shop a
			 where 1 = 1
			<include refid="sf-konkaR3Shop" />
	</select>
	
	<select id="selectKonkaR3ShopPaginatedListGroupByName" resultMap="konkaR3ShopCustomerNameResult" parameterClass="konkaR3Shop" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		   select  DISTINCT  r3_code,customer_name
             FROM KONKA_R3_SHOP 
             WHERE 1        = 1
            AND r3_code IN
           (SELECT DISTINCT column_1 FROM CHANNEL_DATA_IMPORT  where 1=1 )
            <isNotEmpty prepend=" and " property="map.r3_code">R3_CODE = #map.r3_code:VARCHAR#</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!--  -->
	
	<select id="selectKonkaR3ShopCountByAddDate" resultClass="long" parameterClass="konkaR3Shop"  remapResults="true">
		select count(*)
		 from (
		<include refid="sf-konkaR3ShopByAddDate1" />
		  )a where 1 =1 
		<include refid="sf-konkaR3Shop" />
	</select>
	
	<!-- 根据数据上报时间取R3网点 -->
	<select id="selectKonkaR3ShopPaginatedListByAddDate" resultMap="konkaR3ShopResult" parameterClass="konkaR3Shop"  remapResults="true">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select *
		  from (
		<include refid="sf-konkaR3ShopByAddDate1" />
		  ) a where 1 =1 
		<include refid="sf-konkaR3Shop" />
		   order by s_id desc,a.id
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<!-- Li Ka 网点端进货选择康佳品牌时，通过shop_id查询其代理商（供应商） 勿删 -->
	<select id="selectKonkaR3ShopByShopId" resultMap="konkaR3ShopResult" parameterClass="konkaR3Shop" >
		select a.* from konka_r3_shop a
 		where a.id = (select t.agents_id from konka_agents_shop_rel t where t.shop_id = #map.shop_id#)
		<include refid="sf-konkaR3Shop" />
		<!-- order by ID asc -->
	</select>
	<!-- wang yang 客户进销存搜索经办维度 -->
	<select id="selectKonkaR3ShopGroupByHandleName" resultMap="konkaR3ShopHandleNameResult" parameterClass="konkaR3Shop" >
	     select max(id) as id ,a.handle_name from konka_r3_shop a 
	     where 1 = 1
	     <include refid="sf-konkaR3Shop" />
	     group by handle_name
	</select>
	<!-- wang yang 客户进销存搜索分公司维度 -->
	<select id="selectKonkaR3ShopGroupByBranchAreaName" resultMap="konkaR3ShopBranchAreaNameResult" parameterClass="konkaR3Shop" >
	     select a.branch_area_name from konka_r3_shop a 
	     where 1 = 1
	     <include refid="sf-konkaR3Shop" />
	     group by branch_area_name
	</select>
	
	<!-- 取康佳R3网点所属分公司，Ren zhong，2013-06-09 -->
	<resultMap id="konkaR3ShopWithBranchAssignResult" class="konkaR3Shop" extends="konkaR3ShopResult">
		<result column="FGS_ID" property="map.fgs_id" jdbcType="DECIMAL" />
	</resultMap>
	
	<select id="selectKonkaR3ShopWithBranchAssign" resultMap="konkaR3ShopWithBranchAssignResult" parameterClass="konkaR3Shop">
		select a.*,t1.fgs_id
		  from branch_assign t1, KONKA_R3_SHOP a
		 where t1.konka_r3_id = a.id
		<include refid="sf-konkaR3Shop" />
	</select>
	
	<insert id="insertKonkaR3Shop" parameterClass="konkaR3Shop">
		<selectKey resultClass="long" keyProperty="id">select SEQ_KONKA_R3_SHOP.nextval as id from dual</selectKey>
		<![CDATA[insert into KONKA_R3_SHOP (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="area_code">AREA_CODE</isNotNull>	
			<isNotNull prepend="," property="area_name">AREA_NAME</isNotNull>	
			<isNotNull prepend="," property="branch_area_code">BRANCH_AREA_CODE</isNotNull>	
			<isNotNull prepend="," property="branch_area_name">BRANCH_AREA_NAME</isNotNull>	
			<isNotNull prepend="," property="customer_type">CUSTOMER_TYPE</isNotNull>	
			<isNotNull prepend="," property="status">STATUS</isNotNull>	
			<isNotNull prepend="," property="r3_code">R3_CODE</isNotNull>	
			<isNotNull prepend="," property="handle_name">HANDLE_NAME</isNotNull>	
			<isNotNull prepend="," property="branch_area_code_2">BRANCH_AREA_CODE_2</isNotNull>	
			<isNotNull prepend="," property="branch_area_name_2">BRANCH_AREA_NAME_2</isNotNull>	
			<isNotNull prepend="," property="customer_code">CUSTOMER_CODE</isNotNull>	
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME</isNotNull>	
			<isNotNull prepend="," property="r3_desc">R3_DESC</isNotNull>	
			<isNotNull prepend="," property="merge_code_2010">MERGE_CODE_2010</isNotNull>	
			<isNotNull prepend="," property="import_date">IMPORT_DATE</isNotNull>	
			<isNotNull prepend="," property="import_user_id">IMPORT_USER_ID</isNotNull>	
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>	
			<isNotNull prepend="," property="is_match">IS_MATCH</isNotNull>	
			<isNotNull prepend="," property="b_lng">B_LNG</isNotNull>	
			<isNotNull prepend="," property="b_lat">B_LAT</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="area_code">#area_code:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="area_name">#area_name:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="branch_area_code">#branch_area_code:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="branch_area_name">#branch_area_name:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="customer_type">#customer_type:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="status">#status:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="r3_code">#r3_code:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="handle_name">#handle_name:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="branch_area_code_2">#branch_area_code_2:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="branch_area_name_2">#branch_area_name_2:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="customer_code">#customer_code:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="customer_name">#customer_name:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="r3_desc">#r3_desc:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="merge_code_2010">#merge_code_2010:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="import_date">#import_date:DATE#</isNotNull>	
			<isNotNull prepend="," property="import_user_id">#import_user_id:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#</isNotNull>	
			<isNotNull prepend="," property="is_match">#is_match:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="b_lng">#b_lng:VARCHAR#</isNotNull>	
			<isNotNull prepend="," property="b_lat">#b_lat:VARCHAR#</isNotNull>		
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateKonkaR3Shop" parameterClass="konkaR3Shop">
		update KONKA_R3_SHOP
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="area_code">AREA_CODE = #area_code:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="area_name">AREA_NAME = #area_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="branch_area_code">BRANCH_AREA_CODE = #branch_area_code:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="branch_area_name">BRANCH_AREA_NAME = #branch_area_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_type">CUSTOMER_TYPE = #customer_type:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="status">STATUS = #status:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="r3_code">R3_CODE = #r3_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="handle_name">HANDLE_NAME = #handle_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="branch_area_code_2">BRANCH_AREA_CODE_2 = #branch_area_code_2:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="branch_area_name_2">BRANCH_AREA_NAME_2 = #branch_area_name_2:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_code">CUSTOMER_CODE = #customer_code:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="customer_name">CUSTOMER_NAME = #customer_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="r3_desc">R3_DESC = #r3_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="merge_code_2010">MERGE_CODE_2010 = #merge_code_2010:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="import_date">IMPORT_DATE = #import_date:DATE#</isNotNull>
			<isNotNull prepend="," property="import_user_id">IMPORT_USER_ID = #import_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL = #is_del:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_match">IS_MATCH = #is_match:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="b_lng">B_LNG = #b_lng:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="b_lat">B_LAT = #b_lat:VARCHAR#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
			
			<isNotNull prepend=" " property="r3_code">R3_CODE = #r3_code:VARCHAR#</isNotNull>
		</isEmpty>
	</update>

	<delete id="deleteKonkaR3Shop" parameterClass="konkaR3Shop">
		delete from KONKA_R3_SHOP where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>