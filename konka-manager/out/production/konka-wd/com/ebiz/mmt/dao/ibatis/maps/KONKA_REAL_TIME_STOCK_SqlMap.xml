<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BASE_BRAND_INFO">

	<typeAlias alias="konkaRealTimeStock" type="com.ebiz.mmt.domain.KonkaRealTimeStock" />
	<typeAlias alias="pePdModel" type="com.ebiz.mmt.domain.PePdModel" />

	

	<sql id="sf-konkaRealTimeStock">

	</sql>
	
	
	
	<resultMap id="konkaRealTimeStockResultPdId" class="pePdModel">
		<result column="PD_ID" property="pd_id" jdbcType="DECIMAL" />
		<result column="MD_NAME" property="md_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaRealTimeStockResult" class="pePdModel">
		<result column="PD_ID" property="pd_id" jdbcType="DECIMAL" />
		<result column="MD_NAME" property="md_name" jdbcType="VARCHAR" />
		
		<result column="STOCK_COUNT" property="map.stock_count" jdbcType="DECIMAL" />
		<result column="STOCK_COST" property="map.stock_cost" jdbcType="DECIMAL" />
		<result column="STOCK_DATE" property="map.stock_date" jdbcType="DATETIME" />
		<result column="CLS_NAME" property="map.cls_name" jdbcType="DECIMAL" />
		
	</resultMap>
	
	<resultMap id="konkaRealTimeStockResultForNew" class="pePdModel" extends="konkaRealTimeStockResult">
		<result column="SELL_COUNT" property="map.sell_count" jdbcType="DECIMAL" />
		<result column="SELL_MONEY" property="map.sell_money" jdbcType="DECIMAL" />
		<result column="CHANNEL_COUNT" property="map.channel_count" jdbcType="DECIMAL" />
		<result column="CHANNEL_MONEY" property="map.channel_money" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="konkaRealTimeStockTotleForNew" class="pePdModel" >
		<result column="SELL_COUNT_TOTLE" property="map.sell_count_totle" jdbcType="DECIMAL" />
		<result column="SELL_MONEY_TOTLE" property="map.sell_money_totle" jdbcType="DECIMAL" />
		<result column="CHANNEL_COUNT_TOTLE" property="map.channel_count_totle" jdbcType="DECIMAL" />
		<result column="CHANNEL_MONEY_TOTLE" property="map.channel_money_totle" jdbcType="DECIMAL" />
	</resultMap>
	
	<select id="selectPePdModelWithStockDetails" resultMap="konkaRealTimeStockResult" parameterClass="pePdModel">
	select  c.stock_count, c.stock_cost ,c.stock_date, a.md_name,a.pd_id,(select cls_name from konka_base_pd_class where cls_id = a.cls_id) as cls_name
	 from KONKA_PE_PD_MODEL a 
	  left join (select t.pd_id, stock_count, stock_cost ,stock_date
               from Konka_Stock_Details t
              where r3_code = #map.keyword#)  c
   			 on c.pd_id = a.pd_id
	 where 1 = 1
	 and a.is_del=0 
	 <isNotEmpty prepend=" and " property="map.pd_ids">a.pd_id in($map.pd_ids$)</isNotEmpty>
	</select>

	<select id="selectIsUseProductByKeyword" resultMap="konkaRealTimeStockResultPdId" parameterClass="pePdModel">
		select b.md_name,b.pd_id
		  from (select distinct pd_id
		          from (
		                select pd_id from konka_pe_pd_model where md_name in(
		                 select column_11
		                   from CHANNEL_DATA_IMPORT s
		                    where 1=1
		                   <isNotEmpty prepend=" and " property="map.keyword">s.column_1 = #map.keyword#</isNotEmpty>
		                   <isNotEmpty prepend=" and " property="map.customer_name_like">s.column_1 in (select r3_code from konka_r3_shop where customer_name like '%'|| #map.customer_name_like# ||'%')</isNotEmpty>
		                   <isNotEmpty prepend=" and " property="map.customer_code">s.column_1 in (select r3_code from konka_r3_shop where customer_code = #map.customer_code# )</isNotEmpty>
		                   <isNotEmpty prepend=" and " property="map.handle_name">s.column_1 in (select r3_code from KONKA_R3_SHOP t where t.handle_name = #map.handle_name#)</isNotEmpty>
		                   <isNotEmpty prepend=" and " property="map.branch_area_name">s.column_1 in (select r3_code from KONKA_R3_SHOP t where t.branch_area_name = #map.branch_area_name#)</isNotEmpty>
		                   )
		               union
		                select pd_id
		                   from KONKA_SELL_DETAILS g left join konka_sell h on g.s_id=h.s_id  
		                 where 1 = 1
		                 and h.state=1 and h.is_del=0 
		                  <isNotEmpty prepend=" and " property="map.keyword">g.s_id in (select s_id from KONKA_SELL where cus_sn = #map.keyword#)</isNotEmpty>
		                  <isNotEmpty prepend=" and " property="map.customer_name_like">g.s_id in (select s_id from KONKA_SELL where cus_sn in(select r3_code from konka_r3_shop where customer_name like '%'|| #map.customer_name_like# ||'%'))</isNotEmpty>
		                  <isNotEmpty prepend=" and " property="map.customer_code">g.s_id in (select s_id from KONKA_SELL where cus_sn in (select r3_code from konka_r3_shop where customer_code = #map.customer_code# ))</isNotEmpty>
		                  <isNotEmpty prepend=" and " property="map.handle_name">g.s_id in (select s_id from KONKA_SELL where cus_sn in (select r3_code from KONKA_R3_SHOP t where t.handle_name = #map.handle_name#))</isNotEmpty>
		                  <isNotEmpty prepend=" and " property="map.branch_area_name">g.s_id in (select s_id from KONKA_SELL where cus_sn in (select r3_code from KONKA_R3_SHOP t where t.branch_area_name = #map.branch_area_name#))</isNotEmpty>
		               union
		                 select pd_id 
		                 from konka_stock_details st
		                  where 1=1
		                  	<isNotEmpty prepend=" and " property="map.keyword">st.r3_code = #map.keyword#</isNotEmpty>
		                  	<isNotEmpty prepend=" and " property="map.customer_name_like">st.r3_code in (select r3_code from konka_r3_shop where customer_name like '%'|| #map.customer_name_like# ||'%')</isNotEmpty>
		                  	<isNotEmpty prepend=" and " property="map.customer_code">st.r3_code in (select r3_code from konka_r3_shop where customer_code = #map.customer_code# )</isNotEmpty>
		                  )) a
		  left join KONKA_PE_PD_MODEL b
		    on a.pd_id = b.pd_id
		    where 1 = 1
		  <isNotEmpty prepend=" and " property="map.md_name_like">b.md_name like'%'|| #map.md_name_like# ||'%'</isNotEmpty>
		  <isNotEmpty prepend=" and " property="cls_id">b.cls_id = #cls_id#</isNotEmpty>
		  order by b.md_name
	</select>
	
	<select id="selectRealTimeStockByKeyword" resultMap="konkaRealTimeStockResultForNew" parameterClass="pePdModel">
select c.id,
       c.stock_count,
       c.stock_cost,
       to_char(c.stock_date, 'yyyy-MM-dd hh24:mi:ss') as stock_date,
       b.md_name,
       b.pd_id,
       (select cls_name from konka_base_pd_class where cls_id = b.cls_id) as cls_name,
       (select decode(sum(sell_count), null, 0, sum(sell_count))
          from konka_sell_details s
          left join konka_sell t
            on s.s_id = t.s_id
         where t.state = 1
           and t.is_del = 0
         and <![CDATA[t.sell_date >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,to_date(#map.date_start#,'yyyy-MM-dd hh24:mi:ss')))]]>
           and <![CDATA[t.sell_date <= to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and s.pd_id = b.pd_id
           and t.state = 1
           and t.cus_sn = #map.keyword#) as sell_count,
       (select decode(sum(sell_money * sell_count),
                      null,
                      0,
                      sum(sell_money * sell_count))
          from konka_sell_details s
          left join konka_sell t
            on s.s_id = t.s_id
         where t.state = 1
           and t.is_del = 0
           and <![CDATA[t.sell_date >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,
                               to_date(#map.date_start#,'yyyy-MM-dd hh24:mi:ss')))]]>
           and <![CDATA[t.sell_date <= to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and s.pd_id = b.pd_id
           and t.state = 1
           and t.cus_sn = #map.keyword#) as sell_money,
       (select decode(sum(column_12), null, 0, sum(column_12))
          from channel_data_import d
         where d.column_11 = (select md_name
                                from konka_pe_pd_model e
                               where e.pd_id = b.pd_id)
           and d.column_7 >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,
                               to_date(#map.date_start#,
                                       'yyyy-MM-dd hh24:mi:ss')))
           and <![CDATA[d.column_7 <=to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and d.column_1 = #map.keyword#) as channel_count,
       (select decode(sum(column_14), null, 0, sum(column_14))
          from channel_data_import d
         where d.column_11 = (select md_name
                                from konka_pe_pd_model e
                               where e.pd_id = b.pd_id)
           and d.column_7 >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,
                               to_date(#map.date_start#,
                                       'yyyy-MM-dd hh24:mi:ss')))
           and <![CDATA[d.column_7 <= to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and d.column_1 = #map.keyword#) as channel_money
  from (select distinct pd_id
          from (select pd_id
                  from konka_pe_pd_model
                 where md_name in (select s.column_11
                                     from CHANNEL_DATA_IMPORT s
                                    where 1 = 1
                                      and s.column_1 = #map.keyword#)
                union
                select pd_id
                  from KONKA_SELL_DETAILS
                 where 1 = 1
                   and s_id in
                       (select s_id from KONKA_SELL where cus_sn = #map.keyword# and state = 1 and is_del=0)
                 union
                 select pd_id
                   from KONKA_STOCK_DETAILS
                    where 1=1
                     and r3_code = #map.keyword#      
                       )) a
  left join KONKA_PE_PD_MODEL b
    on a.pd_id = b.pd_id
  left join (select id, pd_id, stock_count, stock_cost, stock_date
               from Konka_Stock_Details t
              where r3_code = #map.keyword#
                and <![CDATA[STOCK_DATE <=
                    to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss'))]]> c
    on c.pd_id = b.pd_id
    where 1=1 
    <isNotEmpty prepend=" and " property="map.md_name_like">b.md_name like'%'|| #map.md_name_like# ||'%'</isNotEmpty>
    <isNotEmpty prepend=" and " property="cls_id">b.cls_id = #cls_id#</isNotEmpty>
    order by b.md_name
	</select>
<select id="selectRealTimeStockTotleByKeyword" resultMap="konkaRealTimeStockTotleForNew" parameterClass="pePdModel">
select sum(sell_count) as sell_count_totle, sum(sell_money) as sell_money_totle, sum(channel_count) as channel_count_totle,sum(channel_money) as channel_money_totle from (
select c.id,
       c.stock_count,
       c.stock_cost,
       c.stock_date,
       b.name,
       b.pd_id,
       (select cls_name from konka_base_pd_class where cls_id = b.cls_id) as cls_name,
       (select decode(sum(sell_count), null, 0, sum(sell_count))
          from konka_sell_details s
          left join konka_sell t
            on s.s_id = t.s_id
         where t.state = 1
           and t.is_del = 0
         and t.sell_date >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,to_date(#map.date_start#,'yyyy-MM-dd hh24:mi:ss')))
           and <![CDATA[t.sell_date <= to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and s.pd_id = b.pd_id
           and t.state = 1
           and t.cus_sn = #map.keyword#) as sell_count,
       (select decode(sum(sell_money * sell_count),
                      null,
                      0,
                      sum(sell_money * sell_count))
          from konka_sell_details s
          left join konka_sell t
            on s.s_id = t.s_id
         where t.state = 1
           and t.is_del = 0
           and t.sell_date >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,
                               to_date(#map.date_start#,'yyyy-MM-dd hh24:mi:ss')))
           and <![CDATA[t.sell_date <= to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and s.pd_id = b.pd_id
           and t.state = 1
           and t.cus_sn = #map.keyword#) as sell_money,
       (select decode(sum(column_12), null, 0, sum(column_12))
          from channel_data_import d
         where d.column_11 = (select md_name
                                from konka_pe_pd_model e
                               where e.pd_id = b.pd_id)
           and d.column_7 >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,
                               to_date(#map.date_start#,
                                       'yyyy-MM-dd hh24:mi:ss')))
           and <![CDATA[d.column_7 <=to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and d.column_1 = #map.keyword#) as channel_count,
       (select decode(sum(column_14), null, 0, sum(column_14))
          from channel_data_import d
         where d.column_11 = (select md_name
                                from konka_pe_pd_model e
                               where e.pd_id = b.pd_id)
           and d.column_7 >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      greatest(c.stock_date,
                               to_date(#map.date_start#,
                                       'yyyy-MM-dd hh24:mi:ss')))
           and <![CDATA[d.column_7 <= to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and d.column_1 = #map.keyword#) as channel_money,
       (select decode(sum(sell_count), null, 0, sum(sell_count))
          from konka_sell_details s
          left join konka_sell t
            on s.s_id = t.s_id
         where t.state = 1
           and t.is_del = 0
           and <![CDATA[t.sell_date >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss'),
                      c.stock_date)]]>
           and <![CDATA[t.sell_date <=
               to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and s.pd_id = b.pd_id
           and t.state = 1
           and t.cus_sn = #map.keyword#) as sell_count_end,
       (select decode(sum(column_12), null, 0, sum(column_12))
          from channel_data_import d
         where d.column_11 = (select md_name
                                from konka_pe_pd_model e
                               where e.pd_id = b.pd_id)
           and <![CDATA[d.column_7 >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss'),
                      c.stock_date)]]>
           and <![CDATA[d.column_7 <=
               to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and d.column_1 = #map.keyword#) as channel_count_end,
           
       (select decode(sum(column_14),null,0,sum(column_14)) from channel_data_import d where d.column_11 = (select md_name from konka_pe_pd_model e where e.pd_id=b.pd_id) and <![CDATA[d.column_7 >= decode(c.stock_date,null,to_date(#map.date_end#,'yyyy-MM-dd hh24:mi:ss'),c.stock_date) and d.column_7 <= to_date(#map.date_end#,'yyyy-MM-dd hh24:mi:ss')]]> and d.column_1=#map.keyword#) as channel_money_end,
       (select decode(sum(sell_count), null, 0, sum(sell_count))
          from konka_sell_details s
          left join konka_sell t
            on s.s_id = t.s_id
         where t.state = 1
           and t.is_del = 0
           and <![CDATA[t.sell_date >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      c.stock_date)]]>
           and <![CDATA[t.sell_date <=
               to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and s.pd_id = b.pd_id
           and t.state = 1
           and t.cus_sn = #map.keyword#) as sell_count_start,
       
       (select decode(sum(column_12), null, 0, sum(column_12))
          from channel_data_import d
         where d.column_11 = (select md_name
                                from konka_pe_pd_model e
                               where e.pd_id = b.pd_id)
           and <![CDATA[d.column_7 >=
               decode(c.stock_date,
                      null,
                      to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss'),
                      c.stock_date)]]>
           and <![CDATA[d.column_7 <=
               to_date(#map.date_start#, 'yyyy-MM-dd hh24:mi:ss')]]>
           and d.column_1 = #map.keyword#) as channel_count_start,
           
       (select decode(sum(column_14),null,0,sum(column_14)) from channel_data_import d where d.column_11 = (select md_name from konka_pe_pd_model e where e.pd_id=b.pd_id) and <![CDATA[d.column_7 >= decode(c.stock_date,null,to_date(#map.date_end#,'yyyy-MM-dd hh24:mi:ss'),c.stock_date) and d.column_7 <= to_date(#map.date_end#,'yyyy-MM-dd hh24:mi:ss')]]> and d.column_1=#map.keyword#) as channel_money_start

  from (select distinct pd_id
          from (select pd_id
                  from konka_pe_pd_model
                 where md_name in (select s.column_11
                                     from CHANNEL_DATA_IMPORT s
                                    where 1 = 1
                                      and s.column_1 = #map.keyword#)
                union
                select pd_id
                  from KONKA_SELL_DETAILS
                 where 1 = 1
                   and s_id in
                       (select s_id from KONKA_SELL where cus_sn = #map.keyword# and state = 1 and is_del=0))) a
  left join KONKA_PE_PD_MODEL b
    on a.pd_id = b.pd_id
  left join (select id, pd_id, stock_count, stock_cost, stock_date
               from Konka_Stock_Details t
              where r3_code = #map.keyword#
                and <![CDATA[STOCK_DATE <=
                    to_date(#map.date_end#, 'yyyy-MM-dd hh24:mi:ss'))]]> c
    on c.pd_id = b.pd_id

)
</select>

</sqlMap>