<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="KONKA_XX_STD_STORE">

	<typeAlias alias="konkaXxStdStore" type="com.ebiz.mmt.domain.KonkaXxStdStore" />

	

	<resultMap id="konkaXxStdStoreResultForList" class="konkaXxStdStore">
		<result column="FACTORY_ID" property="factory_id" jdbcType="VARCHAR" />
		<result column="STORE_ID" property="store_id" jdbcType="VARCHAR" />
		<result column="STORE_DESC" property="store_desc" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="dept_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="konkaXxStdStoreResult" class="konkaXxStdStore" extends="konkaXxStdStoreResultForList">
	</resultMap>
	
	<resultMap id="konkaXxFactoryIdResult" class="konkaXxStdStore">
		<result column="FACTORY_ID" property="factory_id" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="konkaXxStoreIdResult" class="konkaXxStdStore">
		<result column="FACTORY_ID" property="factory_id" jdbcType="VARCHAR" />
		<result column="STORE_ID" property="store_id" jdbcType="VARCHAR" />
		<result column="STORE_DESC" property="store_desc" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-konkaXxStdStore">
		<isNotEmpty prepend=" and " property="factory_id">FACTORY_ID = #factory_id:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="store_id">STORE_ID = #store_id:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="store_desc">STORE_DESC = #store_desc:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="dept_name">DEPT_NAME = #dept_name:VARCHAR#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.store_id_like">UPPER(store_id) like '%' || UPPER(#map.store_id_like:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.factory_id_like">UPPER(factory_id) like '%' || UPPER(#map.factory_id_like:VARCHAR#) || '%'</isNotEmpty>
	</sql>

	<select id="selectKonkaXxStdStore" resultMap="konkaXxStdStoreResult" parameterClass="konkaXxStdStore" >
		select * from KONKA_XX_STD_STORE where 1 = 1
		<include refid="sf-konkaXxStdStore" />
	</select>

	<select id="selectKonkaXxStdStoreList" resultMap="konkaXxStdStoreResultForList" parameterClass="konkaXxStdStore" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_XX_STD_STORE where 1 = 1
		<include refid="sf-konkaXxStdStore" />
		order by store_desc asc, FACTORY_ID asc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectKonkaXxFactoryIdList" resultMap="konkaXxFactoryIdResult" parameterClass="konkaXxStdStore" >
		SELECT DISTINCT (factory_id)
		  FROM KONKA_XX_STD_STORE
		 WHERE dept_name = (SELECT dept_name FROM konka_dept WHERE dept_id = #map.dept_id:DECIMAL#)
		 order by factory_id asc
	</select>
	
	<select id="selectKonkaXxStoreIdList" resultMap="konkaXxStoreIdResult" parameterClass="konkaXxStdStore" >
		SELECT factory_id, store_id, store_desc
		  FROM KONKA_XX_STD_STORE
		 WHERE dept_name = (SELECT dept_name FROM konka_dept WHERE dept_id = #map.dept_id:DECIMAL#)
		   and factory_id = #factory_id:VARCHAR#
		   order by store_desc asc
	</select>

	<select id="selectKonkaXxStdStoreCount" resultClass="long" parameterClass="konkaXxStdStore" >
		select count(*) from KONKA_XX_STD_STORE where 1 = 1
		<include refid="sf-konkaXxStdStore" />
	</select>

	<select id="selectKonkaXxStdStorePaginatedList" resultMap="konkaXxStdStoreResult" parameterClass="konkaXxStdStore" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from KONKA_XX_STD_STORE where 1 = 1
		<include refid="sf-konkaXxStdStore" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertKonkaXxStdStore" parameterClass="konkaXxStdStore">
		<![CDATA[insert into KONKA_XX_STD_STORE (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="factory_id">FACTORY_ID</isNotNull>	
			<isNotNull prepend="," property="store_id">STORE_ID</isNotNull>	
			<isNotNull prepend="," property="store_desc">STORE_DESC</isNotNull>	
			<isNotNull prepend="," property="dept_name">DEPT_NAME</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="factory_id">#factory_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_id">#store_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_desc">#store_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="dept_name">#dept_name:VARCHAR#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateKonkaXxStdStore" parameterClass="KonkaXxStdStore">
		update KONKA_XX_STD_STORE
		<dynamic prepend="set">
			<isNotNull prepend="," property="factory_id">FACTORY_ID = #factory_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_id">STORE_ID = #store_id:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="store_desc">STORE_DESC = #store_desc:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="dept_name">DEPT_NAME = #dept_name:VARCHAR#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteKonkaXxStdStore" parameterClass="KonkaXxStdStore">
		delete from KONKA_XX_STD_STORE where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>