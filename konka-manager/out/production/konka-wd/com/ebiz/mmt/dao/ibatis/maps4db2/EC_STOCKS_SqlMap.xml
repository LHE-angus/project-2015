<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="EC_STOCKS">

	<typeAlias alias="ecStocks" type="com.ebiz.mmt.domain.EcStocks" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertEcStocks" />
		<flushOnExecute statement="updateEcStocks" />
		<flushOnExecute statement="deleteEcStocks" />
	</cacheModel>

	<resultMap id="ecStocksResultForList" class="ecStocks">
		<result column="STORE_ID" property="store_id" jdbcType="DECIMAL" />
		<result column="GOODS_ID" property="goods_id" jdbcType="DECIMAL" />
		<result column="STOCKS" property="stocks" jdbcType="DECIMAL" />
		<result column="TOTAL_COST" property="total_cost" jdbcType="DECIMAL" />
		<result column="PLAT_SYS" property="plat_sys" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="ecStocksResult" class="ecStocks" extends="ecStocksResultForList">
	</resultMap>
	
	<!-- Pan,Gang -->
	<resultMap id="ecStocksResultForDetailList" class="ecStocks" extends="ecStocksResultForList">
			<result column="STORE_TYPE" property="map.store_type" jdbcType="DECIMAL" />
			<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
			<result column="STORE_ADDR" property="map.store_addr" jdbcType="VARCHAR" />
			<result column="PD_NAME" property="map.pd_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="ecStocksResultForDetailNewList" class="ecStocks" extends="ecStocksResultForList">
			<result column="STORE_TYPE" property="map.store_type" jdbcType="DECIMAL" />
			<result column="STORE_NAME" property="map.store_name" jdbcType="VARCHAR" />
			<result column="STORE_ADDR" property="map.store_addr" jdbcType="VARCHAR" />
			<result column="PD_NAME" property="map.pd_name" jdbcType="VARCHAR" />
			<result column="DEPT_ID" property="map.dept_id" jdbcType="DECIMAL" />
	</resultMap>
	
	<!-- add by Jiang,JiaYong -->
	<resultMap id="ecStocksIncludePindexResultList" class="ecStocks" extends="ecStocksResultForList">
		<result column="PINDEX_ID" property="map.pindex_id" jdbcType="DECIMAL" />
		<result column="P_NAME" property="map.p_name" jdbcType="VARCHAR" />
		<result column="STORE_TYPE" property="map.store_type" jdbcType="DECIMAL" />
	</resultMap>
	
	<resultMap id="ecStocksIncludePindexNewResultList" class="ecStocks" extends="ecStocksResultForList"> 
		<result column="STORE_TYPE" property="map.store_type" jdbcType="DECIMAL" />
	</resultMap>

	<sql id="sf-ecStocks">
		<isNotEmpty prepend=" and " property="store_id">STORE_ID = #store_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="goods_id">GOODS_ID = #goods_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="stocks">STOCKS = #stocks:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="total_cost">TOTAL_COST = #total_cost:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="plat_sys">PLAT_SYS = #plat_sys:DECIMAL#</isNotEmpty>
	
		<isNotEmpty prepend=" and " property="map.store_id_in">
		STORE_ID IN (SELECT store_id
                            FROM EC_BASE_STORE
                           WHERE DEPT_ID = 0 AND STORE_TYPE = 0 AND PLAT_SYS = 0) 
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.store_id_in_2">
        <isNotEmpty prepend=" " property="map.dept_id_eq" >
		STORE_ID IN (SELECT store_id
                            FROM EC_BASE_STORE
                           WHERE DEPT_ID = #map.dept_id_eq# AND STORE_TYPE = 0 AND PLAT_SYS = 1)
        </isNotEmpty>                   
        </isNotEmpty>
	</sql>
	
	<sql id="sf-ecStocks-t">
		<isNotEmpty prepend=" and " property="store_id">t.STORE_ID = #store_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="goods_id">t.GOODS_ID = #goods_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="stocks">t.STOCKS = #stocks:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="total_cost">t.TOTAL_COST = #total_cost:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="plat_sys">t.PLAT_SYS = #plat_sys:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_id_in">
		t.STORE_ID IN (SELECT store_id
                            FROM EC_BASE_STORE
                           WHERE DEPT_ID IS NULL AND STORE_TYPE = 0)
        </isNotEmpty>
        <isNotEmpty prepend=" and " property="map.store_id_in_2">
        <isNotEmpty prepend=" " property="map.dept_id_eq" >
		t.STORE_ID IN (SELECT store_id
                            FROM EC_BASE_STORE
                           WHERE DEPT_ID = #map.dept_id_eq# AND STORE_TYPE = 0)
        </isNotEmpty>                   
        </isNotEmpty>
	</sql>

	<select id="selectEcStocks" resultMap="ecStocksResult" parameterClass="ecStocks" cacheModel="oneDayCache">
		select * from EC_STOCKS where 1 = 1
		<include refid="sf-ecStocks" />
	</select>

	<select id="selectEcStocksList" resultMap="ecStocksResultForList" parameterClass="ecStocks" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from EC_STOCKS where 1 = 1
		<include refid="sf-ecStocks" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectEcStocksForStoreTypeList" resultMap="ecStocksResultForDetailList" parameterClass="ecStocks" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		<isNotEmpty prepend="" property="map.is_zb">
			SELECT t.*, a.store_name AS store_name,a.store_type AS store_type,a.store_addr AS store_addr,b.pd_name AS pd_name FROM ec_stocks t
	           LEFT JOIN ec_base_store a ON t.store_id = a.store_id LEFT JOIN konka_bcomp_pd b ON t.GOODS_ID = b.ID WHERE 1 = 1 and a.own_sys = 1
		<include refid="sf-ecStocks-t" />
		</isNotEmpty>
		<isNotEmpty prepend="" property="map.is_fgs">
			SELECT t.*, a.store_name AS store_name,a.store_type AS store_type,a.store_addr AS store_addr,b.pd_name AS pd_name
                FROM ec_stocks t LEFT JOIN ec_base_store a ON t.store_id = a.store_id LEFT JOIN konka_bcomp_pd b ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=2 and a.DEPT_ID=#map.is_fgs# and a.own_sys = #map.own_sys#
				 union
                 SELECT t.*, a.store_name AS store_name,
                       a.store_type AS store_type,
                       a.store_addr AS store_addr,
                       b.pd_name AS pd_name
                  FROM ec_stocks t
                       LEFT JOIN ec_base_store a
                          ON t.store_id = a.store_id
                       LEFT JOIN konka_bcomp_pd b
                          ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=0 and a.DEPT_ID=#map.is_fgs# and a.own_sys = #map.own_sys#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">a.store_type=#map.store_type#</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectEcStocksForStoreTypeCount" resultClass="long" parameterClass="ecStocks" cacheModel="oneDayCache">
		select count(*) from (
		<isNotEmpty prepend="" property="map.is_zb">
		select t.*,a.store_name as store_name,a.store_type as store_type,a.store_addr as store_addr,b.pd_name as pd_name
		from ec_stocks t left join ec_base_store a on t.store_id = a.store_id left join konka_bcomp_pd b on t.GOODS_ID=b.ID where 1 = 1 and a.own_sys = 1
		<include refid="sf-ecStocks-t" />
		</isNotEmpty>
		<isNotEmpty prepend="" property="map.is_fgs">
			SELECT t.*, a.store_name AS store_name,a.store_type AS store_type,a.store_addr AS store_addr,b.pd_name AS pd_name
               FROM ec_stocks t LEFT JOIN ec_base_store a ON t.store_id = a.store_id LEFT JOIN konka_bcomp_pd b ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=2 and a.DEPT_ID=#map.is_fgs# and a.own_sys = #map.own_sys#
                 union
                 SELECT t.*, a.store_name AS store_name,
                       a.store_type AS store_type,
                       a.store_addr AS store_addr,
                       b.pd_name AS pd_name
                  FROM ec_stocks t
                       LEFT JOIN ec_base_store a
                          ON t.store_id = a.store_id
                       LEFT JOIN konka_bcomp_pd b
                          ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=0 and a.DEPT_ID=#map.is_fgs# and a.own_sys = #map.own_sys#
		</isNotEmpty>
		)
	</select>
	
	
	<select id="selectEcStocksForStoreTypeNewList" resultMap="ecStocksResultForDetailNewList" parameterClass="ecStocks" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		<isNotEmpty prepend="" property="map.is_zb">
			SELECT t.*, a.store_name AS store_name,a.store_type AS store_type,a.store_addr AS store_addr,b.pd_name AS pd_name,
                       a.DEPT_ID as dept_id FROM ec_stocks t
	           LEFT JOIN ec_base_store a ON t.store_id = a.store_id LEFT JOIN konka_bcomp_pd b ON t.GOODS_ID = b.ID WHERE 1 = 1 and a.own_sys = #map.own_sys#
		<include refid="sf-ecStocks-t" />
		</isNotEmpty>
		<isNotEmpty prepend="" property="map.is_fgs"> 
			SELECT t.*, a.store_name AS store_name,a.store_type AS store_type,a.store_addr AS store_addr,b.pd_name AS pd_name,
                       a.DEPT_ID as dept_id
                FROM ec_stocks t LEFT JOIN ec_base_store a ON t.store_id = a.store_id LEFT JOIN konka_bcomp_pd b ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=2 and (a.DEPT_ID in <iterate close=")" open="(" conjunction="," property="map.is_fgs">#map.is_fgs[]#</iterate> or a.DEPT_ID = 0 ) and a.own_sys = #map.own_sys#
				 union
                 SELECT t.*, a.store_name AS store_name,
                       a.store_type AS store_type,
                       a.store_addr AS store_addr,
                       b.pd_name AS pd_name,
                       a.DEPT_ID as dept_id
                  FROM ec_stocks t
                       LEFT JOIN ec_base_store a
                          ON t.store_id = a.store_id
                       LEFT JOIN konka_bcomp_pd b
                          ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=0 and (a.DEPT_ID in <iterate close=")" open="(" conjunction="," property="map.is_fgs">#map.is_fgs[]#</iterate> or a.DEPT_ID =0 ) and a.own_sys = #map.own_sys#
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.store_type">a.store_type=#map.store_type#</isNotEmpty>
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>
	
	<select id="selectEcStocksForStoreTypeNewCount" resultClass="long" parameterClass="ecStocks" cacheModel="oneDayCache">
		select count(*) from (
		<isNotEmpty prepend="" property="map.is_zb">
		select t.*,a.store_name as store_name,a.store_type as store_type,a.store_addr as store_addr,b.pd_name as pd_name,
                       a.DEPT_ID as dept_id
		from ec_stocks t left join ec_base_store a on t.store_id = a.store_id left join konka_bcomp_pd b on t.GOODS_ID=b.ID where 1 = 1 and a.own_sys = #map.own_sys#
		<include refid="sf-ecStocks-t" />
		</isNotEmpty>
		<isNotEmpty prepend="" property="map.is_fgs">
			SELECT t.*, a.store_name AS store_name,a.store_type AS store_type,a.store_addr AS store_addr,b.pd_name AS pd_name,
                       a.DEPT_ID as dept_id
               FROM ec_stocks t LEFT JOIN ec_base_store a ON t.store_id = a.store_id LEFT JOIN konka_bcomp_pd b ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=2 and (a.DEPT_ID in <iterate close=")" open="(" conjunction="," property="map.is_fgs">#map.is_fgs[]#</iterate> or a.DEPT_ID  = 0 ) and a.own_sys = #map.own_sys#
                 union
                 SELECT t.*, a.store_name AS store_name,
                       a.store_type AS store_type,
                       a.store_addr AS store_addr,
                       b.pd_name AS pd_name,
                       a.DEPT_ID as dept_id
                  FROM ec_stocks t
                       LEFT JOIN ec_base_store a
                          ON t.store_id = a.store_id
                       LEFT JOIN konka_bcomp_pd b
                          ON t.GOODS_ID = b.ID
                 WHERE 1 = 1 <include refid="sf-ecStocks-t" /> and a.STORE_TYPE=0 and (a.DEPT_ID in <iterate close=")" open="(" conjunction="," property="map.is_fgs">#map.is_fgs[]#</iterate> or a.DEPT_ID  = 0 ) and a.own_sys = #map.own_sys#
		</isNotEmpty>
		)
	</select>
	
	
	

	<select id="selectEcStocksCount" resultClass="long" parameterClass="ecStocks" cacheModel="oneDayCache">
		select count(*) from EC_STOCKS where 1 = 1
		<include refid="sf-ecStocks" />
	</select>

	<!-- add by Jiang,JiaYong 2013-09-13 -->
	<select id="selectEcStocksWithGoodsIdAndPindexList" resultMap="ecStocksIncludePindexResultList" parameterClass="ecStocks" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
			SELECT * FROM 
			   (SELECT t1.*, t2.STORE_TYPE, t3.PINDEX_ID, t3.P_NAME FROM EC_STOCKS t1, EC_BASE_STORE t2, EC_STORE_AREA t3
				 WHERE t1.STORE_ID = t2.STORE_ID AND t2.STORE_ID = t3.STORE_ID AND t2.STORE_TYPE = 2 AND t2.IS_DEL = 0 AND t3.IS_DEL = 0
					  <isNotEmpty property="map.own_sys"> and t2.own_sys= #map.own_sys:DECIMAL# 
					  <isNotEmpty property="map.dept_id"> and t2.dept_id= #map.dept_id:DECIMAL# </isNotEmpty>
					  <isNotEmpty property="map.dept_id_array"> and t2.dept_id in <iterate close=")" open="(" conjunction="," property="map.dept_id_array">#map.dept_id_array[]#</iterate> </isNotEmpty>
					  </isNotEmpty>
					  <isNotEmpty property="map.pindex_type_2_in"> 
				 	   AND t3.PINDEX_ID in <iterate close=")" open="(" conjunction="," property="map.pindex_type_2_in">#map.pindex_type_2_in[]#</iterate>
					  </isNotEmpty> 
					   AND t1.GOODS_ID = #goods_id:DECIMAL#
				UNION
				SELECT t1.*, t2.STORE_TYPE, t3.PINDEX_ID, t3.P_NAME FROM EC_STOCKS t1, EC_BASE_STORE t2, EC_STORE_AREA t3
				 WHERE t1.STORE_ID = t2.STORE_ID AND t2.STORE_ID = t3.STORE_ID AND t2.STORE_TYPE = 1 AND t2.IS_DEL = 0 AND t3.IS_DEL = 0
					   and t2.own_sys =1
					   <isNotEmpty property="map.pindex_type_1_in"> 
				 	   AND t3.PINDEX_ID in <iterate close=")" open="(" conjunction="," property="map.pindex_type_1_in">#map.pindex_type_1_in[]#</iterate>
					   </isNotEmpty>
					   AND t1.GOODS_ID = #goods_id:DECIMAL#
				UNION
				SELECT t1.*, t2.STORE_TYPE, '' as PINDEX_ID, '' as P_NAME FROM EC_STOCKS t1, EC_BASE_STORE t2
				 WHERE t1.STORE_ID = t2.STORE_ID AND t2.STORE_TYPE = 0 AND t2.IS_DEL = 0	 
					   and t2.own_sys =1
					   AND t1.GOODS_ID = #goods_id:DECIMAL#) t
			ORDER BY t.STORE_TYPE DESC
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	
	<select id="selectEcStocksWithGoodsIdAndPindexNewList" resultMap="ecStocksIncludePindexNewResultList" parameterClass="ecStocks" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
			SELECT xx.*
  FROM (
  <isNotEmpty property="map.plat_sys_eq_1">
  SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE     t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = #map.dept_id:DECIMAL#
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 1
               AND a.STORE_TYPE = 0
              <![CDATA[ and t.STOCKS > 0 ]]>
        UNION
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE     t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = #map.dept_id:DECIMAL#
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 0
               AND a.STORE_TYPE = 0
               <![CDATA[ and t.STOCKS > 0 ]]>
        UNION
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE    t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = 0
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 0
               AND a.STORE_TYPE = 0
               <![CDATA[ and t.STOCKS > 0 ]]>
        UNION
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE     t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = #map.dept_id:DECIMAL#
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 1
               AND a.STORE_TYPE = 2
               <![CDATA[ and t.STOCKS > 0 ]]>
        UNION
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE     t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = #map.dept_id:DECIMAL#
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 0
               AND a.STORE_TYPE = 2 
               <![CDATA[ and t.STOCKS > 0 ]]>
         </isNotEmpty> 
         <isNotEmpty property="map.plat_sys_eq_0">
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE     t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = #map.dept_id:DECIMAL#
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 0
               AND a.STORE_TYPE = 0
               <![CDATA[ and t.STOCKS > 0 ]]>
        UNION
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE    t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = 0
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 0
               AND a.STORE_TYPE = 0
               <![CDATA[ and t.STOCKS > 0 ]]>
        UNION
        SELECT t.*, a.STORE_TYPE
          FROM    EC_STOCKS t
               LEFT JOIN
                  EC_BASE_STORE a
               ON t.STORE_ID = a.STORE_ID
         WHERE     t.GOODS_ID = #goods_id:DECIMAL#
               AND a.DEPT_ID = #map.dept_id:DECIMAL#
               AND a.OWN_SYS =  #map.own_sys:DECIMAL#
               AND a.PLAT_SYS = 0
               AND a.STORE_TYPE = 2 
               <![CDATA[ and t.STOCKS > 0 ]]>
         </isNotEmpty>       
               ) xx order by xx.STOCKS DESC
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	
	
	<select id="selectEcStocksForYzCount" resultClass="long" parameterClass="ecStocks" cacheModel="oneDayCache">
		select count(*)  FROM ec_stocks t LEFT JOIN EC_BASE_STORE a ON t.STORE_ID = a.STORE_ID LEFT JOIN KONKA_BCOMP_PD b ON t.GOODS_ID = b.ID where 1=1
		<include refid="sf-ecStocks-t" />
		<isNotEmpty prepend=" and " property="map.store_type">
			b.store_type=#map.store_type#
		</isNotEmpty>
	</select>
	
	<select id="selectEcStocksForYzList" resultMap="ecStocksResultForList" parameterClass="ecStocks" cacheModel="oneDayCache">
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select t.* from EC_STOCKS t left join EC_BASE_STORE a ON t.STORE_ID = a.STORE_ID LEFT JOIN KONKA_BCOMP_PD b ON t.GOODS_ID = b.ID where 1 = 1
		<include refid="sf-ecStocks-t" />
		<isNotEmpty prepend=" and " property="map.own_sys">a.own_sys=#map.own_sys#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.dept_id">a.dept_id=#map.dept_id#</isNotEmpty>
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectEcStocksPaginatedList" resultMap="ecStocksResult" parameterClass="ecStocks" cacheModel="oneDayCache">
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from EC_STOCKS where 1 = 1
		<include refid="sf-ecStocks" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertEcStocks" parameterClass="ecStocks">
		<![CDATA[insert into EC_STOCKS (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="store_id">STORE_ID</isNotNull>	
			<isNotNull prepend="," property="goods_id">GOODS_ID</isNotNull>	
			<isNotNull prepend="," property="stocks">STOCKS</isNotNull>	
			<isNotNull prepend="," property="total_cost">TOTAL_COST</isNotNull>	
			<isNotNull prepend="," property="plat_sys">PLAT_SYS</isNotNull>
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="store_id">#store_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="goods_id">#goods_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="stocks">#stocks:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="total_cost">#total_cost:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="plat_sys">#plat_sys:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateEcStocks" parameterClass="EcStocks">
		update EC_STOCKS
		<dynamic prepend="set">
			<isNotNull prepend="," property="store_id">STORE_ID = #store_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="goods_id">GOODS_ID = #goods_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="stocks">STOCKS = #stocks:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="total_cost">TOTAL_COST = #total_cost:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="plat_sys">PLAT_SYS = #plat_sys:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="store_id">STORE_ID = #store_id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="goods_id">GOODS_ID = #goods_id#</isNotEmpty>
		<isEmpty prepend=" " property="store_id">
			<isNotEmpty prepend=" " property="map.pks">
				STORE_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>
	
	<update id="updateEcStocksForSale" parameterClass="EcStocks">
		update EC_STOCKS set STOCKS = value(STOCKS, 0) - #stocks:DECIMAL# where STORE_ID = #store_id# and GOODS_ID = #goods_id#
	</update>

	<delete id="deleteEcStocks" parameterClass="EcStocks">
		delete from EC_STOCKS where
		<isNotEmpty prepend=" " property="store_id">STORE_ID = #store_id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="goods_id">GOODS_ID = #goods_id#</isNotEmpty>
		<isEmpty prepend=" " property="store_id">
			<isNotEmpty prepend=" " property="map.pks">
				STORE_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>