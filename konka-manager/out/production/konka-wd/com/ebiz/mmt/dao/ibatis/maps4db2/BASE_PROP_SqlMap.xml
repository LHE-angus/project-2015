<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BASE_PROP">

	<typeAlias alias="baseProp" type="com.ebiz.mmt.domain.BaseProp" />

	

	<resultMap id="basePropResultForList" class="baseProp">
		<result column="PROP_ID" property="prop_id" jdbcType="DECIMAL" />
		<result column="PROP_NAME" property="prop_name" jdbcType="VARCHAR" />
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="CATEGORY_ID" property="category_id" jdbcType="DECIMAL" />
		<result column="PROP_UNIT" property="prop_unit" jdbcType="VARCHAR" />
		<result column="IS_REQUIRED" property="is_required" jdbcType="DECIMAL" />
		<result column="PROP_TYPE" property="prop_type" jdbcType="DECIMAL" />
		<result column="PROP_VAL_TYPE" property="prop_val_type" jdbcType="DECIMAL" />
		<result column="PROP_VAL_MIN" property="prop_val_min" jdbcType="DECIMAL" />
		<result column="PROP_VAL_MAX" property="prop_val_max" jdbcType="DECIMAL" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		<result column="ADD_DATE" property="add_date" jdbcType="DATETIME" />
		<result column="ORDER_VALUE" property="order_value" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
		<result column="LAST_EDIT_DATE" property="last_edit_date" jdbcType="DATETIME" />
		<result column="V_N" property="v_n" jdbcType="DECIMAL" />
		<result column="IS_LOCKED" property="is_locked" jdbcType="DECIMAL" />
		<result column="LOCK_USER_ID" property="lock_user_id" jdbcType="DECIMAL" />
		<result column="AUDIT_STATE" property="audit_state" jdbcType="DECIMAL" />
		<result column="AUDIT_USER_ID" property="audit_user_id" jdbcType="DECIMAL" />
		<result column="ADD_PE_USER_ID" property="add_pe_user_id" jdbcType="DECIMAL" />
		<result column="ADD_PE_ENTP_ID" property="add_pe_entp_id" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="basePropResult" class="baseProp" extends="basePropResultForList">
	</resultMap>
	
	<resultMap id="basePropResultWithNameForList" class="baseProp" extends="basePropResultForList">
		<result column="CLS_NAME" property="map.cls_name" jdbcType="VARCHAR" />
		<result column="CATEGORY_NAME" property="map.category_name" jdbcType="VARCHAR" />
		<result column="ENTP_NAME" property="map.entp_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="basePropWithCateNameResultForList" class="baseProp" extends="basePropResultForList">
		<result column="CATEGORY_NAME" property="map.category_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="basePropByTreeNameResultForList" class="baseProp">
		<result column="TOTAL_PROP_NAME" property="map.total_prop_name" jdbcType="VARCHAR" />
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="TREE_NAME" property="map.tree_name" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-baseProp">
		<isNotEmpty prepend=" and " property="prop_id">PROP_ID = #prop_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prop_name">PROP_NAME = #prop_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="category_id">CATEGORY_ID = #category_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prop_unit">PROP_UNIT = #prop_unit:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_required">IS_REQUIRED = #is_required:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prop_type">PROP_TYPE = #prop_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prop_val_type">PROP_VAL_TYPE = #prop_val_type:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prop_val_min">PROP_VAL_MIN = #prop_val_min:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="prop_val_max">PROP_VAL_MAX = #prop_val_max:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="memo">MEMO = #memo:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_date">ADD_DATE = #add_date:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="last_edit_date">LAST_EDIT_DATE = #last_edit_date:DATETIME#</isNotEmpty>
		<isNotEmpty prepend=" and " property="v_n">V_N = #v_n:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_locked">IS_LOCKED = #is_locked:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="lock_user_id">LOCK_USER_ID = #lock_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_state">AUDIT_STATE = #audit_state:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="audit_user_id">AUDIT_USER_ID = #audit_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_pe_user_id">ADD_PE_USER_ID = #add_pe_user_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="add_pe_entp_id">ADD_PE_ENTP_ID = #add_pe_entp_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.par_cls_id">CLS_ID in 
		(select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.par_id = t.cls_id)
		</isNotEmpty>
		
	</sql>

	<select id="selectBaseProp" resultMap="basePropResult" parameterClass="baseProp" >
		select * from KONKA_BASE_PROP where 1 = 1
		<include refid="sf-baseProp" />
	</select>

	<select id="selectBasePropList" resultMap="basePropResultForList" parameterClass="baseProp" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_BASE_PROP where 1 = 1
		<include refid="sf-baseProp" />
		<isNotEmpty prepend=" and " property="map.cls_id_like">
			cls_id in (select cls_id from KONKA_BASE_PD_CLASS
			 start with CLS_ID = #map.cls_id_like:VARCHAR#
        	 connect by prior par_id = cls_id
 		and is_del = 0)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.prop_id_not_eq">
				prop_id != #map.prop_id_not_eq:VARCHAR#
		</isNotEmpty>
		<!-- order by ID asc -->
		order by prop_id desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectBasePropWithTreeNameList" resultMap="basePropByTreeNameResultForList" parameterClass="baseProp" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select aa.*, bb.tree_name
		  from (select t1.cls_id,
		               to_char(listagg(t1.prop_name, ',')) total_prop_name
		          from (select t.cls_id, t.prop_name, t.order_value
		                  from KONKA_BASE_PROP t
		                  where 1 = 1
		                  <isNotEmpty prepend=" and " property="map.par_cls_id">t.CLS_ID in 
							(select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.par_id = t.cls_id)
						  </isNotEmpty>
		                 order by t.order_value desc, t.prop_id) t1
		         group by t1.cls_id) aa
		  left join konka_base_pd_clazz bb on aa.cls_id = bb.cls_id
  		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectBasePropWithCateNameList" resultMap="basePropWithCateNameResultForList" parameterClass="baseProp" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
			select value(bpc.category_name, 'default') category_name, bp.*
			from konka_base_prop bp
			left join konka_base_prop_category bpc on bp.category_id = bpc.category_id
			where 1 = 1
			<isNotEmpty prepend=" and " property="is_del">bp.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
			<isNotEmpty prepend=" and " property="map.par_cls_id">bp.CLS_ID in 
			(select t.cls_id from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.par_id = t.cls_id)
			</isNotEmpty>
		    order by bpc.order_value desc  , bp.order_value desc 
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectBasePropCount" resultClass="long" parameterClass="baseProp" >
		select count(*) from (
		select bp.*,bdc.cls_name,bpc.category_name from KONKA_BASE_PROP bp
		 left join KONKA_BASE_PD_CLASS bdc on bp.cls_id = bdc.cls_id
		 left join KONKA_BASE_PROP_CATEGORY bpc on bp.cls_id = bpc.cls_id and bp.category_id = bpc.category_id
		 where 1 = 1
		<isNotEmpty prepend=" and " property="is_del">bp.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.prop_name_like">PROP_NAME LIKE '%' || #map.prop_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cls_id">
			bp.CLS_ID in 
			(select t.cls_id from konka_base_pd_class t start with t.cls_id = #map.cls_id:DECIMAL# connect by prior t.cls_id = t.par_id)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_name_like">CATEGORY_NAME like '%' || #map.category_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.prod_entp_name_like">ADD_PE_ENTP_ID IN (SELECT ENTP_ID FROM KONKA_ENTP_PROD WHERE UPPER(ENTP_NAME) LIKE '%' || #map.prod_entp_name_like:VARCHAR# || '%')</isNotEmpty>
		)
	</select>

	<select id="selectBasePropPaginatedList" resultMap="basePropResultWithNameForList" parameterClass="baseProp" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select bp.*,bdc.cls_name,bpc.category_name,ep.entp_name from KONKA_BASE_PROP bp
		 left join KONKA_BASE_PD_CLASS bdc on bp.cls_id = bdc.cls_id
		 left join KONKA_BASE_PROP_CATEGORY bpc on bp.category_id = bpc.category_id
		 left join KONKA_ENTP_PROD ep on bp.add_pe_entp_id = ep.entp_id
		 where 1 = 1
		<isNotEmpty prepend=" and " property="is_del">bp.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.prop_name_like">PROP_NAME LIKE '%' || #map.prop_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cls_id">
			bp.CLS_ID in 
			(select t.cls_id from konka_base_pd_class t start with t.cls_id = #map.cls_id:DECIMAL# connect by prior t.cls_id = t.par_id)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.category_name_like">CATEGORY_NAME like '%' || #map.category_name_like:VARCHAR# || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.prod_entp_name_like">ADD_PE_ENTP_ID IN (SELECT ENTP_ID FROM KONKA_ENTP_PROD WHERE UPPER(ENTP_NAME) LIKE '%' || #map.prod_entp_name_like:VARCHAR# || '%')</isNotEmpty>
		<!-- order by ID asc -->
		order by bp.order_value desc, bp.add_pe_entp_id desc
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertBaseProp" parameterClass="baseProp">
		<selectKey resultClass="long" keyProperty="prop_id">select KONKA_PROD_ENTP_SEQUENCE.nextval as prop_id from dual </selectKey>
		<![CDATA[insert into KONKA_BASE_PROP (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="prop_id">PROP_ID</isNotNull>	
			<isNotNull prepend="," property="prop_name">PROP_NAME</isNotNull>	
			<isNotNull prepend="," property="cls_id">CLS_ID</isNotNull>	
			<isNotNull prepend="," property="category_id">CATEGORY_ID</isNotNull>	
			<isNotNull prepend="," property="prop_unit">PROP_UNIT</isNotNull>	
			<isNotNull prepend="," property="is_required">IS_REQUIRED</isNotNull>	
			<isNotNull prepend="," property="prop_type">PROP_TYPE</isNotNull>	
			<isNotNull prepend="," property="prop_val_type">PROP_VAL_TYPE</isNotNull>	
			<isNotNull prepend="," property="prop_val_min">PROP_VAL_MIN</isNotNull>	
			<isNotNull prepend="," property="prop_val_max">PROP_VAL_MAX</isNotNull>	
			<isNotNull prepend="," property="memo">MEMO</isNotNull>	
			<isNotNull prepend="," property="order_value">ORDER_VALUE</isNotNull>	
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>	
			<isNotNull prepend="," property="is_locked">IS_LOCKED</isNotNull>	
			<isNotNull prepend="," property="lock_user_id">LOCK_USER_ID</isNotNull>	
			<isNotNull prepend="," property="audit_state">AUDIT_STATE</isNotNull>	
			<isNotNull prepend="," property="audit_user_id">AUDIT_USER_ID</isNotNull>	
			<isNotNull prepend="," property="add_pe_user_id">ADD_PE_USER_ID</isNotNull>	
			<isNotNull prepend="," property="add_pe_entp_id">ADD_PE_ENTP_ID</isNotNull>	
			,V_N,ADD_DATE
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="prop_id">#prop_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_name">#prop_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="cls_id">#cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="category_id">#category_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_unit">#prop_unit:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_required">#is_required:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_type">#prop_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_val_type">#prop_val_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_val_min">#prop_val_min:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_val_max">#prop_val_max:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="memo">#memo:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="order_value">#order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_locked">#is_locked:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="lock_user_id">#lock_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_state">#audit_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_user_id">#audit_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_pe_user_id">#add_pe_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="add_pe_entp_id">#add_pe_entp_id:DECIMAL#</isNotNull>
			,to_number(to_char(sysdate, 'yyyymmddhh24miss')),sysdate
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateBaseProp" parameterClass="BaseProp">
		update KONKA_BASE_PROP
		<dynamic prepend="set">
			<isNotNull prepend="," property="prop_id">PROP_ID = #prop_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_name">PROP_NAME = #prop_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="category_id">CATEGORY_ID = #category_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_unit">PROP_UNIT = #prop_unit:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_required">IS_REQUIRED = #is_required:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_type">PROP_TYPE = #prop_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_val_type">PROP_VAL_TYPE = #prop_val_type:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_val_min">PROP_VAL_MIN = #prop_val_min:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="prop_val_max">PROP_VAL_MAX = #prop_val_max:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="memo">MEMO = #memo:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_locked">IS_LOCKED = #is_locked:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="lock_user_id">LOCK_USER_ID = #lock_user_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_state">AUDIT_STATE = #audit_state:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="audit_user_id">AUDIT_USER_ID = #audit_user_id:DECIMAL#</isNotNull>
			<!-- <isNotNull prepend="," property="map.category_id_set_null">CATEGORY_ID = null</isNotNull>  -->
			<isNull prepend="," property="audit_state">V_N=to_number(to_char(sysdate, 'yyyymmddhh24miss'))</isNull>
			,LAST_EDIT_DATE=sysdate
		</dynamic>
		where
		<isNotEmpty prepend=" " property="prop_id">PROP_ID = #prop_id#</isNotEmpty>
		<isEmpty prepend=" " property="prop_id">
			<isNotEmpty prepend=" " property="map.pks">
				PROP_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteBaseProp" parameterClass="BaseProp">
		update KONKA_BASE_PROP set is_del=1,last_edit_date=sysdate  where
		<isNotEmpty prepend=" " property="prop_id">PROP_ID = #prop_id#</isNotEmpty>
		<isEmpty prepend=" " property="prop_id">
			<isNotEmpty prepend=" " property="map.pks">
				PROP_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>