<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BASE_PROP_CATEGORY">

	<typeAlias alias="basePropCategory" type="com.ebiz.mmt.domain.BasePropCategory" />

	

	<resultMap id="basePropCategoryResultForList" class="basePropCategory">
		<result column="CATEGORY_ID" property="category_id" jdbcType="DECIMAL" />
		<result column="CATEGORY_NAME" property="category_name" jdbcType="VARCHAR" />
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="ORDER_VALUE" property="order_value" jdbcType="DECIMAL" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="basePropCategoryResult" class="basePropCategory" extends="basePropCategoryResultForList">
	</resultMap>
	
	<resultMap id="basePropCategoryByNameResultForList" class="basePropCategory">
		<result column="TOTAL_CATEGORY_NAME" property="map.total_category_name" jdbcType="VARCHAR" />
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="TREE_NAME" property="map.tree_name" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="sf-basePropCategory">
		<isNotEmpty prepend=" and " property="category_id">CATEGORY_ID = #category_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="category_name">CATEGORY_NAME = #category_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="memo">MEMO = #memo:VARCHAR#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.category_name_like">UPPER(CATEGORY_NAME) LIKE '%' || UPPER(#map.category_name_like:VARCHAR#) || '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cls_id_par">CLS_ID in 
		(select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.cls_id_par:DECIMAL# connect by prior t.cls_id = t.par_id)
		</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.par_cls_id">CLS_ID in 
		(select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.par_id = t.cls_id)
		</isNotEmpty>
	</sql>

	<select id="selectBasePropCategory" resultMap="basePropCategoryResult" parameterClass="basePropCategory" >
		select * from KONKA_BASE_PROP_CATEGORY where 1 = 1
		<include refid="sf-basePropCategory" />
	</select>

	<select id="selectBasePropCategoryList" resultMap="basePropCategoryResultForList" parameterClass="basePropCategory" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_BASE_PROP_CATEGORY where 1 = 1
		<include refid="sf-basePropCategory" />
		<!-- order by ID asc -->
		order by order_value desc, category_id desc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>
	
	<select id="selectBasePropCategoryByNameList" resultMap="basePropCategoryByNameResultForList" parameterClass="basePropCategory" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		 select aa.*,bb.tree_name from (select t1.cls_id, to_char(listagg(t1.category_name, ',')) total_category_name
		  from (select t.cls_id, t.category_name, t.order_value
		          from KONKA_BASE_PROP_CATEGORY t
		          where 1 = 1
		          <isNotEmpty prepend=" and " property="map.par_cls_id">t.CLS_ID in 
					(select t.CLS_ID from konka_base_pd_class t start with t.cls_id = #map.par_cls_id:DECIMAL# connect by prior t.par_id = t.cls_id)
				  </isNotEmpty>
		         order by t.order_value desc, t.category_id) t1
		 group by t1.cls_id ) aa
		 left join konka_base_pd_clazz bb on aa.cls_id = bb.cls_id
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectBasePropCategoryCount" resultClass="long" parameterClass="basePropCategory" >
		select count(*) from KONKA_BASE_PROP_CATEGORY where 1 = 1
		<include refid="sf-basePropCategory" />
	</select>

	<select id="selectBasePropCategoryPaginatedList" resultMap="basePropCategoryResult" parameterClass="basePropCategory" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from KONKA_BASE_PROP_CATEGORY where 1 = 1
		<include refid="sf-basePropCategory" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertBasePropCategory" parameterClass="basePropCategory">
		<selectKey resultClass="long" keyProperty="category_id">select KONKA_PROD_ENTP_SEQUENCE.nextval as category_id from dual </selectKey>
		<![CDATA[insert into KONKA_BASE_PROP_CATEGORY (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="category_id">CATEGORY_ID</isNotNull>	
			<isNotNull prepend="," property="category_name">CATEGORY_NAME</isNotNull>	
			<isNotNull prepend="," property="cls_id">CLS_ID</isNotNull>	
			<isNotNull prepend="," property="order_value">ORDER_VALUE</isNotNull>	
			<isNotNull prepend="," property="memo">MEMO</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="category_id">#category_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="category_name">#category_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="cls_id">#cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="order_value">#order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="memo">#memo:VARCHAR#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateBasePropCategory" parameterClass="BasePropCategory">
		update KONKA_BASE_PROP_CATEGORY
		<dynamic prepend="set">
			<isNotNull prepend="," property="category_id">CATEGORY_ID = #category_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="category_name">CATEGORY_NAME = #category_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="memo">MEMO = #memo:VARCHAR#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="category_id">CATEGORY_ID = #category_id#</isNotEmpty>
		<isEmpty prepend=" " property="category_id">
			<isNotEmpty prepend=" " property="map.pks">
				CATEGORY_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteBasePropCategory" parameterClass="BasePropCategory">
		delete from KONKA_BASE_PROP_CATEGORY where
		<isNotEmpty prepend=" " property="category_id">CATEGORY_ID = #category_id#</isNotEmpty>
		<isEmpty prepend=" " property="category_id">
			<isNotEmpty prepend=" " property="map.pks">
				CATEGORY_ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>