<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BASE_PD_CLAZZ">

	<typeAlias alias="basePdClazz" type="com.ebiz.mmt.domain.BasePdClazz" />

	

	<resultMap id="basePdClazzResultForList" class="basePdClazz">
		<result column="CLS_ID" property="cls_id" jdbcType="DECIMAL" />
		<result column="CLS_NAME" property="cls_name" jdbcType="VARCHAR" />
		<result column="TREE_NAME" property="tree_name" jdbcType="VARCHAR" />
		<result column="IS_LEAF" property="is_leaf" jdbcType="DECIMAL" />
		<result column="CLS_LEVEL" property="cls_level" jdbcType="DECIMAL" />
		<result column="PAR_ID" property="par_id" jdbcType="DECIMAL" />
		<result column="PAR_NAME" property="par_name" jdbcType="VARCHAR" />
		<result column="ROOT_ID" property="root_id" jdbcType="DECIMAL" />
		<result column="ROOT_NAME" property="root_name" jdbcType="VARCHAR" />
		<result column="FULL_NAME" property="full_name" jdbcType="VARCHAR" />
		<result column="ORDER_VALUE" property="order_value" jdbcType="DECIMAL" />
		<result column="IS_DEL" property="is_del" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="basePdClazzResult" class="basePdClazz" extends="basePdClazzResultForList">
	</resultMap>

	<resultMap id="basePdClazzWithPropnamesResult" class="basePdClazz" extends="basePdClazzResultForList">
		<result column="PROP_NAMES" property="map.prop_names" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-basePdClazz">
		<isNotEmpty prepend=" and " property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_name">CLS_NAME = #cls_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="tree_name">TREE_NAME = #tree_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_leaf">IS_LEAF = #is_leaf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_level">CLS_LEVEL = #cls_level:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="par_id">PAR_ID = #par_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="par_name">PAR_NAME = #par_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="root_id">ROOT_ID = #root_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="root_name">ROOT_NAME = #root_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="full_name">FULL_NAME = #full_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">IS_DEL = #is_del:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" " property="map.cls_id_like">start with CLS_ID = #map.cls_id_like:VARCHAR# connect by prior par_id = cls_id</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.cls_id_substr_3">substr(cls_id,0,3) = #map.cls_id_substr_3#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="map.cls_ids">CLS_ID in 
		   <iterate close=")" open="(" conjunction="," property="map.cls_ids">#map.cls_ids[]#</iterate>
		</isNotEmpty>
	</sql>

	<sql id="sf-basePdClazz-pre_t">
		<isNotEmpty prepend=" and " property="cls_id">t.CLS_ID = #cls_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_name">t.CLS_NAME = #cls_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="tree_name">t.TREE_NAME = #tree_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_leaf">t.IS_LEAF = #is_leaf:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="cls_level">t.CLS_LEVEL = #cls_level:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="par_id">t.PAR_ID = #par_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="par_name">t.PAR_NAME = #par_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="root_id">t.ROOT_ID = #root_id:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="root_name">t.ROOT_NAME = #root_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="full_name">t.FULL_NAME = #full_name:VARCHAR#</isNotEmpty>
		<isNotEmpty prepend=" and " property="order_value">t.ORDER_VALUE = #order_value:DECIMAL#</isNotEmpty>
		<isNotEmpty prepend=" and " property="is_del">t.IS_DEL = #is_del:DECIMAL#</isNotEmpty>
	</sql>

	<select id="selectBasePdClazz" resultMap="basePdClazzResult" parameterClass="basePdClazz" >
		select * from KONKA_BASE_PD_CLAZZ where 1 = 1
		<include refid="sf-basePdClazz" />
	</select>

	<select id="selectBasePdClazzList" resultMap="basePdClazzResultForList" parameterClass="basePdClazz" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select * from KONKA_BASE_PD_CLAZZ where 1 = 1
		<isNotEmpty prepend=" and " property="map.getOwnDeptCls">
			cls_id in (select a.cls_id from konka_dept_pd_link a where a.dept_id = #map.dept_id#)
		</isNotEmpty>
		<include refid="sf-basePdClazz" />
		<!-- order by ID asc -->
		order by cls_id asc
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectBasePdClazzWithPropnamesList" resultMap="basePdClazzWithPropnamesResult" parameterClass="basePdClazz" >
		<isNotEmpty property="row.count">
			<![CDATA[ select * from ( ]]>
		</isNotEmpty>
		select t.*, t2.prop_names
		  from konka_base_pd_clazz t
		  left join (select t1.cls_id, to_char(listagg(t1.prop_name, ',')) prop_names
		               from (select t.cls_id, t.prop_name, t.order_value
		                       from KONKA_BASE_PROP t
		                      order by t.order_value desc, t.category_id) t1
		              group by t1.cls_id) t2 on t.cls_id = t2.cls_id
		<include refid="sf-basePdClazz-pre_t" />
		order by t.cls_id, t.cls_id
		<isNotEmpty property="row.count">
			<![CDATA[ ) where rownum <= #row.count# ]]>
		</isNotEmpty>
	</select>

	<select id="selectBasePdClazzCount" resultClass="long" parameterClass="basePdClazz" >
		select count(*) from KONKA_BASE_PD_CLAZZ where 1 = 1
		<include refid="sf-basePdClazz" />
	</select>

	<select id="selectBasePdClazzPaginatedList" resultMap="basePdClazzResult" parameterClass="basePdClazz" >
		<![CDATA[ select * from ( select t_.*, rownum rn_ from ( ]]>
		select * from KONKA_BASE_PD_CLAZZ where 1 = 1
		<include refid="sf-basePdClazz" />
		<!-- order by ID asc -->
		<![CDATA[ ) t_ where rownum <= (#row.first# + #row.count#)) where rn_ >= (#row.first# + 1) ]]>
	</select>

	<insert id="insertBasePdClazz" parameterClass="basePdClazz">
		<selectKey resultClass="long" keyProperty="id">select seq_xxx.nextval as id from dual </selectKey>
		<![CDATA[insert into KONKA_BASE_PD_CLAZZ (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="cls_id">CLS_ID</isNotNull>	
			<isNotNull prepend="," property="cls_name">CLS_NAME</isNotNull>	
			<isNotNull prepend="," property="tree_name">TREE_NAME</isNotNull>	
			<isNotNull prepend="," property="is_leaf">IS_LEAF</isNotNull>	
			<isNotNull prepend="," property="cls_level">CLS_LEVEL</isNotNull>	
			<isNotNull prepend="," property="par_id">PAR_ID</isNotNull>	
			<isNotNull prepend="," property="par_name">PAR_NAME</isNotNull>	
			<isNotNull prepend="," property="root_id">ROOT_ID</isNotNull>	
			<isNotNull prepend="," property="root_name">ROOT_NAME</isNotNull>	
			<isNotNull prepend="," property="full_name">FULL_NAME</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE</isNotNull>	
			<isNotNull prepend="," property="is_del">IS_DEL</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="cls_id">#cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cls_name">#cls_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="tree_name">#tree_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_leaf">#is_leaf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cls_level">#cls_level:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="par_id">#par_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="par_name">#par_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="root_id">#root_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="root_name">#root_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="full_name">#full_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="order_value">#order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">#is_del:DECIMAL#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
	</insert>

	<update id="updateBasePdClazz" parameterClass="BasePdClazz">
		update KONKA_BASE_PD_CLAZZ
		<dynamic prepend="set">
			<isNotNull prepend="," property="cls_id">CLS_ID = #cls_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cls_name">CLS_NAME = #cls_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="tree_name">TREE_NAME = #tree_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="is_leaf">IS_LEAF = #is_leaf:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="cls_level">CLS_LEVEL = #cls_level:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="par_id">PAR_ID = #par_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="par_name">PAR_NAME = #par_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="root_id">ROOT_ID = #root_id:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="root_name">ROOT_NAME = #root_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="full_name">FULL_NAME = #full_name:VARCHAR#</isNotNull>
			<isNotNull prepend="," property="order_value">ORDER_VALUE = #order_value:DECIMAL#</isNotNull>
			<isNotNull prepend="," property="is_del">IS_DEL = #is_del:DECIMAL#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteBasePdClazz" parameterClass="BasePdClazz">
		delete from KONKA_BASE_PD_CLAZZ where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>